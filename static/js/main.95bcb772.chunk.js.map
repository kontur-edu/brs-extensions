{"version":3,"sources":["components/SubmitWithLoading.tsx","helpers/cache.ts","apis/brsAuth.ts","apis/brsUrlProvider.ts","components/CustomAlert.tsx","apis/googleAuth.ts","LoginPage.tsx","components/NestedList.tsx","apis/brsApi.ts","helpers/tools.ts","workPage/DisciplinesFetch.tsx","apis/googleApi.ts","functions/readStudentsAsync.ts","functions/buildMarksAutoAsync.ts","functions/putMarksToBrsAsync.ts","workPage/SpreadsheetFetch.tsx","helpers/logger.ts","helpers/fio.ts","workPage/WorkerDialog.tsx","workPage/UnauthorizedAlert.tsx","workPage/WorkPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SubmitWithLoading","props","title","loading","className","onClick","disabled","Button","type","fullWidth","variant","color","CircularProgress","size","localCache","save","name","data","json","JSON","stringify","localStorage","setItem","read","localData","content","getItem","fileData","parse","BrsAuth","brsUrlProvider","_sid","_login","this","loginInfo","cache","Error","sid","login","loadLoginInfo","password","request","url","baseUrl","method","body","resolveWithFullResponse","simple","headers","response","sessionCookie","split","substr","length","trim","BrsUrlProvider","withProxy","brsUrl","corsProxy","Alert","elevation","CustomAlert","open","message","onClose","Fragment","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","severity","onAuthStatusChangedEvent","onErrorEvent","CLIENT_ID","DISCOVERY_DOCS","SCOPES","init","a","gapi","auth2","Promise","res","load","client","clientId","discoveryDocs","scope","then","getAuthInstance","isSignedIn","listen","googleAuth","onAuthStatusChanged","onError","signIn","checkAuth","get","brsAuth","LoginPage","credentials","state","brsAuthorized","googleAuthorized","redirect","submitLoading","alertInfo","username","onFieldChanged","bind","onSubmit","loginBrs","closeAlert","loginGoogle","startWork","setState","e","field","target","id","value","preventDefault","loginSucceed","authAsync","to","Container","component","maxWidth","Grid","container","justify","item","md","lg","sm","xs","TextField","margin","required","label","autoFocus","onChange","autoComplete","React","Component","useStyles","makeStyles","theme","createStyles","root","width","backgroundColor","palette","background","default","nested","paddingLeft","spacing","onEmptyMessage","textAlign","NestedListItem","collapsed","useState","setOpen","classes","ListItem","button","ListItemIcon","ListItemText","primary","nestedItems","undefined","map","nestedItemTitle","index","Collapse","in","timeout","unmountOnExit","List","disablePadding","NestedList","items","aria-labelledby","subheader","ListSubheader","hidden","StudentFailure","TermType","BrsApi","year","termType","course","isModule","cacheName","cacheResult","getDisciplineInternalAsync","result","queryString","requestApiJsonAsync","disciplines","paging","discipline","getStudentMarksAsync","students","uniqueStudents","s","knownStudent","studentUuid","Object","keys","k","cardType","markType","getStudentMarksInternalAsync","disciplineLoad","groupHistoryId","groupId","groupUuid","techgroup","isTotal","showActiveStudents","groupPart","getControlActionsCachedAsync","getControlActionsInternalAsync","modulePart","requestApiAsync","prefix","suffix","linesWithId","filter","startsWith","columns","uuidPrefix","c","uuid","uuidWithoutPrefix","controlAction","controlActionId","mark","cardTypeKey","disciplineLoadUuid","isNaN","toString","studentFailure","NoFailure","updateMarksAsync","updateMarksInternalAsync","uri","options","trimLeft","normalizeString","str","toLowerCase","replace","compareNormalized","s1","s2","parseAnyFloat","parseFloat","minWidth","marginRight","submit","display","top","marginTop","header","marginBottom","DisciplinesFetch","brsApi","onUnauthorized","openDisciplines","setOpenDisciplines","setLoading","setDisciplines","handleChange","event","checked","term","Fall","Spring","getDisciplineCachedAsync","rawDisciplines","convertToListItems","entries","key","reduce","reducer","itemKey","push","d","x","group","FormControl","InputLabel","Select","MenuItem","FormControlLabel","control","Checkbox","authorizeAsync","getSpreadsheet","spreadsheetId","sheets","range","spreadsheets","values","readAsync","writeAsync","asEnteredByUser","valueInputOption","requestBody","update","appendAsync","append","fromSpreadsheetAsync","readRange","fullNameIndex","groupNameIndex","idIndex","googleApi","sheet","rows","row","fullName","groupName","properties","buildMarksAutoAsync","sheetName","isSuitableDiscipline","isSuitableActualStudent","readHeaderFromSpreadsheetAsync","indices","buildIndicesBy","dataRange","buildDataRange","controlActionConfigs","buildControlActionConfig","disciplineConfig","buildDisciplineConfig","readStudents","fullNameColumn","left","groupColumn","allActualStudents","actualStudents","normalizedHeader","groupColumnIndex","indexOf","fullNameColumnIndex","disciplineColumnIndex","findIndex","rightIndex","Math","abs","disciplineColumn","min","right","leftLetter","String","fromCharCode","charCodeAt","rightLetter","controlActions","propertyIndex","config","sameColumns","matchCount","matchIndex","keyValue","p","normalizedKey","parseInt","logger","SpreadsheetFetch","tableUrl","tableUrlError","error","moduleGroups","loadTable","marksData","groups","Array","from","Set","getSpreadsheetInfo","spreadsheetInfo","moduleGroup","prepareModuleGroup","onDataLoaded","call","match","helperText","Logger","logProviders","errorProviders","logProvider","errorProvider","errorMessage","toKey","fio","putMarksToBrsAsync","brsApiLocal","loggerLocal","allDisciplines","putMarksForDisciplineAsync","cancelPending","log","getAllControlActionsCachedAsync","checkControlActionsConfiguration","getAllStudentMarksAsync","brsStudents","mergeStudents","mergedStudents","skippedActualStudents","skippedBrsStudents","logMergedStudents","putMarksForStudentsAsync","getSuitableControlAction","statusCounters","student","putMarksForStudentAsync","status","updated","failed","marks","brsMark","brs","actualMark","actual","verbose","studentName","join","suitableControlActions","some","b","activeBrsStudents","isStudentActive","actualStudent","suitableStudents","brsStudent","brsFullName","studentFio","actualFullName","areStudentsLike","ms","studentStatus","DialogContent","withStyles","padding","MuiDialogContent","DialogActions","justifyContent","MuiDialogActions","WorkerDialog","workData","okLoading","logItems","cancelWork","logMessage","handleWorkFinished","showError","runWork","addLogProvider","addErrorProvider","endsWith","Dialog","dividers","dense","style","height","onClosed","Transition","forwardRef","ref","Slide","direction","UnauthorizedAlert","setRedirect","TransitionComponent","keepMounted","aria-describedby","DialogTitle","DialogContentText","WorkPage","authorized","showControls","openUnauthorizedAlert","handleDataLoaded","runWorkSafe","handleClosed","handleUnauthorized","handleError","closeError","removeItem","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95bcb772.chunk.js","sourcesContent":["import Button from \"@material-ui/core/Button\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./submitWithLoading.css\";\r\n\r\nexport default function SubmitWithLoading(props: Props) {\r\n    const {title, loading, className, onClick, disabled = false} = props;\r\n\r\n    return (\r\n        <div className={\"submit-with-loading \" + className}>\r\n            <Button type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onClick}\r\n                    disabled={loading || disabled}>\r\n                {title}\r\n            </Button>\r\n            {\r\n                loading &&\r\n                <CircularProgress color=\"secondary\" size={24} className=\"button-progress\"/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface Props {\r\n    title: string;\r\n    loading: boolean;\r\n    className?: string;\r\n    onClick?: () => void;\r\n    disabled?: boolean;\r\n}\r\n","const localCache: { [name: string]: object | string } = {};\r\n\r\nexport function save(name: string, data: object | string) {\r\n    if (!data) {\r\n        return false;\r\n    }\r\n\r\n    const json = JSON.stringify(data);\r\n\r\n    localStorage.setItem(name, json);\r\n\r\n    localCache[name] = data;\r\n\r\n    return true;\r\n}\r\n\r\nexport function read<T extends object | string>(name: string) {\r\n    const localData = localCache[name];\r\n    if (localData) {\r\n        return localData as T;\r\n    }\r\n\r\n    const content = localStorage.getItem(name);\r\n    if (!content) {\r\n        return null;\r\n    }\r\n\r\n    const fileData = JSON.parse(content);\r\n    if (!fileData) {\r\n        return null;\r\n    }\r\n\r\n    localCache[name] = fileData;\r\n    return fileData as T;\r\n}\r\n\r\nexport function clear(name: string) {\r\n    localStorage.removeItem(name);\r\n\r\n    delete localCache[name];\r\n\r\n    return true;\r\n}\r\n","import request from \"request-promise\";\r\nimport BrsUrlProvider from \"./brsUrlProvider\";\r\nimport * as cache from \"../helpers/cache\";\r\n\r\nexport default class BrsAuth {\r\n    private brsUrlProvider: BrsUrlProvider;\r\n    private _sid: string | null = null;\r\n    private _login: string | null = null;\r\n\r\n    constructor(brsUrlProvider: BrsUrlProvider) {\r\n        this.brsUrlProvider = brsUrlProvider;\r\n    }\r\n\r\n    get sid() {\r\n        if (!this._sid)\r\n            this.loadLoginInfo();\r\n        return this._sid;\r\n    }\r\n\r\n    get login() {\r\n        if (!this._login)\r\n            this.loadLoginInfo();\r\n        return this._login;\r\n    }\r\n\r\n    private loadLoginInfo() {\r\n        const loginInfo = cache.read<{ sid: string, login: string }>('loginInfo');\r\n        if (!loginInfo)\r\n            throw new Error('BrsAuth unauthorized');\r\n        this._sid = loginInfo.sid;\r\n        this._login = loginInfo.login;\r\n    }\r\n\r\n    checkAuth() {\r\n        try {\r\n            this.loadLoginInfo();\r\n            return true;\r\n        } catch {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async authAsync(login: string, password: string): Promise<boolean> {\r\n        const response = await request({\r\n            url: this.brsUrlProvider.baseUrl + `/login`,\r\n            method: 'POST',\r\n            body: `username=${login}&password=${password}`,\r\n            resolveWithFullResponse: true,\r\n            simple: false,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            },\r\n        });\r\n\r\n        if (!('x-set-cookie' in response.headers)) {\r\n            return false;\r\n        }\r\n        const sessionCookie = response.headers['x-set-cookie'];\r\n        const sid = (sessionCookie as string)\r\n            .split(';')[0]\r\n            .substr('JSESSIONID='.length)\r\n            .trim();\r\n\r\n        cache.save('loginInfo', {sid, login});\r\n\r\n        return true;\r\n    }\r\n}\r\n","export default class BrsUrlProvider {\r\n    private readonly withProxy: boolean;\r\n    private readonly brsUrl = 'https://brs.urfu.ru/mrd';\r\n    private readonly corsProxy = 'https://kamikoto-cors-proxy.herokuapp.com';\r\n\r\n    constructor(withProxy: boolean) {\r\n        this.withProxy = withProxy;\r\n    }\r\n\r\n    get baseUrl() {\r\n        return this.withProxy ?\r\n            `${this.corsProxy}/${this.brsUrl}` :\r\n            this.brsUrl;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\r\nimport {Snackbar} from \"@material-ui/core\";\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function CustomAlert(props: Props) {\r\n    const {open, message, type, onClose} = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Snackbar\r\n                open={open}\r\n                autoHideDuration={5000}\r\n                anchorOrigin={{vertical: 'top', horizontal: 'center'}}\r\n                onClose={onClose}>\r\n                <Alert severity={type} onClose={onClose}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    message: string;\r\n    type: \"error\" | \"success\";\r\n    onClose: () => void;\r\n}\r\n","const CLIENT_ID = '122993083593-pacve8csj86voko30ia65raeg0ncrtuv.apps.googleusercontent.com';\r\nconst DISCOVERY_DOCS = [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"];\r\nconst SCOPES = \"https://www.googleapis.com/auth/spreadsheets\";\r\n\r\nlet onAuthStatusChangedEvent: (isSignedIn: boolean) => void;\r\nlet onErrorEvent: (error: any) => void;\r\n\r\nconst googleAuth = {\r\n    async init(onAuthStatusChanged?: (isSignedIn: boolean) => void, onError?: (error: any) => void){\r\n        if (onAuthStatusChanged)\r\n            onAuthStatusChangedEvent = onAuthStatusChanged;\r\n        if (onError)\r\n            onErrorEvent = onError;\r\n        await init();\r\n    },\r\n\r\n    signIn() {\r\n        // @ts-ignore\r\n        gapi.auth2.getAuthInstance().signIn();\r\n    },\r\n\r\n    checkAuth() {\r\n        // @ts-ignore\r\n        return gapi.auth2?.getAuthInstance()?.isSignedIn?.get();\r\n    },\r\n};\r\n\r\nasync function init() {\r\n    // @ts-ignore\r\n    if (gapi.auth2)\r\n        return;\r\n    await new Promise(res => {\r\n        gapi.load('client:auth2', async () => {\r\n            await gapi.client.init({\r\n                clientId: CLIENT_ID,\r\n                discoveryDocs: DISCOVERY_DOCS,\r\n                scope: SCOPES\r\n            }).then(() => {\r\n                if (!onAuthStatusChangedEvent)\r\n                    return;\r\n                // @ts-ignore\r\n                const signedIn = gapi.auth2.getAuthInstance().isSignedIn;\r\n                signedIn.listen(onAuthStatusChangedEvent);\r\n            }, onErrorEvent);\r\n            res();\r\n        });\r\n    });\r\n}\r\n\r\nexport default googleAuth;\r\n","import React, {FormEvent} from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport SubmitWithLoading from \"./components/SubmitWithLoading\";\r\nimport BrsAuth from \"./apis/brsAuth\";\r\nimport BrsUrlProvider from \"./apis/brsUrlProvider\";\r\nimport CustomAlert from \"./components/CustomAlert\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport GoogleButton from \"react-google-button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport googleAuth from \"./apis/googleAuth\";\r\nimport \"./login-page.css\";\r\n\r\nconst brsAuth = new BrsAuth(new BrsUrlProvider(true));\r\n\r\nexport default class LoginPage extends React.Component<{}, State> {\r\n    credentials: Credentials;\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            brsAuthorized: false,\r\n            googleAuthorized: false,\r\n            redirect: false,\r\n            submitLoading: false,\r\n            alertInfo: {open: false, message: '', type: 'error'}\r\n        }\r\n\r\n        this.credentials = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n\r\n        this.onFieldChanged = this.onFieldChanged.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.loginBrs = this.loginBrs.bind(this);\r\n        this.closeAlert = this.closeAlert.bind(this);\r\n        this.loginGoogle = this.loginGoogle.bind(this);\r\n        this.startWork = this.startWork.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await googleAuth.init();\r\n        this.setState({\r\n            brsAuthorized: brsAuth.checkAuth(),\r\n            googleAuthorized: googleAuth.checkAuth()\r\n        });\r\n    }\r\n\r\n    onFieldChanged(e: React.ChangeEvent<HTMLInputElement>) {\r\n        const field = e.target\r\n        this.credentials[field.id] = field.value\r\n    }\r\n\r\n    async onSubmit(e: FormEvent) {\r\n        e.preventDefault();\r\n        this.setState({submitLoading: true});\r\n\r\n        const loginSucceed = await this.loginBrs();\r\n\r\n        this.setState({submitLoading: false})\r\n\r\n        if (loginSucceed) {\r\n            this.setState({\r\n                alertInfo: {\r\n                    message: 'Авторизация прошла успешно',\r\n                    open: true,\r\n                    type: 'success'\r\n                },\r\n                brsAuthorized: true\r\n            });\r\n        } else\r\n            this.setState({\r\n                alertInfo: {\r\n                    message: 'Неверные имя пользователя или пароль',\r\n                    open: true,\r\n                    type: 'error'\r\n                }\r\n            });\r\n    }\r\n\r\n    async loginBrs() {\r\n        return await brsAuth.authAsync(this.credentials.username, this.credentials.password);\r\n    }\r\n\r\n    closeAlert() {\r\n        this.setState({alertInfo: {open: false, message: '', type: 'error'}});\r\n    }\r\n\r\n    loginGoogle() {\r\n        googleAuth.signIn();\r\n        this.setState({googleAuthorized: true});\r\n    }\r\n\r\n    startWork() {\r\n        this.setState({redirect: true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                {this.state.redirect && <Redirect to=\"/brs-extensions/work\"/>}\r\n                <Container component=\"main\" maxWidth=\"md\">\r\n                    <h1>Привет!</h1>\r\n                    <h3>Как все работает</h3>\r\n                    <p>Как-то все работает</p>\r\n                    <h3>Правила хранения данных</h3>\r\n                    <p>Данные хранятся в localstorage</p>\r\n                    <hr/>\r\n                    <p>Для начала работы, необходимо авторизоваться в БРС</p>\r\n                    <Grid container justify=\"space-around\">\r\n                        <Grid item md={5} lg={5} sm={5} xs={10}>\r\n                            <form className=\"form\" onSubmit={this.onSubmit}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"username\"\r\n                                    label=\"Имя пользователя\"\r\n                                    name=\"username\"\r\n                                    autoFocus\r\n                                    onChange={this.onFieldChanged}\r\n                                />\r\n                                <TextField variant=\"outlined\"\r\n                                           margin=\"normal\"\r\n                                           required\r\n                                           fullWidth\r\n                                           name=\"password\"\r\n                                           label=\"Пароль\"\r\n                                           type=\"password\"\r\n                                           id=\"password\"\r\n                                           autoComplete=\"current-password\"\r\n                                           onChange={this.onFieldChanged}/>\r\n                                <SubmitWithLoading title=\"войти\" loading={this.state.submitLoading}/>\r\n                            </form>\r\n                        </Grid>\r\n                        <Grid item className=\"align-center\">\r\n                            <h3>А также</h3>\r\n                        </Grid>\r\n                        <Grid item className=\"align-center\">\r\n                            <GoogleButton label=\"Войти в Google аккаунт\" onClick={this.loginGoogle}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Container className=\"start-work-wrapper\">\r\n                        <Button variant=\"contained\"\r\n                                onClick={this.startWork}\r\n                                disabled={!this.state.brsAuthorized || !this.state.googleAuthorized}\r\n                                color=\"secondary\">начать работу</Button>\r\n                    </Container>\r\n                    <CustomAlert open={this.state.alertInfo.open}\r\n                                 message={this.state.alertInfo.message}\r\n                                 type={this.state.alertInfo.type}\r\n                                 onClose={this.closeAlert}/>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface Credentials {\r\n    username: string\r\n    password: string\r\n\r\n    [props: string]: string\r\n}\r\n\r\ninterface AlertInfo {\r\n    open: boolean,\r\n    message: string,\r\n    type: \"error\" | \"success\";\r\n}\r\n\r\ninterface State {\r\n    brsAuthorized: boolean;\r\n    googleAuthorized: boolean;\r\n    submitLoading: boolean;\r\n    redirect: boolean;\r\n    alertInfo: AlertInfo;\r\n}\r\n","import React from 'react';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n        nested: {\r\n            paddingLeft: theme.spacing(4),\r\n        },\r\n        onEmptyMessage: {\r\n            textAlign: \"center\"\r\n        }\r\n    }),\r\n);\r\n\r\nfunction NestedListItem(props: NestedListItemProps) {\r\n    const {item, collapsed} = props;\r\n    const [open, setOpen] = React.useState(!collapsed);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ListItem button onClick={() => setOpen(!open)}>\r\n                <ListItemIcon>\r\n                    <ViewModuleIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary={item.title}/>\r\n                {item.nestedItems?.length && (open ? <ExpandLess/> : <ExpandMore/>) || undefined}\r\n            </ListItem>\r\n            {\r\n                item.nestedItems?.length &&\r\n                item.nestedItems.map((nestedItemTitle, index) => (\r\n                    <Collapse key={index} in={open} timeout=\"auto\" unmountOnExit>\r\n                        <List component=\"div\" className={classes.nested} disablePadding>\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <GroupIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={nestedItemTitle}/>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Collapse>\r\n                ))\r\n                || undefined\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default function NestedList(props: NestedListProps) {\r\n    const {title, items, collapsed = true} = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <List\r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            subheader={\r\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\" hidden={!title}>\r\n                    {title}\r\n                </ListSubheader>\r\n            }\r\n            className={classes.root}>\r\n            {\r\n                items.length ?\r\n                    items.map((item, index) => (\r\n                        <NestedListItem key={index}\r\n                                        item={item}\r\n                                        collapsed={collapsed}/>\r\n                    )) :\r\n                    <ListItem className={classes.onEmptyMessage}>\r\n                        <ListItemText primary=\"No items\"/>\r\n                    </ListItem>\r\n            }\r\n        </List>\r\n    );\r\n}\r\n\r\nexport interface NestedListItem {\r\n    title: string,\r\n    nestedItems?: string[]\r\n}\r\n\r\ninterface NestedListProps {\r\n    title?: string;\r\n    items: NestedListItem[];\r\n    collapsed?: boolean;\r\n}\r\n\r\ninterface NestedListItemProps {\r\n    item: { title: string, nestedItems?: string[] };\r\n    collapsed?: boolean;\r\n}\r\n","import 'bluebird';\r\nimport request from 'request-promise';\r\nimport * as cache from '../helpers/cache';\r\nimport BrsAuth from \"./brsAuth\";\r\nimport BrsUrlProvider from \"./brsUrlProvider\";\r\n\r\nexport enum StudentFailure {\r\n    /** -, дефис, все хорошо */ NoFailure = -1,\r\n    /** Не выбрана */ NotChosen = -19,\r\n    /** Не допущен (деканат) */ NotAllowedByDeansOffice = -18,\r\n    /** Не явился */ NotAppeared = 0,\r\n    /** Неуважительная */ DisrespectfulReason = 12,\r\n    /** Уважительная */ RespectfulReason = 13,\r\n    /** Не допущен */ NotAllowedByTeacher = 18,\r\n    /** Не должен сдавать */ ShouldNotPass = 19,\r\n    /** Академический отпуск */ AcademicLeave = 20,\r\n    /** Выбыл */ DroppedOut = 21,\r\n}\r\n\r\nexport enum TermType {\r\n    Fall = 1,\r\n    Spring = 2,\r\n}\r\n\r\nexport default class BrsApi {\r\n    private readonly brsAuth: BrsAuth;\r\n    private readonly brsUrlProvider: BrsUrlProvider;\r\n\r\n    constructor(brsAuth: BrsAuth, brsUrlProvider: BrsUrlProvider) {\r\n        this.brsAuth = brsAuth;\r\n        this.brsUrlProvider = brsUrlProvider;\r\n    }\r\n\r\n    async getDisciplineCachedAsync(\r\n        year: number,\r\n        termType: TermType,\r\n        course: number,\r\n        isModule: boolean\r\n    ) {\r\n        const cacheName = `${this.brsAuth.login}_getDiscipline_${year}_${termType}_${course}_${isModule}`;\r\n        const cacheResult = cache.read<Discipline[]>(cacheName);\r\n        if (cacheResult) {\r\n            return cacheResult;\r\n        }\r\n\r\n        const result = await this.getDisciplineInternalAsync(\r\n            year,\r\n            termType,\r\n            course,\r\n            isModule\r\n        );\r\n        cache.save(cacheName, result);\r\n        return result;\r\n    }\r\n\r\n    async getDisciplineInternalAsync(\r\n        year: number,\r\n        termType: TermType,\r\n        course: number,\r\n        isModule: boolean\r\n    ) {\r\n        const queryString = `?year=${year}&termType=${termType}&course=${course}&total=0&page=1&pageSize=1000&search=`;\r\n        if (isModule) {\r\n            const disciplines = await this.requestApiJsonAsync<Discipline[]>(\r\n                '/mvc/mobile/module/fetch' + queryString\r\n            );\r\n            for (const d of disciplines) {\r\n                d.isModule = true;\r\n            }\r\n            return disciplines;\r\n        } else {\r\n            const paging = await this.requestApiJsonAsync<Paging<Discipline>>(\r\n                '/mvc/mobile/discipline/fetch' + queryString\r\n            );\r\n            const disciplines = paging.content;\r\n            for (const d of disciplines) {\r\n                d.isModule = false;\r\n            }\r\n            return disciplines;\r\n        }\r\n    }\r\n\r\n    async getAllStudentMarksAsync(discipline: Discipline) {\r\n        const students = [\r\n            ...(await this.getStudentMarksAsync(discipline, 'lecture', 'current')),\r\n            ...(await this.getStudentMarksAsync(discipline, 'lecture', 'intermediate')),\r\n            ...(await this.getStudentMarksAsync(discipline, 'laboratory', 'current')),\r\n            ...(await this.getStudentMarksAsync(discipline, 'laboratory', 'intermediate')),\r\n        ];\r\n\r\n        const uniqueStudents: { [id: string]: StudentMark } = {};\r\n        for (const s of students) {\r\n            const knownStudent = uniqueStudents[s.studentUuid] || {};\r\n            uniqueStudents[s.studentUuid] = {...knownStudent, ...s};\r\n        }\r\n\r\n        return Object.keys(uniqueStudents).map(k => uniqueStudents[k]);\r\n    }\r\n\r\n    async getStudentMarksAsync(\r\n        discipline: Discipline,\r\n        cardType: CardType,\r\n        markType: MarkType\r\n    ) {\r\n        return this.getStudentMarksInternalAsync(\r\n            discipline.disciplineLoad,\r\n            discipline.isModule,\r\n            discipline.groupHistoryId,\r\n            discipline.groupId,\r\n            cardType,\r\n            markType\r\n        );\r\n    }\r\n\r\n    async getStudentMarksInternalAsync(\r\n        disciplineLoad: string,\r\n        isModule: boolean,\r\n        groupUuid: string,\r\n        techgroup: string,\r\n        cardType: CardType,\r\n        markType: MarkType,\r\n        isTotal: boolean = false,\r\n        showActiveStudents: boolean = false\r\n    ) {\r\n        const groupPart = isModule\r\n            ? `techgroup=${techgroup}`\r\n            : `groupUuid=${groupUuid}`;\r\n        return this.requestApiJsonAsync<StudentMark[]>(\r\n            `/mvc/mobile/studentMarks/fetch?disciplineLoad=${disciplineLoad}&${groupPart}` +\r\n            `&cardType=${cardType}&hasTest=false&isTotal=${isTotal}` +\r\n            `&intermediate=${markType === 'intermediate'}` +\r\n            `&selectedTeachers=null&showActiveStudents=${showActiveStudents}`\r\n        );\r\n    }\r\n\r\n    async getAllControlActionsCachedAsync(discipline: Discipline) {\r\n        return [\r\n            ...(await this.getControlActionsCachedAsync(discipline, 'lecture', 'current')),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'lecture',\r\n                'intermediate'\r\n            )),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'laboratory',\r\n                'current'\r\n            )),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'laboratory',\r\n                'intermediate'\r\n            )),\r\n            ...(await this.getControlActionsCachedAsync(discipline, 'practice', 'current')),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'practice',\r\n                'intermediate'\r\n            )),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'additionalPractice',\r\n                'current'\r\n            )),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'additionalPractice',\r\n                'intermediate'\r\n            )),\r\n        ];\r\n    }\r\n\r\n    async getControlActionsCachedAsync(\r\n        discipline: Discipline,\r\n        cardType: CardType,\r\n        markType: MarkType\r\n    ) {\r\n        const cacheName = `${this.brsAuth.login}_getControlActions_${discipline.disciplineLoad}` +\r\n            `_${discipline.isModule}_${discipline.groupHistoryId}_${discipline.groupId}_${cardType}_${markType}`;\r\n        const cacheResult = cache.read<ControlAction[]>(cacheName);\r\n        if (cacheResult) {\r\n            return cacheResult;\r\n        }\r\n\r\n        const result = await this.getControlActionsInternalAsync(\r\n            discipline.disciplineLoad,\r\n            discipline.isModule,\r\n            discipline.groupHistoryId,\r\n            discipline.groupId,\r\n            cardType,\r\n            markType\r\n        );\r\n        cache.save(cacheName, result);\r\n        return result;\r\n    }\r\n\r\n    async getControlActionsInternalAsync(\r\n        disciplineLoad: string,\r\n        isModule: boolean,\r\n        groupUuid: string,\r\n        techgroup: string,\r\n        cardType: CardType,\r\n        markType: MarkType\r\n    ) {\r\n        const modulePart = isModule ? '/module' : '';\r\n        const groupPart = isModule ? techgroup : groupUuid;\r\n        const response = await this.requestApiAsync<string>(\r\n            `/mvc/mobile/view/mark/${disciplineLoad}/${groupPart}/teachers${modulePart}/${cardType}/${markType}`\r\n        );\r\n\r\n        const prefix = 'gridColumns = toTextArray(';\r\n        const suffix = ');';\r\n        const linesWithId = response\r\n            .split('\\r\\n')\r\n            .map(s => s.trim())\r\n            .filter(s => s.startsWith(prefix));\r\n        if (linesWithId.length !== 1) {\r\n            throw new Error(\r\n                'Control actions page should contain single line target line with techcard identifier'\r\n            );\r\n        }\r\n\r\n        const columns: Array<{ controlAction: string; uuid: string }> =\r\n            JSON.parse(\r\n                linesWithId[0].substr(\r\n                    prefix.length,\r\n                    linesWithId[0].length - prefix.length - suffix.length\r\n                )\r\n            ) || [];\r\n\r\n        const uuidPrefix = 'technologyCard';\r\n        const result = columns\r\n            .filter(c => c.uuid && c.uuid.startsWith(uuidPrefix))\r\n            .map(c => ({\r\n                uuid: c.uuid,\r\n                uuidWithoutPrefix: c.uuid.substr(uuidPrefix.length),\r\n                controlAction: c.controlAction,\r\n            }));\r\n        return result as ControlAction[];\r\n    }\r\n\r\n    async putStudentMarkAsync(\r\n        studentUuid: string,\r\n        controlActionId: string,\r\n        mark: number,\r\n        groupId: string,\r\n        cardTypeKey: CardType,\r\n        disciplineLoadUuid: string\r\n    ) {\r\n        const body = `student=${studentUuid}&techcard=${controlActionId}&mark=${\r\n            isNaN(mark) ? '' : mark.toString()\r\n        }&groupId=${groupId}&cardTypeKey=${cardTypeKey}&disciplineLoadUuid=${disciplineLoadUuid}`;\r\n        return this.requestApiJsonAsync<StudentMark>(\r\n            `/mvc/mobile/studentMarks/put`,\r\n            {\r\n                method: 'POST',\r\n                body,\r\n                json: false,\r\n            },\r\n            {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            }\r\n        );\r\n    }\r\n\r\n    async putStudentFailureAsync(\r\n        studentUuid: string,\r\n        discipline: Discipline,\r\n        studentFailure: StudentFailure = StudentFailure.NoFailure,\r\n        cardType: CardType = 'lecture'\r\n    ) {\r\n        const body = `markFailure=${studentFailure}&cardType=${cardType}&disciplineLoad=${discipline.disciplineLoad}&studentId=${studentUuid}`;\r\n        await this.requestApiAsync(\r\n            `/mvc/mobile/failure/update`,\r\n            {\r\n                method: 'POST',\r\n                body,\r\n                json: false,\r\n            },\r\n            {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            }\r\n        );\r\n    }\r\n\r\n    async updateAllMarksAsync(discipline: Discipline) {\r\n        // Одного вызова достаточно, чтобы обновить все оценки по предмету у группы.\r\n        await this.updateMarksAsync(discipline, 'lecture', 'intermediate');\r\n        // await updateMarksAsync(discipline, 'lecture', 'current');\r\n        // await updateMarksAsync(discipline, 'lecture', 'intermediate');\r\n        // await updateMarksAsync(discipline, 'laboratory', 'current');\r\n        // await updateMarksAsync(discipline, 'laboratory', 'intermediate');\r\n        // await updateMarksAsync(discipline, 'practice', 'current');\r\n        // await updateMarksAsync(discipline, 'practice', 'intermediate');\r\n    }\r\n\r\n    async updateMarksAsync(\r\n        discipline: Discipline,\r\n        cardType: CardType,\r\n        markType: MarkType\r\n    ) {\r\n        return this.updateMarksInternalAsync(\r\n            discipline.disciplineLoad,\r\n            discipline.isModule,\r\n            discipline.groupHistoryId,\r\n            discipline.groupId,\r\n            cardType,\r\n            markType\r\n        );\r\n    }\r\n\r\n    async updateMarksInternalAsync(\r\n        disciplineLoad: string,\r\n        isModule: boolean,\r\n        groupUuid: string,\r\n        techgroup: string,\r\n        cardType: CardType,\r\n        markType: MarkType\r\n    ) {\r\n        const modulePart = isModule ? '/module' : '';\r\n        const groupPart = isModule\r\n            ? `techgroup=${techgroup}`\r\n            : `groupUuid=${groupUuid}`;\r\n        const body =\r\n            `disciplineLoad=${disciplineLoad}&${groupPart}` +\r\n            `&cardType=${cardType}&hasTest=false&isTotal=false` +\r\n            `&intermediate=${markType === 'intermediate'}` +\r\n            `&selectedTeachers=null&showActiveStudents=true`;\r\n        return this.requestApiAsync<string>(\r\n            `/mvc/mobile/updateMarks${modulePart}`,\r\n            {\r\n                method: 'POST',\r\n                body,\r\n                json: false,\r\n            },\r\n            {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            }\r\n        );\r\n    }\r\n\r\n    async requestApiJsonAsync<T>(\r\n        uri: string,\r\n        options?: RequestOptions,\r\n        headers?: RequestHeaders\r\n    ): Promise<T> {\r\n        const response = await this.requestApiAsync<string>(uri, options, headers);\r\n\r\n        if (response.trimLeft().startsWith('<!DOCTYPE html>')) {\r\n            throw new Error(uri + ' is Forbidden');\r\n        }\r\n        return JSON.parse(response);\r\n    }\r\n\r\n    async requestApiAsync<T>(\r\n        uri: string,\r\n        options?: RequestOptions,\r\n        headers?: RequestHeaders\r\n    ): Promise<T> {\r\n        return request({\r\n            method: 'GET',\r\n            ...options,\r\n            url: this.brsUrlProvider.baseUrl + uri,\r\n            headers: {\r\n                'X-Cookie': `JSESSIONID=${this.brsAuth.sid}`,\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                ...headers,\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\n\r\ninterface RequestOptions {\r\n    method?: string;\r\n    body?: object | string;\r\n    json?: boolean;\r\n}\r\n\r\ninterface RequestHeaders {\r\n    'Content-Type'?: string;\r\n}\r\n\r\nexport type CardType = 'lecture' | 'laboratory' | 'practice' | 'additionalPractice';\r\nexport type MarkType = 'intermediate' | 'current';\r\n\r\ninterface Paging<T> {\r\n    content: T[];\r\n    last: boolean;\r\n    totalPages: number;\r\n    totalElements: number;\r\n    size: number;\r\n    number: number;\r\n    sort: any;\r\n    first: boolean;\r\n    numberOfElements: number;\r\n}\r\n\r\nexport interface RegisterInfo {\r\n    registerInfoStr: string;\r\n    registerId: number;\r\n    passDate: any;\r\n    cardType: string;\r\n    sheet: string;\r\n}\r\n\r\nexport interface Discipline {\r\n    groupId: string;\r\n    discipline: string;\r\n    group: string;\r\n    registerInfo: RegisterInfo[];\r\n    disciplineLoad: string;\r\n    groupHistoryId: string;\r\n    isModule: boolean;\r\n}\r\n\r\n// eslint-disable-next-line\r\nconst studentMarkSample: StudentMark = {\r\n    studentPersonalNumber: '09800106',\r\n    isEdit: false,\r\n    studentUuid:\r\n        'studen18hc2jg0000magk6mi3iec84bsundigr18hc2jg0000m53o7mlgvora278',\r\n    status: 1,\r\n    studentStatus: 'Активный',\r\n    ignoreCurrentDebars: false,\r\n    studentFio: 'Анисимова Маргарита Васильевна',\r\n    isExtern: false,\r\n    teacherName: '',\r\n    cardType: 'lecture',\r\n    studentName: 'Анисимова М.В.',\r\n    studentGroup: 'РИ-180001',\r\n    registerClosed: false,\r\n    subgroupsITS: '',\r\n    disciplineLoad: 'unpldd18hc2jg0000m5kojcd3te76bnk',\r\n};\r\n\r\nexport interface StudentMark {\r\n    studentPersonalNumber: string;\r\n    isEdit: boolean;\r\n    studentUuid: string;\r\n    status: number;\r\n    studentStatus: string;\r\n    ignoreCurrentDebars: boolean;\r\n    studentFio: string;\r\n    isExtern: boolean;\r\n    teacherName: string;\r\n    cardType: CardType;\r\n    studentName: string;\r\n    studentGroup: string;\r\n    registerClosed: boolean;\r\n    subgroupsITS: string;\r\n    disciplineLoad: string;\r\n    failure?: StudentFailure;\r\n    failureName?: string;\r\n\r\n    [props: string]: number | string | boolean | undefined;\r\n}\r\n\r\nexport interface ControlAction {\r\n    uuid: string;\r\n    uuidWithoutPrefix: string;\r\n    controlAction: string;\r\n}\r\n","export function fixSpaces(str: string) {\r\n  return str && str.replace(/[\\s]/g, ' ');\r\n}\r\n\r\nexport function normalizeString(str: string) {\r\n  return (\r\n    str &&\r\n    str\r\n      .toLowerCase()\r\n      .replace('ё', 'е')\r\n      .replace(/[^A-Za-zА-ЯЁа-яё0-9]/g, '')\r\n  );\r\n}\r\n\r\nexport function compareNormalized(s1: string, s2: string) {\r\n  return normalizeString(s1) === normalizeString(s2);\r\n}\r\n\r\nexport function parseAnyFloat(s: string) {\r\n  return parseFloat(s && s.replace(',', '.'));\r\n}\r\n\r\nexport function groupBy<TItem, TKey>(items: TItem[], key: keyof TItem) {\r\n  const reducer: { [group: string]: TItem[] } = {};\r\n  return items.reduce((reducer, item) => {\r\n    const itemKey = `${item[key]}`;\r\n    (reducer[itemKey] = reducer[itemKey] || []).push(item);\r\n    return reducer;\r\n  }, reducer);\r\n}\r\n","import TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport SubmitWithLoading from \"../components/SubmitWithLoading\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport NestedList from \"../components/NestedList\";\r\nimport React, {FormEvent} from \"react\";\r\nimport {createStyles, makeStyles} from \"@material-ui/core\";\r\nimport BrsApi, {Discipline, TermType} from \"../apis/brsApi\";\r\nimport {groupBy} from \"../helpers/tools\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        termType: {\r\n            minWidth: 100,\r\n            marginRight: 10\r\n        },\r\n        year: {\r\n            width: 60,\r\n            marginRight: 10\r\n        },\r\n        course: {\r\n            width: 50,\r\n            marginRight: 10\r\n        },\r\n        submit: {\r\n            display: 'inline-block',\r\n            top: 5\r\n        },\r\n        isModule: {\r\n            marginTop: 15\r\n        },\r\n        header: {\r\n            marginBottom: 10\r\n        }\r\n    }),\r\n);\r\n\r\nexport default function DisciplinesFetch(props: Props) {\r\n    const classes = useStyles();\r\n    const {brsApi, onUnauthorized} = props;\r\n\r\n    let year = 0;\r\n    let termType: 'Осенний' | 'Весенний' = 'Осенний';\r\n    let course = 0;\r\n    let isModule = false;\r\n    const [openDisciplines, setOpenDisciplines] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    let disciplinesEmpty: { title: string, nestedItems: string[] }[] = [];\r\n    const [disciplines, setDisciplines] = React.useState(disciplinesEmpty);\r\n\r\n    function handleChange(event: React.ChangeEvent<{ name?: string | undefined, value: unknown }>) {\r\n        const target = event.target;\r\n        switch (target.name) {\r\n            case 'year':\r\n                year = target.value as number;\r\n                break;\r\n            case 'term-type':\r\n                termType = target.value as ('Осенний' | 'Весенний');\r\n                break;\r\n            case 'course':\r\n                course = target.value as number;\r\n                break;\r\n            case 'is-module':\r\n                // @ts-ignore\r\n                isModule = target.checked as boolean;\r\n                break;\r\n        }\r\n    }\r\n\r\n    async function loadDisciplines(e: FormEvent) {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const term = termType === 'Осенний' ? TermType.Fall : TermType.Spring;\r\n\r\n        let rawDisciplines;\r\n        try {\r\n            rawDisciplines = await brsApi.getDisciplineCachedAsync(year, term, course, isModule);\r\n        } catch (e) {\r\n            onUnauthorized();\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        setDisciplines(convertToListItems(rawDisciplines));\r\n        setLoading(false);\r\n        setOpenDisciplines(true);\r\n    }\r\n\r\n    function convertToListItems(disciplines: Discipline[]) {\r\n        return Object\r\n            .entries(groupBy(disciplines, 'discipline'))\r\n            .map(d => ({\r\n                title: d[0],\r\n                nestedItems: d[1].map(x => x.group)\r\n            }));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h3 className={classes.header}>Выбери параметры курса в БРС</h3>\r\n            <form onSubmit={loadDisciplines}>\r\n                <TextField name=\"year\"\r\n                           className={classes.year}\r\n                           label=\"Год\"\r\n                           type=\"number\"\r\n                           onChange={handleChange}\r\n                           required/>\r\n                <FormControl className={classes.termType} required>\r\n                    <InputLabel id=\"term-label\">Семестр</InputLabel>\r\n                    <Select name=\"term-type\"\r\n                            onChange={handleChange}>\r\n                        <MenuItem value=\"Осенний\">Осенний</MenuItem>\r\n                        <MenuItem value=\"Весенний\">Весенний</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField name=\"course\"\r\n                           className={classes.course}\r\n                           label=\"Курс\"\r\n                           type=\"number\"\r\n                           onChange={handleChange}\r\n                           required/>\r\n                <FormControlLabel label=\"Модуль\"\r\n                                  className={classes.isModule}\r\n                                  control={<Checkbox name=\"is-module\"\r\n                                                     color=\"primary\"\r\n                                                     onChange={handleChange}/>}/>\r\n                <SubmitWithLoading title=\"вывести\" loading={loading} className={classes.submit}/>\r\n            </form>\r\n            <br/>\r\n            <Collapse in={openDisciplines}>\r\n                <NestedList title=\"Доступные дисциплины\" items={disciplines}/>\r\n            </Collapse>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\ninterface Props {\r\n    brsApi: BrsApi;\r\n    onUnauthorized: () => void;\r\n}\r\n","export async function authorizeAsync() {\r\n  // globalAuth = await googleAuth.authorizeAsync(policy);\r\n}\r\n\r\nexport function getSpreadsheet(spreadsheetId: string): Spreadsheet {\r\n  // @ts-ignore\r\n  const sheets = gapi.client.sheets;\r\n\r\n  async function readAsync(range: string) {\r\n    const response = await sheets.spreadsheets.values.get({\r\n      spreadsheetId,\r\n      range,\r\n    });\r\n    return response.result;\r\n  }\r\n\r\n  function writeAsync(range: string, values: any[][], asEnteredByUser = false) {\r\n    const valueInputOption = asEnteredByUser ? \"USER_ENTERED\" : \"RAW\";\r\n    const requestBody = {\r\n      values,\r\n    };\r\n    return sheets.spreadsheets.values.update({\r\n      spreadsheetId,\r\n      range,\r\n      valueInputOption,\r\n      requestBody,\r\n    });\r\n  }\r\n\r\n  function appendAsync(\r\n    range: string,\r\n    values: any[][],\r\n    asEnteredByUser = false\r\n  ) {\r\n    const valueInputOption = asEnteredByUser ? \"USER_ENTERED\" : \"RAW\";\r\n    const requestBody = {\r\n      values,\r\n    };\r\n    return sheets.spreadsheets.values.append({\r\n      spreadsheetId,\r\n      range,\r\n      valueInputOption,\r\n      requestBody,\r\n    });\r\n  }\r\n\r\n  return {\r\n    readAsync,\r\n    writeAsync,\r\n    appendAsync,\r\n  };\r\n}\r\n\r\nexport interface Spreadsheet {\r\n  readAsync: (range: string) => Promise<ValueRange>;\r\n  writeAsync: (\r\n    range: string,\r\n    values: any[][],\r\n    asEnteredByUser?: boolean\r\n  ) => void;\r\n  appendAsync: (\r\n    range: string,\r\n    values: any[][],\r\n    asEnteredByUser?: boolean\r\n  ) => void;\r\n}\r\n\r\nexport interface ValueRange {\r\n  majorDimension?: string | null;\r\n  range?: string | null;\r\n  values?: any[][] | null;\r\n}\r\n","import * as fileApi from '../apis/fileApi';\r\nimport * as googleApi from '../apis/googleApi';\r\n\r\nexport interface ActualStudent {\r\n    fullName: string;\r\n    groupName: string;\r\n    id: string | null;\r\n    properties: string[];\r\n}\r\n\r\nexport async function fromSpreadsheetAsync(\r\n    spreadsheetId: string,\r\n    readRange: string,\r\n    fullNameIndex: number = 0,\r\n    groupNameIndex: number = 1,\r\n    idIndex: number | null = null,\r\n) {\r\n    await googleApi.authorizeAsync();\r\n    const sheet = googleApi.getSpreadsheet(spreadsheetId);\r\n\r\n    const rows = (await sheet.readAsync(readRange)).values || [];\r\n\r\n    const result: ActualStudent[] = [];\r\n    for (const row of rows) {\r\n        const fullName = row[fullNameIndex];\r\n        const groupName = row[groupNameIndex];\r\n        const id = idIndex !== null ? row[idIndex] : null;\r\n        if (fullName && groupName) {\r\n            result.push({\r\n                fullName,\r\n                groupName,\r\n                id: id,\r\n                properties: row,\r\n            });\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function fromCvs(\r\n    filePath: string,\r\n    skipHeader: boolean = false,\r\n    fullNameIndex: number = 0,\r\n    groupNameIndex: number = 1,\r\n    idIndex: number | null = null\r\n): ActualStudent[] {\r\n    const rows = fileApi.readFromCsv(filePath, skipHeader, ',');\r\n    const result = [];\r\n    for (const row of rows) {\r\n        if (\r\n            row.columns.length <= fullNameIndex ||\r\n            row.columns.length <= groupNameIndex\r\n        ) {\r\n            throw new Error(`Can't parse line of actual students file`);\r\n        }\r\n        result.push({\r\n            fullName: row.columns[fullNameIndex],\r\n            groupName: row.columns[groupNameIndex],\r\n            id: idIndex !== null ? row.columns[idIndex] : null,\r\n            properties: row.columns,\r\n        });\r\n    }\r\n    return result;\r\n}\r\n","import {Discipline, TermType} from \"../apis/brsApi\";\r\nimport {ControlActionConfig, DisciplineConfig, PutMarksOptions,} from \"./putMarksToBrsAsync\";\r\nimport * as readStudents from \"./readStudentsAsync\";\r\nimport {ActualStudent} from \"./readStudentsAsync\";\r\nimport * as googleApi from \"../apis/googleApi\";\r\nimport {compareNormalized, normalizeString} from \"../helpers/tools\";\r\n\r\nexport type {\r\n    DisciplineConfig,\r\n    ControlActionConfig,\r\n    PutMarksOptions,\r\n} from \"./putMarksToBrsAsync\";\r\n\r\nexport default async function buildMarksAutoAsync(\r\n    spreadsheetId: string,\r\n    sheetName: string,\r\n    isSuitableDiscipline: ((d: Discipline) => boolean) | null = null,\r\n    isSuitableActualStudent: ((s: ActualStudent) => boolean) | null = null,\r\n): Promise<MarksData> {\r\n    const header = await readHeaderFromSpreadsheetAsync(\r\n        spreadsheetId,\r\n        sheetName,\r\n    );\r\n\r\n    const indices = buildIndicesBy(header);\r\n    const dataRange = buildDataRange(sheetName, indices);\r\n    const controlActionConfigs = buildControlActionConfig(header, indices);\r\n    const disciplineConfig = buildDisciplineConfig(\r\n        header,\r\n        indices,\r\n        isSuitableDiscipline\r\n    );\r\n\r\n    const allActualStudents = await readStudents.fromSpreadsheetAsync(\r\n        spreadsheetId,\r\n        dataRange,\r\n        indices.fullNameColumn - indices.left,\r\n        indices.groupColumn - indices.left,\r\n        null,\r\n    );\r\n    const actualStudents = isSuitableActualStudent\r\n        ? allActualStudents.filter(isSuitableActualStudent)\r\n        : allActualStudents;\r\n\r\n    return {\r\n        actualStudents,\r\n        disciplineConfig,\r\n        controlActionConfigs,\r\n    }\r\n}\r\n\r\nasync function readHeaderFromSpreadsheetAsync(\r\n    spreadsheetId: string,\r\n    sheetName: string,\r\n) {\r\n    await googleApi.authorizeAsync();\r\n    const sheet = googleApi.getSpreadsheet(spreadsheetId);\r\n    const rows = (await sheet.readAsync(sheetName + \"!A1:ZZ1\"))\r\n        .values as string[][];\r\n    const header = rows && rows[0];\r\n    if (!header) {\r\n        throw new Error(`Can't read header of spreadsheet`);\r\n    }\r\n\r\n    return header;\r\n}\r\n\r\nfunction buildIndicesBy(header: string[]): Indices {\r\n    const defaultGroupColumnName = \"Группа в БРС\";\r\n    const defaultFullNameColumnName = \"Фамилия Имя в БРС\";\r\n    const disciplineColumnPrefix = \"Дисциплина\";\r\n\r\n    const normalizedHeader = header && header.map((s) => normalizeString(s));\r\n    const groupColumnIndex = normalizedHeader.indexOf(\r\n        normalizeString(defaultGroupColumnName)\r\n    );\r\n    const fullNameColumnIndex = normalizedHeader.indexOf(\r\n        normalizeString(defaultFullNameColumnName)\r\n    );\r\n    const disciplineColumnIndex = normalizedHeader.findIndex((s) =>\r\n        s.startsWith(normalizeString(disciplineColumnPrefix))\r\n    );\r\n\r\n    const rightIndex = disciplineColumnIndex - 1;\r\n    // Колонка с описанием дисциплины должна быть справа, колонки с именами и группами студентов должны быть слева.\r\n    // Колонки с именами и группами студентов должны быть рядом.\r\n    if (\r\n        groupColumnIndex < 0 ||\r\n        fullNameColumnIndex < 0 ||\r\n        disciplineColumnIndex < 0 ||\r\n        groupColumnIndex > rightIndex ||\r\n        fullNameColumnIndex > rightIndex ||\r\n        Math.abs(fullNameColumnIndex - groupColumnIndex) !== 1\r\n    ) {\r\n        throw new Error(`Wrong order of columns`);\r\n    }\r\n\r\n    const leftIndex = Math.min(groupColumnIndex, fullNameColumnIndex);\r\n\r\n    return {\r\n        groupColumn: groupColumnIndex,\r\n        fullNameColumn: fullNameColumnIndex,\r\n        disciplineColumn: disciplineColumnIndex,\r\n        left: leftIndex,\r\n        right: rightIndex,\r\n    };\r\n}\r\n\r\nfunction buildDataRange(sheetName: string, indices: Indices) {\r\n    const leftLetter = String.fromCharCode(\"A\".charCodeAt(0) + indices.left);\r\n    const rightLetter = String.fromCharCode(\"A\".charCodeAt(0) + indices.right);\r\n    return `${sheetName}!${leftLetter}2:${rightLetter}`;\r\n}\r\n\r\nfunction buildControlActionConfig(header: string[], indices: Indices) {\r\n    const controlActionConfigs: ControlActionConfig[] = [];\r\n    for (let index = indices.left; index <= indices.right; index++) {\r\n        if (\r\n            index === indices.groupColumn ||\r\n            index === indices.fullNameColumn ||\r\n            !header[index]\r\n        ) {\r\n            continue;\r\n        }\r\n        controlActionConfigs.push({\r\n            controlActions: [header[index]],\r\n            propertyIndex: index - indices.left,\r\n        });\r\n    }\r\n    for (const config of controlActionConfigs) {\r\n        if (config.controlActions.length === 1) {\r\n            const sameColumns = controlActionConfigs.filter(\r\n                (c) =>\r\n                    c.controlActions.length === 1 &&\r\n                    compareNormalized(c.controlActions[0], config.controlActions[0])\r\n            );\r\n            if (sameColumns.length > 1) {\r\n                config.matchCount = sameColumns.length;\r\n                for (\r\n                    let matchIndex = 0;\r\n                    matchIndex < sameColumns.length;\r\n                    matchIndex++\r\n                ) {\r\n                    sameColumns[matchIndex].matchIndex = matchIndex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return controlActionConfigs;\r\n}\r\n\r\nfunction buildDisciplineConfig(\r\n    header: string[],\r\n    indices: Indices,\r\n    isSuitableDiscipline: ((d: Discipline) => boolean) | null\r\n) {\r\n    const result = {} as DisciplineConfig;\r\n    for (const part of header[indices.disciplineColumn].split(\";\")) {\r\n        const keyValue = part.split(\":\").map((p) => p.trim());\r\n        const normalizedKey = normalizeString(keyValue[0]);\r\n        const value = keyValue[1];\r\n        if (normalizedKey === normalizeString(\"Дисциплина\")) {\r\n            result.name = value;\r\n        } else if (normalizedKey === normalizeString(\"ИТС\")) {\r\n            result.isModule = value.toLowerCase() === \"да\";\r\n        } else if (normalizedKey === normalizeString(\"Год\")) {\r\n            result.year = parseInt(value.toLowerCase(), 10);\r\n        } else if (normalizedKey === normalizeString(\"Семестр\")) {\r\n            if (value.toLowerCase() === \"осенний\") {\r\n                result.termType = TermType.Fall;\r\n            } else if (value.toLowerCase() === \"весенний\") {\r\n                result.termType = TermType.Spring;\r\n            }\r\n        } else if (normalizedKey === normalizeString(\"Курс\")) {\r\n            result.course = parseInt(value.toLowerCase(), 10);\r\n        }\r\n    }\r\n    result.isSuitableDiscipline = isSuitableDiscipline;\r\n\r\n    return result;\r\n}\r\n\r\ninterface Indices {\r\n    groupColumn: number;\r\n    fullNameColumn: number;\r\n    disciplineColumn: number;\r\n    left: number;\r\n    right: number;\r\n}\r\n\r\nexport interface MarksData {\r\n    actualStudents: ActualStudent[];\r\n    disciplineConfig: DisciplineConfig;\r\n    controlActionConfigs: ControlActionConfig[];\r\n}\r\n","import BrsApi, {ControlAction, Discipline, StudentMark} from '../apis/brsApi';\r\nimport {compareNormalized, parseAnyFloat} from '../helpers/tools';\r\nimport * as fio from '../helpers/fio';\r\nimport {ActualStudent} from './readStudentsAsync';\r\nimport {MarksData} from \"./buildMarksAutoAsync\";\r\nimport {Logger} from \"../helpers/logger\";\r\n\r\nlet brsApi: BrsApi;\r\nlet logger: Logger;\r\n\r\nexport default async function putMarksToBrsAsync(\r\n    brsApiLocal: BrsApi,\r\n    loggerLocal: Logger,\r\n    marksData: MarksData,\r\n    options: PutMarksOptions\r\n) {\r\n    const {actualStudents, controlActionConfigs, disciplineConfig} = marksData;\r\n    brsApi = brsApiLocal;\r\n    logger = loggerLocal;\r\n\r\n    try {\r\n        const allDisciplines = await brsApi.getDisciplineCachedAsync(\r\n            disciplineConfig.year,\r\n            disciplineConfig.termType,\r\n            disciplineConfig.course,\r\n            disciplineConfig.isModule\r\n        );\r\n        const disciplines = allDisciplines.filter(\r\n            d =>\r\n                compareNormalized(d.discipline, disciplineConfig.name) &&\r\n                (!disciplineConfig.isSuitableDiscipline ||\r\n                    disciplineConfig.isSuitableDiscipline(d))\r\n        );\r\n\r\n        for (const discipline of disciplines) {\r\n            await putMarksForDisciplineAsync(\r\n                discipline,\r\n                actualStudents.filter(s =>\r\n                    compareNormalized(s.groupName, discipline.group)\r\n                ),\r\n                controlActionConfigs,\r\n                options\r\n            );\r\n            if (options.cancelPending) {\r\n                break;\r\n            }\r\n        }\r\n    } catch (e) {\r\n        logger.error(e);\r\n    }\r\n}\r\n\r\nasync function putMarksForDisciplineAsync(\r\n    discipline: Discipline,\r\n    actualStudents: ActualStudent[],\r\n    controlActionConfigs: ControlActionConfig[],\r\n    options: PutMarksOptions\r\n) {\r\n    if (actualStudents.length === 0)\r\n        return;\r\n    logger.log(`# Processing group ${discipline.group}`);\r\n\r\n    const controlActions = await brsApi.getAllControlActionsCachedAsync(discipline);\r\n    if (!checkControlActionsConfiguration(controlActions, controlActionConfigs)) {\r\n        return;\r\n    }\r\n\r\n    const brsStudents = await brsApi.getAllStudentMarksAsync(discipline);\r\n    const {\r\n        mergedStudents,\r\n        skippedActualStudents,\r\n        skippedBrsStudents,\r\n    } = mergeStudents(actualStudents, brsStudents, options);\r\n    logMergedStudents(mergedStudents, skippedActualStudents, skippedBrsStudents);\r\n\r\n    await putMarksForStudentsAsync(\r\n        discipline,\r\n        mergedStudents,\r\n        controlActionConfigs,\r\n        controlActions,\r\n        options\r\n    );\r\n\r\n    if (options.save) {\r\n        debugger\r\n        // await brsApi.updateAllMarksAsync(discipline);\r\n    }\r\n}\r\n\r\nfunction checkControlActionsConfiguration(\r\n    controlActions: ControlAction[],\r\n    controlActionConfigs: ControlActionConfig[]\r\n) {\r\n    for (const config of controlActionConfigs) {\r\n        if (!getSuitableControlAction(config, controlActions)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nasync function putMarksForStudentsAsync(\r\n    discipline: Discipline,\r\n    students: MergedStudent[],\r\n    controlActionConfigs: ControlActionConfig[],\r\n    controlActions: ControlAction[],\r\n    options: PutMarksOptions\r\n) {\r\n    const statusCounters: { [k: string]: number } = {};\r\n\r\n    for (const student of students) {\r\n        if (options.cancelPending)\r\n            return;\r\n        const status = await putMarksForStudentAsync(\r\n            discipline,\r\n            student,\r\n            controlActionConfigs,\r\n            controlActions,\r\n            options\r\n        );\r\n        if (statusCounters[status] === undefined) {\r\n            statusCounters[status] = 0;\r\n        }\r\n        statusCounters[status]++;\r\n    }\r\n\r\n    logger.log('Marks update statuses:');\r\n    for (const k of Object.keys(statusCounters)) {\r\n        logger.log(`- ${k} = ${statusCounters[k]}`);\r\n    }\r\n}\r\n\r\nasync function putMarksForStudentAsync(\r\n    discipline: Discipline,\r\n    student: MergedStudent,\r\n    controlActionConfigs: ControlActionConfig[],\r\n    controlActions: ControlAction[],\r\n    options: PutMarksOptions\r\n) {\r\n    let updated = 0;\r\n    let failed = 0;\r\n\r\n    const marks = [];\r\n    for (const config of controlActionConfigs) {\r\n        const controlAction = getSuitableControlAction(config, controlActions);\r\n        if (!controlAction) {\r\n            throw new Error();\r\n        }\r\n\r\n        const brsMark = parseAnyFloat(student.brs[controlAction.uuid] as string);\r\n        const actualMark = parseAnyFloat(\r\n            student.actual.properties[config.propertyIndex]\r\n        );\r\n\r\n        if (actualMark === brsMark || actualMark === 0) {\r\n            marks.push(`    ${actualMark} `.substr(`${actualMark}`.length - 1));\r\n            continue;\r\n        } else {\r\n            marks.push(`    ${actualMark}!`.substr(`${actualMark}`.length - 1));\r\n        }\r\n\r\n        try {\r\n            if (options.save) {\r\n                debugger\r\n                // await brsApi.putStudentMarkAsync(\r\n                //     student.brs.studentUuid,\r\n                //     controlAction.uuidWithoutPrefix,\r\n                //     actualMark,\r\n                //     discipline.groupHistoryId,\r\n                //     student.brs.cardType,\r\n                //     student.brs.disciplineLoad\r\n                // );\r\n            }\r\n            updated++;\r\n        } catch (error) {\r\n            failed++;\r\n        }\r\n    }\r\n\r\n    const status = failed > 0 ? 'FAILED ' : updated > 0 ? 'UPDATED' : 'SKIPPED';\r\n    if (options.verbose || failed > 0) {\r\n        const studentName = (\r\n            student.actual.fullName + '                              '\r\n        ).substr(0, 30);\r\n        logger.log(\r\n            `${status} ${studentName} updated: ${updated}, failed: ${failed}, marks: ${marks.join(\r\n                ' '\r\n            )}`\r\n        );\r\n    }\r\n    return status;\r\n}\r\n\r\nfunction getSuitableControlAction(\r\n    config: ControlActionConfig,\r\n    controlActions: ControlAction[]\r\n) {\r\n    const suitableControlActions = controlActions.filter(a =>\r\n        config.controlActions.some(b => compareNormalized(a.controlAction, b))\r\n    );\r\n\r\n    if (suitableControlActions.length === 0) {\r\n        logger.log(`All of ${config.controlActions.join(', ')} not found`);\r\n        logger.log(\r\n            `Known actions: ${controlActions.map(a => a.controlAction).join(', ')}`\r\n        );\r\n        return null;\r\n    }\r\n\r\n    if (config.matchIndex !== undefined || config.matchCount !== undefined) {\r\n        if (\r\n            config.matchIndex === undefined ||\r\n            config.matchCount === undefined ||\r\n            suitableControlActions.length !== config.matchCount ||\r\n            config.matchIndex >= config.matchCount\r\n        ) {\r\n            logger.log(\r\n                `Invalid configuration of ${config.controlActions.join(', ')}`\r\n            );\r\n            logger.log(\r\n                `Can't match: ${config.matchIndex}/${config.matchCount} of ${suitableControlActions.length}`\r\n            );\r\n            return null;\r\n        }\r\n        return suitableControlActions[config.matchIndex];\r\n    }\r\n\r\n    if (suitableControlActions.length > 1) {\r\n        logger.log(\r\n            `Several control actions found for ${config.controlActions.join(', ')}`\r\n        );\r\n        logger.log(\r\n            `Found actions: ${suitableControlActions\r\n                .map(a => a.controlAction)\r\n                .join(', ')}`\r\n        );\r\n        return null;\r\n    }\r\n\r\n    return suitableControlActions[0];\r\n}\r\n\r\nfunction mergeStudents(\r\n    actualStudents: ActualStudent[],\r\n    brsStudents: StudentMark[],\r\n    options: PutMarksOptions\r\n) {\r\n    const activeBrsStudents = brsStudents.filter(isStudentActive);\r\n\r\n    const mergedStudents: MergedStudent[] = [];\r\n    const skippedActualStudents: ActualStudent[] = [];\r\n    for (const actualStudent of actualStudents) {\r\n        if (options.cancelPending)\r\n            break;\r\n        const suitableStudents = activeBrsStudents.filter(brsStudent =>\r\n            areStudentsLike(brsStudent, actualStudent)\r\n        );\r\n        if (suitableStudents.length === 1) {\r\n            mergedStudents.push({actual: actualStudent, brs: suitableStudents[0]});\r\n        } else {\r\n            skippedActualStudents.push(actualStudent);\r\n        }\r\n    }\r\n\r\n    const skippedBrsStudents: StudentMark[] = [];\r\n    for (const brsStudent of activeBrsStudents) {\r\n        if (\r\n            !mergedStudents.some(ms => ms.brs.studentUuid === brsStudent.studentUuid)\r\n        ) {\r\n            skippedBrsStudents.push(brsStudent);\r\n        }\r\n    }\r\n\r\n    return {mergedStudents, skippedActualStudents, skippedBrsStudents};\r\n}\r\n\r\nfunction isStudentActive(brsStudent: StudentMark) {\r\n    return (\r\n        brsStudent.studentStatus !== 'Переведен' &&\r\n        brsStudent.studentStatus !== 'Отчислен'\r\n    );\r\n}\r\n\r\nfunction areStudentsLike(\r\n    brsStudent: StudentMark,\r\n    actualStudent: ActualStudent\r\n) {\r\n    const brsFullName = fio.toKey(brsStudent.studentFio);\r\n    const actualFullName = fio.toKey(actualStudent.fullName);\r\n    return brsFullName.startsWith(actualFullName);\r\n}\r\n\r\nfunction logMergedStudents(\r\n    mergedStudents: MergedStudent[],\r\n    skippedActualStudents: ActualStudent[],\r\n    skippedBrsStudents: StudentMark[]\r\n) {\r\n    logger.log(`Merged students = ${mergedStudents.length}`);\r\n    logger.log(`Can't merge actual students = ${skippedActualStudents.length}`);\r\n    for (const s of skippedActualStudents) {\r\n        logger.log('- ' + s.fullName);\r\n    }\r\n    logger.log(`Can't merge BRS students = ${skippedBrsStudents.length}`);\r\n    for (const s of skippedBrsStudents) {\r\n        logger.log('- ' + s.studentFio);\r\n    }\r\n}\r\n\r\nexport interface DisciplineConfig {\r\n    name: string;\r\n    year: number;\r\n    termType: number;\r\n    course: number;\r\n    isModule: boolean;\r\n    isSuitableDiscipline: ((d: Discipline) => boolean) | null;\r\n}\r\n\r\nexport interface ControlActionConfig {\r\n    controlActions: string[];\r\n    matchIndex?: number;\r\n    matchCount?: number;\r\n    propertyIndex: number;\r\n}\r\n\r\nexport interface PutMarksOptions {\r\n    save: boolean;\r\n    verbose: boolean;\r\n    cancelPending: boolean;\r\n}\r\n\r\ninterface MergedStudent {\r\n    actual: ActualStudent;\r\n    brs: StudentMark;\r\n}\r\n","import React, {FormEvent} from \"react\";\r\nimport buildMarksAutoAsync, {MarksData} from \"../functions/buildMarksAutoAsync\";\r\nimport NestedList, {NestedListItem} from \"../components/NestedList\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport SubmitWithLoading from \"../components/SubmitWithLoading\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport './spreadsheet-fetch.css';\r\n\r\nexport default class SpreadsheetFetch extends React.Component<Props, State> {\r\n    tableUrl = '';\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: false,\r\n            tableUrlError: {error: false, message: ''},\r\n            moduleGroups: []\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.loadTable = this.loadTable.bind(this);\r\n    }\r\n\r\n    handleChange(event: React.ChangeEvent<{ name?: string | undefined, value: unknown }>) {\r\n        const target = event.target;\r\n        switch (target.name) {\r\n            case 'table-url':\r\n                if (this.state.tableUrlError.error)\r\n                    this.setState({tableUrlError: {error: false, message: ''}});\r\n                this.tableUrl = target.value as string;\r\n        }\r\n    }\r\n\r\n    prepareModuleGroup(marksData: MarksData): NestedListItem{\r\n        const groups = marksData.actualStudents.map(s => s.groupName);\r\n        return {\r\n            title: marksData.disciplineConfig.name,\r\n            nestedItems: Array.from(new Set(groups))\r\n        }\r\n    }\r\n\r\n    async loadTable(e: FormEvent) {\r\n        e.preventDefault();\r\n        this.setState({loading: true});\r\n\r\n        const spreadsheetInfo = await this.getSpreadsheetInfo();\r\n        if (!spreadsheetInfo)\r\n            return;\r\n\r\n        let marksData: MarksData;\r\n        try {\r\n            marksData = await buildMarksAutoAsync(spreadsheetInfo.spreadsheetId, spreadsheetInfo.sheetName);\r\n        } catch (e) {\r\n            this.setState({loading: false})\r\n            this.props.onError(e.message || JSON.stringify(e));\r\n            return;\r\n        }\r\n        const moduleGroup = this.prepareModuleGroup(marksData);\r\n\r\n        this.setState({\r\n            loading: false,\r\n            moduleGroups: [moduleGroup]\r\n        });\r\n        this.props.onDataLoaded?.call(null, marksData);\r\n    }\r\n\r\n    async getSpreadsheetInfo(): Promise<{ spreadsheetId: string, sheetName: string } | null> {\r\n        const result = this.tableUrl.match(/d\\/(?<id>[a-zA-Z0-9-_]+)\\/edit/);\r\n        if (!result?.groups || !result.groups.id) {\r\n            this.setState({\r\n                loading: false,\r\n                tableUrlError: {error: true, message: 'Неверный url-адрес.'}\r\n            });\r\n            return null;\r\n        }\r\n        const spreadsheetId = result.groups.id;\r\n\r\n        try { // @ts-ignore\r\n            const res = await gapi.client.sheets.spreadsheets.get({spreadsheetId});\r\n            const sheetName = JSON.parse(res.body).sheets[0].properties.title;\r\n            return {spreadsheetId, sheetName};\r\n        } catch (e) {\r\n            this.props.onError(e.message || JSON.stringify(e));\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className={'spreadsheet-fetch'}>\r\n                <h3 className={'header'}>Вставь ссылку на Google Таблицу</h3>\r\n                <form onSubmit={this.loadTable} className={'form'}>\r\n                    <TextField name=\"table-url\"\r\n                               label=\"Ссылка\"\r\n                               type=\"text\"\r\n                               className={'tableUrl'}\r\n                               onChange={this.handleChange}\r\n                               error={this.state.tableUrlError.error}\r\n                               helperText={this.state.tableUrlError.message}\r\n                               required/>\r\n                    <SubmitWithLoading title=\"загрузить\"\r\n                                       loading={this.state.loading}\r\n                                       className={'submit'}/>\r\n                </form>\r\n                <Collapse in={!!this.state.moduleGroups.length}>\r\n                    <NestedList items={this.state.moduleGroups} collapsed={false}/>\r\n                </Collapse>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\ninterface Props {\r\n    onDataLoaded: (data: MarksData) => void;\r\n    onUnauthorized: () => void;\r\n    onError: (errorMessage: string) => void;\r\n}\r\n\r\ninterface State {\r\n    loading: boolean;\r\n    tableUrlError: { error: boolean, message: string };\r\n    moduleGroups: NestedListItem[];\r\n}\r\n","export class Logger{\r\n    private logProviders?: ((message: string) => void)[];\r\n    private errorProviders?: ((errorMessage: string) => void)[];\r\n\r\n    addLogProvider(logProvider: ((message: string) => void)){\r\n        if (!this.logProviders)\r\n            this.logProviders = [];\r\n        this.logProviders.push(logProvider);\r\n    }\r\n\r\n    addErrorProvider(errorProvider: (errorMessage: string) => void){\r\n        if (!this.errorProviders)\r\n            this.errorProviders = [];\r\n        this.errorProviders.push(errorProvider);\r\n    }\r\n\r\n    log(message: string){\r\n        if (!this.logProviders)\r\n            return;\r\n        for (const logProvider of this.logProviders)\r\n            logProvider(message);\r\n    }\r\n\r\n    error(errorMessage: string){\r\n        if (!this.errorProviders)\r\n            return;\r\n        for (const errorProvider of this.errorProviders)\r\n            errorProvider(errorMessage);\r\n    }\r\n}\r\n","export function toShow(fio: string) {\r\n  return fio.replace('ё', 'е').replace(/[ ]+/, ' ');\r\n}\r\n\r\nexport function toKey(fio: string) {\r\n  return fio\r\n    .replace('ё', 'е')\r\n    .replace(/[ ]+/, ' ')\r\n    .toLowerCase();\r\n}\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport SubmitWithLoading from \"../components/SubmitWithLoading\";\r\nimport {List} from \"@material-ui/core\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {MarksData, PutMarksOptions} from \"../functions/buildMarksAutoAsync\";\r\nimport {Logger} from \"../helpers/logger\";\r\nimport BrsApi from \"../apis/brsApi\";\r\nimport putMarksToBrsAsync from \"../functions/putMarksToBrsAsync\";\r\n\r\nconst DialogContent = withStyles(() => ({\r\n    root: {\r\n        padding: 0,\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(() => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around'\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nexport default class WorkerDialog extends React.Component<Props, State> {\r\n    options: PutMarksOptions;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.options = {\r\n            save: props.workData.save,\r\n            verbose: true,\r\n            cancelPending: false\r\n        };\r\n\r\n        this.state = {\r\n            okLoading: true,\r\n            cancelPending: false,\r\n            logItems: [],\r\n        };\r\n\r\n        this.cancelWork = this.cancelWork.bind(this);\r\n        this.startWork = this.startWork.bind(this);\r\n        this.logMessage = this.logMessage.bind(this);\r\n        this.handleWorkFinished = this.handleWorkFinished.bind(this);\r\n        this.showError = this.showError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.runWork && this.startWork();\r\n    }\r\n\r\n    logMessage(message: string) {\r\n        this.state.logItems.push(message);\r\n        this.setState({});\r\n    }\r\n\r\n    async startWork() {\r\n        const logger = new Logger();\r\n        logger.addLogProvider(this.logMessage);\r\n        logger.addErrorProvider(this.showError);\r\n\r\n        const brsApi = this.props.workData.brsApi;\r\n        const marksData = this.props.workData.marksData;\r\n\r\n        if (!marksData)\r\n            return;\r\n\r\n        await putMarksToBrsAsync(brsApi, logger, marksData, this.options);\r\n        this.handleWorkFinished();\r\n    }\r\n\r\n    showError(errorMessage: string) {\r\n        errorMessage = `${errorMessage}`;\r\n        if (errorMessage.endsWith(\" is Forbidden\")) {\r\n            this.props.onUnauthorized();\r\n            return;\r\n        }\r\n        this.props.onError(errorMessage);\r\n    }\r\n\r\n    handleWorkFinished() {\r\n        this.setState({\r\n            cancelPending: false,\r\n            okLoading: false\r\n        });\r\n    }\r\n\r\n    cancelWork() {\r\n        this.options.cancelPending = true;\r\n        this.setState({cancelPending: true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Dialog open={this.props.runWork} maxWidth=\"sm\" fullWidth>\r\n                    <MuiDialogTitle>Лог действий</MuiDialogTitle>\r\n                    <DialogContent dividers>\r\n                        <List dense style={{height: 300}}>\r\n                            {this.state.logItems.map((item, index) => (\r\n                                <ListItem key={index}>\r\n                                    <ListItemText primary={item}/>\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <SubmitWithLoading loading={this.state.okLoading}\r\n                                           onClick={this.props.onClosed}\r\n                                           title=\"ок\"/>\r\n                        <SubmitWithLoading loading={this.state.cancelPending}\r\n                                           disabled={!this.state.okLoading}\r\n                                           onClick={this.cancelWork}\r\n                                           title=\"отмена\"/>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\ninterface Props {\r\n    runWork: boolean;\r\n    workData: { save: boolean, brsApi: BrsApi, marksData?: MarksData };\r\n    onClosed: () => void;\r\n    onError: (errorMessage: string) => void;\r\n    onUnauthorized: () => void;\r\n}\r\n\r\ninterface State {\r\n    okLoading: boolean;\r\n    cancelPending: boolean;\r\n    logItems: string[];\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n    ref: React.Ref<unknown>,\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function UnauthorizedAlert(props: {open: boolean}) {\r\n    const {open} = props;\r\n\r\n    const [redirect, setRedirect] = React.useState(false);\r\n\r\n    const handleOk = () => {\r\n        setRedirect(true);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {redirect && <Redirect to=\"/brs-extensions\"/>}\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\">\r\n                <DialogTitle id=\"alert-dialog-slide-title\">Необходимо авторизоваться</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Кажется, действие сессии БРС или Google истекло. Необходимо повторно авторизоваться.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleOk} color=\"primary\">Ок</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Container} from \"@material-ui/core\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport DisciplinesFetch from \"./DisciplinesFetch\";\r\nimport SpreadsheetFetch from \"./SpreadsheetFetch\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport WorkerDialog from \"./WorkerDialog\";\r\nimport {MarksData} from \"../functions/buildMarksAutoAsync\";\r\nimport BrsAuth from \"../apis/brsAuth\";\r\nimport BrsUrlProvider from \"../apis/brsUrlProvider\";\r\nimport BrsApi from \"../apis/brsApi\";\r\nimport UnauthorizedAlert from \"./UnauthorizedAlert\";\r\nimport * as cache from \"../helpers/cache\";\r\nimport CustomAlert from \"../components/CustomAlert\";\r\nimport googleAuth from \"../apis/googleAuth\";\r\n\r\nconst brsUrlProvider = new BrsUrlProvider(true);\r\nconst brsAuth = new BrsAuth(brsUrlProvider);\r\nconst brsApi = new BrsApi(brsAuth, brsUrlProvider);\r\n\r\nexport default class WorkPage extends React.Component<{}, State> {\r\n    marksData?: MarksData;\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authorized: true,\r\n            showControls: false,\r\n            runWork: false,\r\n            openUnauthorizedAlert: false,\r\n            errorMessage: '',\r\n            workData: {save: false, brsApi}\r\n        }\r\n\r\n        this.handleDataLoaded = this.handleDataLoaded.bind(this);\r\n        this.runWorkSafe = this.runWorkSafe.bind(this);\r\n        this.handleClosed = this.handleClosed.bind(this);\r\n        this.handleUnauthorized = this.handleUnauthorized.bind(this);\r\n        this.handleError = this.handleError.bind(this);\r\n        this.closeError = this.closeError.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await googleAuth.init();\r\n        const authorized = brsAuth.checkAuth() && googleAuth.checkAuth();\r\n        this.setState({authorized});\r\n    }\r\n\r\n    handleDataLoaded(data: MarksData) {\r\n        this.marksData = data;\r\n        this.setState({showControls: true});\r\n    }\r\n\r\n    runWorkSafe() {\r\n        this.setState({\r\n            runWork: true,\r\n            workData: {save: false, marksData: this.marksData, brsApi}\r\n        });\r\n    }\r\n\r\n    handleClosed() {\r\n        this.setState({runWork: false});\r\n    }\r\n\r\n    handleUnauthorized() {\r\n        cache.clear('loginInfo');\r\n        this.setState({openUnauthorizedAlert: true});\r\n    }\r\n\r\n    handleError(errorMessage: string){\r\n        this.setState({errorMessage});\r\n    }\r\n\r\n    closeError(){\r\n        this.setState({errorMessage: ''})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {!this.state.authorized && <Redirect to=\"/brs-extensions\"/>}\r\n                {this.state.openUnauthorizedAlert && <UnauthorizedAlert open={this.state.openUnauthorizedAlert}/>}\r\n                {this.state.errorMessage && <CustomAlert open={!!this.state.errorMessage}\r\n                                                         message={this.state.errorMessage}\r\n                                                         type={'error'}\r\n                                                         onClose={this.closeError}/>}\r\n                <div className=\"work-page\">\r\n                    <Container maxWidth=\"md\">\r\n                        <DisciplinesFetch brsApi={brsApi} onUnauthorized={this.handleUnauthorized}/>\r\n                        <hr/>\r\n                        <SpreadsheetFetch onDataLoaded={this.handleDataLoaded}\r\n                                          onError={this.handleError}\r\n                                          onUnauthorized={this.handleUnauthorized}/>\r\n                        <br/>\r\n                        <Collapse in={this.state.showControls}>\r\n                            <Grid container justify=\"space-around\">\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\"\r\n                                            onClick={this.runWorkSafe}\r\n                                            color=\"primary\">\r\n                                        Попробуй сделать хорошо\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\"\r\n                                            color=\"secondary\">\r\n                                        Сделай хорошо\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Collapse>\r\n                        {\r\n                            this.state.runWork &&\r\n                            <WorkerDialog runWork={this.state.runWork}\r\n                                          workData={this.state.workData}\r\n                                          onUnauthorized={this.handleUnauthorized}\r\n                                          onError={this.handleError}\r\n                                          onClosed={this.handleClosed}/>\r\n                        }\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\ninterface State {\r\n    authorized: boolean\r\n    showControls: boolean;\r\n    openUnauthorizedAlert: boolean;\r\n    errorMessage: string;\r\n    runWork: boolean;\r\n    workData: { save: boolean, brsApi: BrsApi, marksData?: MarksData };\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport LoginPage from \"./LoginPage\";\r\nimport WorkPage from \"./workPage/WorkPage\";\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/brs-extensions/work\" component={WorkPage}/>\r\n                <Route exact path=\"/brs-extensions\" component={LoginPage}/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport './index.css';\r\n// import './work-page.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}