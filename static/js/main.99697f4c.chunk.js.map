{"version":3,"sources":["helpers/cache.ts","helpers/CustomError.ts","Constants.ts","apis/BrsUrlProvider.ts","apis/BrsAuth.ts","apis/GoogleAuth.ts","Context.tsx","components/shared/SubmitWithLoading/index.tsx","components/login/BrsLoginForm/index.tsx","components/login/GoogleLoginButton.tsx","components/shared/CustomAlert.tsx","components/login/LoginPage/index.tsx","components/login/LoginPageContainer.tsx","apis/BrsApi.ts","apis/GoogleApi.ts","helpers/tools.ts","helpers/brsHelpers.ts","managers/SpreadsheetManager.ts","components/shared/NestedList/index.tsx","components/work/RunWorkerButtons.tsx","managers/MarksManager.ts","helpers/fio.ts","components/work/GoogleTableFetch/index.tsx","managers/ReportManager.ts","components/work/WorkerDialog/index.tsx","components/work/GoogleTableFetch/GoogleTableFetchForm.tsx","components/shared/SessionExpiredAlert.tsx","components/work/LoadingPane/index.tsx","components/work/WorkPage/index.tsx","components/work/WorkPageContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StorageType","StatusCode","TABLE_URL_PATTERN","BRS_URL","BrsUrlProvider","withProxy","this","save","name","data","whereTo","json","JSON","stringify","Local","LocalAndSession","localStorage","setItem","Session","sessionStorage","read","whereFrom","content","getItem","parse","clear","storageType","removeItem","LoginStatus","CustomError","statusCode","message","BrsAuth","brsUrlProvider","_sid","_safeUserName","_userName","BrsUnauthorized","a","loginInfo","cache","saveLoginInfo","sid","userName","checkSidAsync","sidCheckResult","success","request","method","url","baseUrl","headers","response","match","login","password","requestSidAsync","Error","cookie","result","checkResult","InvalidCredentials","Succeed","safeUserName","replaceAll","body","resolveWithFullResponse","simple","then","x","DISCOVERY_DOCS","GoogleAuth","gapi","client","Promise","resolve","load","init","clientId","discoveryDocs","scope","catch","console","error","handler","auth2","getAuthInstance","isSignedIn","listen","get","basicProfile","currentUser","getBasicProfile","getName","getEmail","signOut","Context","createContext","SubmitWithLoading","props","title","loading","className","onClick","disabled","Button","type","fullWidth","variant","color","CircularProgress","size","BrsLoginForm","onSubmit","submitting","signedIn","onLogout","React","useState","setLogin","setPassword","setSid","Fragment","e","preventDefault","TextField","margin","id","label","autoFocus","value","onChange","target","autoComplete","href","rel","GoogleLoginButton","onSignedIn","onFailure","Container","buttonText","onSuccess","CustomAlert","open","onClose","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","severity","Alert","elevation","LoginPage","handleBrsSubmit","credentials","setState","submitLoading","loginBrsAsync","loginStatus","alertMessage","openAlert","alertType","brsAuthorized","brsAuth","authBySidAsync","loginAsync","handleCloseAlert","handleGoogleSignedIn","googleAuthorized","handleGoogleLoginFailed","startWork","redirect","handleBrsLogout","logout","handleGoogleLogout","googleAuth","renderGreeting","renderBrsLogin","state","brsLoading","renderGoogleLogin","getUserName","renderStartWorkButton","ensureInitializedAsync","tryRestoreAsync","listenAuthorized","authorized","checkAuth","checkAuthorized","to","component","maxWidth","Component","LoginPageContainer","Consumer","context","StudentFailure","TermType","BrsApi","year","termType","course","isModule","cacheName","getDisciplineCacheName","cacheResult","getDisciplineTotalAsync","total","getDisciplineInternalAsync","queryString","requestApiJsonAsync","paging","disciplines","moduleParameter","discipline","getStudentMarksAsync","students","uniqueStudents","s","knownStudent","studentUuid","Object","keys","map","k","cardType","markType","getStudentMarksInternalAsync","disciplineLoad","groupHistoryId","groupId","groupUuid","techgroup","isTotal","showActiveStudents","groupPart","disciplineMeta","lecture","laboratory","practice","additionalPractice","fillCardMetaAsync","getControlActionColumnsCachedAsync","currentColumns","intermediateColumns","length","cardMeta","currentControlActions","extractControlActions","currentFactor","intermediateControlActions","intermediateFactor","totalFactor","fillFactors","totalColumns","fillTotalFactors","getControlActionColumnsInternalAsync","modulePart","requestApiAsync","prefix","suffix","linesWithId","split","trim","filter","startsWith","columns","substr","uuidPrefix","c","uuid","uuidWithoutPrefix","maxValue","isIntermediate","intermediate","controlAction","column","parseFloat","controlActionId","mark","cardTypeKey","disciplineLoadUuid","isNaN","toString","studentFailure","NoFailure","updateMarksAsync","updateMarksInternalAsync","uri","options","trimLeft","getSpreadsheet","spreadsheetId","sheets","range","spreadsheets","values","readAsync","getSpreadsheetProperties","res","sheetProps","properties","normalizeString","str","toLowerCase","replace","compareNormalized","s1","s2","parseAnyFloat","groupBy","items","key","reduce","reducer","item","itemKey","push","pluralize","count","version1","version2","version5","failureMapping","NotChosen","NotAllowedByDeansOffice","NotAppeared","Неуважительная","DisrespectfulReason","Уважительная","RespectfulReason","NotAllowedByTeacher","ShouldNotPass","AcademicLeave","Выбыл","DroppedOut","parseStudentFailure","input","undefined","formatStudentFailure","SpreadsheetManager","sheetName","readRowsFromSpreadsheetAsync","rows","header","getHeader","indices","buildIndicesBy","dataRange","buildDataRange","controlActionConfigs","buildControlActionConfig","disciplineConfig","buildDisciplineConfig","readStudentsAsync","fullNameColumn","left","groupColumn","failureColumn","actualStudents","readRange","fullNameIndex","groupNameIndex","idIndex","failureIndex","sheet","googleApi","row","fullName","groupName","failure","normalizedHeader","groupColumnIndex","indexOf","fullNameColumnIndex","failureColumnIndex","disciplineParameterKeyColumnIndex","disciplineParameterValueColumnIndex","Math","abs","disciplineKeyColumn","disciplineValueColumn","min","right","leftLetter","String","fromCharCode","charCodeAt","rightLetter","index","propertyIndex","config","sameColumns","matchCount","matchIndex","Fall","defaultStudentFailure","errors","i","addDisciplineConfigParameter","obj","errorNames","filterNull","errorNamesString","n","join","parseInt","yearParts","Spring","NestedList","icons","listSubheader","ListSubheader","hidden","List","aria-labelledby","subheader","renderNestedItems","ListItem","ListItemText","primary","level","NestedListItem","nestedItems","colored","collapsed","setOpen","hasSubItems","icon","IconPlace","ListItemIcon","button","style","paddingLeft","ExpandLess","ExpandMore","Collapse","in","unmountOnExit","disablePadding","RunWorkerButtons","enabled","onRunWorkSafe","onRunWorkUnsafe","Grid","container","justify","MarkUpdateStatus","toKey","fio","MarksManager","brsApi","reportManager","cancelPending","spreadsheetData","group","newReport","putMarksForDisciplineAsync","finishReport","cancelReport","getDisciplineMetaAsync","controlActions","checkControlActionsConfiguration","getAllStudentMarksAsync","brsStudents","mergeStudents","mergedStudents","skippedActualStudents","skippedBrsStudents","logMergedStudents","putMarksForStudentsAsync","updateFailuresForSkippedStudentsAsync","updateAllMarksAsync","getSuitableControlAction","all","student","putMarksForStudentAsync","ratingResults","groupedResults","entries","rawStudents","formatMarkUpdateStatus","infoString","currentReport","marks","updated","failed","brsMarkString","brs","brsMark","actualMarkString","actual","actualMark","needUpdateMark","actualMarkOutput","putStudentMarkAsync","brsFailureStatus","actualFailure","failureStatus","putStudentFailureAsync","status","Failed","Updated","Skipped","studentName","suitableControlActions","errorMessages","onInvalidConfiguration","updateFailureForStudent","skipped","studentFio","description","activeBrsStudents","isStudentActive","actualStudent","suitableStudents","brsStudent","brsFullName","actualFullName","areStudentsLike","some","ms","report","merge","succeed","failedActual","failedBrs","studentStatus","LastAction","ReportManager","onReportFinished","_currentReport","DialogContent","withStyles","root","padding","MuiDialogContent","DialogActions","display","justifyContent","MuiDialogActions","WorkerDialog","marksManager","logConfigurationErrors","logItems","logMessage","reportToNestedListItems","marksData","suitableDisciplines","putMarksToBrsAsync","onError","okLoading","cancelWork","cancel","mainItem","hasErrors","mergeResultsTitle","failedActualCount","failedBrsCount","mergeInfoItem","marksItem","skippedItem","Dialog","dividers","onClosed","GoogleTableFetchForm","tableUrl","setTableUrl","urlError","setUrlError","regExp","spreadsheetInfo","groups","maybeSheetId","sheetId","event","helperText","required","GoogleTableFetch","workerSaveMode","loadDisciplines","getActualSpreadsheetDataAsync","getActualDisciplinesAsync","disciplinesInfo","disciplinesToListItems","showDisciplines","lastAction","LoadDisciplines","allDisciplinesMissed","allMissed","missedDisciplinesCount","missedCount","showWorkerButtons","updateCachedDisciplines","clearDisciplineCacheAsync","runWork","RunWork","runWorker","handleRunWorkSafe","handleRunWorkUnsafe","handleWorkerClosed","None","tableUrlError","availableDisciplines","actualGroups","Set","availableGroups","Array","from","groupMissed","has","getDisciplineCachedAsync","allDisciplines","d","getSheetName","spreadsheetManager","getSpreadsheetDataAsync","spreadsheetProperties","maybeSheet","ViewModule","memo","Transition","forwardRef","ref","Slide","direction","SessionExpiredAlert","sessionName","onOk","TransitionComponent","keepMounted","aria-describedby","DialogTitle","DialogContentText","LoadingPane","WorkPage","handleError","errorMessage","handleSessionExpired","openSessionExpiredAlert","handleSessionExpiredOk","returnToLoginPage","closeError","showControls","setTimeout","marginTop","WorkPageContainer","urlProvider","App","Provider","hashType","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99697f4c.chunk.js","sourcesContent":["export enum StorageType {\r\n  Local,\r\n  Session,\r\n  LocalAndSession,\r\n}\r\n\r\nexport function save(\r\n  name: string,\r\n  data: object | string,\r\n  whereTo: StorageType\r\n) {\r\n  if (!data) {\r\n    return false;\r\n  }\r\n\r\n  const json = JSON.stringify(data);\r\n\r\n  if (whereTo === StorageType.Local || whereTo === StorageType.LocalAndSession)\r\n    localStorage.setItem(name, json);\r\n  if (\r\n    whereTo === StorageType.Session ||\r\n    whereTo === StorageType.LocalAndSession\r\n  )\r\n    sessionStorage.setItem(name, json);\r\n\r\n  return true;\r\n}\r\n\r\nexport function read<T extends object | string>(\r\n  name: string,\r\n  whereFrom: StorageType\r\n) {\r\n  let content: string | null = null;\r\n\r\n  if (whereFrom === StorageType.Local) content = localStorage.getItem(name);\r\n  if (whereFrom === StorageType.Session) content = sessionStorage.getItem(name);\r\n  if (whereFrom === StorageType.LocalAndSession)\r\n    content = sessionStorage.getItem(name) ?? localStorage.getItem(name);\r\n\r\n  if (!content) {\r\n    return null;\r\n  }\r\n\r\n  const data = JSON.parse(content);\r\n  return data ? (data as T) : null;\r\n}\r\n\r\nexport function clear(name: string, storageType: StorageType) {\r\n  if (\r\n    storageType === StorageType.Local ||\r\n    storageType === StorageType.LocalAndSession\r\n  )\r\n    localStorage.removeItem(name);\r\n  if (\r\n    storageType === StorageType.Session ||\r\n    storageType === StorageType.LocalAndSession\r\n  )\r\n    sessionStorage.removeItem(name);\r\n\r\n  return true;\r\n}\r\n","export enum StatusCode {\r\n  BrsUnauthorized = 1,\r\n  GoogleUnauthorized,\r\n}\r\n\r\nexport default class CustomError {\r\n  readonly message: string;\r\n  readonly statusCode: StatusCode;\r\n\r\n  constructor(statusCode: StatusCode, message: string = \"\") {\r\n    this.statusCode = statusCode;\r\n    this.message = message;\r\n  }\r\n}\r\n","export const SID_GAINING_INSTRUCTION_URL =\r\n    \"https://docs.google.com/document/d/1btXePo-5bE8RyX7RFXnBuS-UN9SmwUithpc_UXhAWsg/edit\";\r\n\r\nexport const TABLE_URL_PATTERN =\r\n    \"https://docs.google.com/spreadsheets/d/1Owzl3JfmFASIdC7ZMMw-0kkA3pwFSab1QdVO5dhZoxY/edit#gid=675912523\";\r\n\r\nexport const TABLE_TEMPLATE_URL =\r\n    \"https://docs.google.com/spreadsheets/d/sjwa1/edit#gid=0\";\r\n\r\nexport const BRS_URL = \"https://brs.urfu.ru/mrd\";\r\n\r\nexport const CORS_PROXY = \"https://kamikoto-cors-proxy.herokuapp.com\";\r\n","import {BRS_URL, CORS_PROXY} from \"../Constants\";\r\n\r\nexport default class BrsUrlProvider {\r\n    private readonly withProxy: boolean;\r\n\r\n    constructor(withProxy: boolean) {\r\n        this.withProxy = withProxy;\r\n    }\r\n\r\n    get baseUrl() {\r\n        return this.withProxy ? `${CORS_PROXY}/${BRS_URL}` : BRS_URL;\r\n    }\r\n}\r\n","import request from \"request-promise\";\r\nimport BrsUrlProvider from \"./BrsUrlProvider\";\r\nimport * as cache from \"../helpers/cache\";\r\nimport { StorageType } from \"../helpers/cache\";\r\nimport CustomError, { StatusCode } from \"../helpers/CustomError\";\r\n\r\nexport enum LoginStatus {\r\n  Succeed,\r\n  InvalidCredentials,\r\n  Error,\r\n}\r\n\r\nexport default class BrsAuth {\r\n  readonly brsUrlProvider: BrsUrlProvider;\r\n\r\n  constructor(brsUrlProvider: BrsUrlProvider) {\r\n    this.brsUrlProvider = brsUrlProvider;\r\n  }\r\n\r\n  private _sid: string | null = null;\r\n\r\n  get sid() {\r\n    if (!this._sid)\r\n      throw new CustomError(\r\n        StatusCode.BrsUnauthorized,\r\n        \"Нет авторизации в БРС\"\r\n      );\r\n    return this._sid;\r\n  }\r\n\r\n  private _safeUserName: string | null = null;\r\n\r\n  get safeUserName() {\r\n    if (!this._safeUserName)\r\n      throw new CustomError(\r\n        StatusCode.BrsUnauthorized,\r\n        \"Нет авторизации в БРС\"\r\n      );\r\n    return this._safeUserName;\r\n  }\r\n\r\n  private _userName?: string = \"Anonymous\";\r\n\r\n  get userName() {\r\n    return this._userName;\r\n  }\r\n\r\n  checkAuth() {\r\n    return !!(this._sid && this._safeUserName);\r\n  }\r\n\r\n  async tryRestoreAsync() {\r\n    if (!!(this._sid && this._safeUserName)) return;\r\n\r\n    let loginInfo = cache.read<LoginInfo>(\"loginInfo\", StorageType.Session);\r\n    if (loginInfo) {\r\n      this.saveLoginInfo(loginInfo.sid, loginInfo.userName);\r\n      return;\r\n    }\r\n\r\n    loginInfo = cache.read<LoginInfo>(\"loginInfo\", StorageType.Local);\r\n    if (!loginInfo) return;\r\n\r\n    const sidCheckResult = await this.checkSidAsync(loginInfo.sid);\r\n    if (sidCheckResult?.success)\r\n      this.saveLoginInfo(loginInfo.sid, loginInfo.userName);\r\n  }\r\n\r\n  private async checkSidAsync(sid: string): Promise<SidCheckResult | null> {\r\n    try {\r\n      const response: string = await request({\r\n        method: \"GET\",\r\n        url: this.brsUrlProvider.baseUrl + \"/mvc/mobile\",\r\n        headers: {\r\n          \"X-Cookie\": `JSESSIONID=${sid}`,\r\n          \"X-Requested-With\": \"XMLHttpRequest\",\r\n        },\r\n      });\r\n\r\n      const userName = response.match(/username\">([А-ЯЁа-яё -]+)</);\r\n      if (userName) return { success: true, userName: userName[1] };\r\n      return { success: false, userName: \"Anonymous\" };\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async loginAsync(login: string, password: string): Promise<LoginStatus> {\r\n    const response = await this.requestSidAsync(login, password);\r\n\r\n    if (!response || !(\"x-set-cookie\" in response.headers)) {\r\n      return LoginStatus.Error;\r\n    }\r\n\r\n    const cookie = response.headers[\"x-set-cookie\"] as string;\r\n    const result = cookie.match(/(?<=JSESSIONID=)\\w+/);\r\n\r\n    if (!result) return LoginStatus.Error;\r\n\r\n    const sid = result[0];\r\n\r\n    const checkResult = await this.checkSidAsync(sid);\r\n    if (checkResult === null) return LoginStatus.Error;\r\n    if (!checkResult.success) return LoginStatus.InvalidCredentials;\r\n\r\n    this.saveLoginInfo(sid, checkResult.userName);\r\n\r\n    return LoginStatus.Succeed;\r\n  }\r\n\r\n  async authBySidAsync(sid: string): Promise<LoginStatus> {\r\n    if (!sid) return LoginStatus.InvalidCredentials;\r\n\r\n    const checkResult = await this.checkSidAsync(sid);\r\n    if (checkResult === null) return LoginStatus.Error;\r\n    if (!checkResult.success) return LoginStatus.InvalidCredentials;\r\n\r\n    this.saveLoginInfo(sid, checkResult.userName);\r\n\r\n    return LoginStatus.Succeed;\r\n  }\r\n\r\n  private saveLoginInfo(sid: string, userName: string) {\r\n    const safeUserName = userName.replaceAll(/[^A-Za-zА-ЯЁа-яё]/g, \"_\");\r\n\r\n    cache.save(\r\n      \"loginInfo\",\r\n      { sid, safeUserName, userName },\r\n      StorageType.LocalAndSession\r\n    );\r\n\r\n    this._sid = sid;\r\n    this._safeUserName = safeUserName;\r\n    this._userName = userName;\r\n  }\r\n\r\n  logout() {\r\n    this._sid = null;\r\n    this._safeUserName = null;\r\n    cache.clear(\"loginInfo\", StorageType.LocalAndSession);\r\n  }\r\n\r\n  private async requestSidAsync(login: string, password: string) {\r\n    return await request({\r\n      url: this.brsUrlProvider.baseUrl + `/login`,\r\n      method: \"POST\",\r\n      body: `username=${login}&password=${password}`,\r\n      resolveWithFullResponse: true,\r\n      simple: false,\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n      },\r\n    }).then(\r\n      (x) => x,\r\n      () => null\r\n    );\r\n  }\r\n}\r\n\r\ninterface LoginInfo {\r\n  sid: string;\r\n  safeUserName: string;\r\n  userName: string;\r\n}\r\n\r\ninterface SidCheckResult {\r\n  success: boolean;\r\n  userName: string;\r\n}\r\n","const CLIENT_ID =\r\n  \"122993083593-pacve8csj86voko30ia65raeg0ncrtuv.apps.googleusercontent.com\";\r\nconst DISCOVERY_DOCS = [\r\n  \"https://sheets.googleapis.com/$discovery/rest?version=v4\",\r\n];\r\nconst SCOPES = \"profile email https://www.googleapis.com/auth/spreadsheets\";\r\n\r\nexport default class GoogleAuth {\r\n  async ensureInitializedAsync() {\r\n    if (gapi.client) return;\r\n\r\n    await new Promise<void>((resolve) => {\r\n      gapi.load(\"client:auth2\", resolve);\r\n    });\r\n\r\n    // NOTE: выполнение init не надо ждать\r\n    gapi.client\r\n      .init({\r\n        clientId: CLIENT_ID,\r\n        discoveryDocs: DISCOVERY_DOCS,\r\n        scope: SCOPES,\r\n      })\r\n      .catch(console.error);\r\n  }\r\n\r\n  listenAuthorized(handler: (authorized: boolean) => void) {\r\n    gapi.auth2?.getAuthInstance()?.isSignedIn?.listen(handler);\r\n  }\r\n\r\n  checkAuthorized() {\r\n    return gapi.auth2?.getAuthInstance()?.isSignedIn?.get();\r\n  }\r\n\r\n  getUserName(): string | undefined {\r\n    const basicProfile = gapi.auth2\r\n      ?.getAuthInstance()\r\n      ?.currentUser?.get()\r\n      ?.getBasicProfile();\r\n    return basicProfile?.getName() || basicProfile?.getEmail();\r\n  }\r\n\r\n  async logout() {\r\n    await gapi.auth2?.getAuthInstance()?.signOut();\r\n  }\r\n}\r\n","import { createContext } from \"react\";\r\nimport BrsAuth from \"./apis/BrsAuth\";\r\nimport BrsApi from \"./apis/BrsApi\";\r\nimport GoogleAuth from \"./apis/GoogleAuth\";\r\n\r\nconst Context =\r\n  createContext<{\r\n    brsAuth: BrsAuth;\r\n    brsApi: BrsApi;\r\n    googleAuth: GoogleAuth;\r\n  } | null>(null);\r\n\r\nexport default Context;\r\n","import { Button, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default function SubmitWithLoading(props: Props) {\r\n  const { title, loading, className, onClick, disabled = false } = props;\r\n\r\n  return (\r\n    <div className={\"submit-with-loading \" + className}>\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={onClick}\r\n        disabled={loading || disabled}\r\n      >\r\n        {title}\r\n      </Button>\r\n      {loading && (\r\n        <CircularProgress\r\n          color=\"secondary\"\r\n          size={24}\r\n          className=\"button-progress\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  title: string;\r\n  loading: boolean;\r\n  className?: string;\r\n  onClick?: () => void;\r\n  disabled?: boolean;\r\n}\r\n","import { Button, CircularProgress, TextField } from \"@material-ui/core\";\r\nimport SubmitWithLoading from \"../../shared/SubmitWithLoading\";\r\nimport React, { FormEvent } from \"react\";\r\nimport \"./styles.css\";\r\nimport { SID_GAINING_INSTRUCTION_URL } from \"../../../Constants\";\r\n\r\nexport default function BrsLoginForm({\r\n  onSubmit,\r\n  submitting,\r\n  loading,\r\n  signedIn,\r\n  onLogout,\r\n  userName,\r\n}: Props) {\r\n  const [login, setLogin] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [sid, setSid] = React.useState(\"\");\r\n\r\n  function handleUserNameChanged(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const value = e.target.value;\r\n    setLogin(value);\r\n    setSid(\"\");\r\n  }\r\n\r\n  function handlePasswordChanged(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const value = e.target.value;\r\n    setPassword(value);\r\n    setSid(\"\");\r\n  }\r\n\r\n  function handleSidChanged(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const value = e.target.value;\r\n    setSid(value);\r\n    setLogin(\"\");\r\n    setPassword(\"\");\r\n  }\r\n\r\n  function handleSubmit(e: FormEvent) {\r\n    e.preventDefault();\r\n\r\n    if (loading) return;\r\n\r\n    onSubmit({ login: login, password, sid });\r\n  }\r\n\r\n  return signedIn ? (\r\n    <React.Fragment>\r\n      <p>Добро пожаловать, {userName}</p>\r\n      <Button\r\n        type=\"button\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        onClick={onLogout}\r\n        color=\"primary\"\r\n      >\r\n        Выйти из БРС\r\n      </Button>\r\n    </React.Fragment>\r\n  ) : (\r\n    <div className=\"brs-login-form\">\r\n      <p>\r\n        <b>Войдите в БРС</b>, чтобы сервис мог получить информацию о ваших\r\n        курсах и выставлять оценки от вашего имени\r\n      </p>\r\n      <p>Это можно сделать через учетную запись БРС</p>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <TextField\r\n          className=\"form-component\"\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          id=\"username\"\r\n          label=\"Имя пользователя\"\r\n          name=\"username\"\r\n          autoFocus\r\n          value={login}\r\n          disabled={loading}\r\n          onChange={handleUserNameChanged}\r\n        />\r\n        <TextField\r\n          className=\"form-component\"\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Пароль\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"current-password\"\r\n          value={password}\r\n          disabled={loading}\r\n          onChange={handlePasswordChanged}\r\n        />\r\n        <p className=\"form-component text-align-center\">\r\n          или через JSESSIONID при использовании единой учетной записи УрФУ\r\n        </p>\r\n        <TextField\r\n          className=\"form-component\"\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          name=\"sid\"\r\n          label=\"JSESSIONID\"\r\n          type=\"password\"\r\n          id=\"sid\"\r\n          value={sid}\r\n          disabled={loading}\r\n          onChange={handleSidChanged}\r\n        />\r\n        <a\r\n          href={SID_GAINING_INSTRUCTION_URL}\r\n          className=\"button-link\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          Как получить JSESSIONID\r\n        </a>\r\n        <SubmitWithLoading\r\n          className=\"vertical-margin-medium\"\r\n          title=\"войти\"\r\n          loading={submitting}\r\n          disabled={loading}\r\n        />\r\n      </form>\r\n      {loading && (\r\n        <CircularProgress color=\"primary\" size={150} className=\"progress\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  submitting: boolean;\r\n  loading: boolean;\r\n  onSubmit: (credentials: Credentials) => void;\r\n  onLogout: () => void;\r\n  signedIn: boolean;\r\n  userName?: string;\r\n}\r\n\r\nexport interface Credentials {\r\n  login: string;\r\n  password: string;\r\n  sid: string;\r\n}\r\n","import GoogleLogin from \"react-google-login\";\r\nimport React from \"react\";\r\nimport { Button, Container } from \"@material-ui/core\";\r\n\r\nconst CLIENT_ID =\r\n  \"122993083593-pacve8csj86voko30ia65raeg0ncrtuv.apps.googleusercontent.com\";\r\nconst SCOPES = \"profile email https://www.googleapis.com/auth/spreadsheets\";\r\n\r\nexport default function GoogleLoginButton(props: Props) {\r\n  const { onSignedIn, onFailure, signedIn, userName, onLogout } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {signedIn ? (\r\n        <Container className=\"text-align-center\">\r\n          <p>Добро пожаловать, {userName}</p>\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            onClick={onLogout}\r\n            color=\"primary\"\r\n          >\r\n            Выйти из Google\r\n          </Button>\r\n        </Container>\r\n      ) : (\r\n        <Container className=\"text-align-center\">\r\n          <p>\r\n            <b>Войдите в Google</b>, чтобы сервис мог загружать оценки студентов\r\n            из ваших Google&nbsp;Таблиц\r\n          </p>\r\n          <GoogleLogin\r\n            clientId={CLIENT_ID}\r\n            buttonText=\"Войти в аккаунт Google\"\r\n            onSuccess={onSignedIn}\r\n            onFailure={onFailure}\r\n            scope={SCOPES}\r\n            isSignedIn={true}\r\n          />\r\n        </Container>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  onSignedIn: () => void;\r\n  onFailure: (error: any) => void;\r\n  onLogout: () => void;\r\n  signedIn: boolean;\r\n  userName?: string;\r\n}\r\n","import React from \"react\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\n\r\nexport default function CustomAlert(props: Props) {\r\n  const { open, message, type, onClose } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={10000}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        onClose={onClose}\r\n      >\r\n        <Alert severity={type} onClose={onClose}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  message: string;\r\n  type: \"error\" | \"success\";\r\n  onClose: () => void;\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Button, Container } from \"@material-ui/core\";\r\nimport BrsAuth, { LoginStatus } from \"../../../apis/BrsAuth\";\r\nimport BrsLoginForm, { Credentials } from \"../BrsLoginForm\";\r\nimport GoogleAuth from \"../../../apis/GoogleAuth\";\r\nimport GoogleLoginButton from \"../GoogleLoginButton\";\r\nimport CustomAlert from \"../../shared/CustomAlert\";\r\nimport { TABLE_URL_PATTERN } from \"../../../Constants\";\r\n\r\nexport default class LoginPage extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      brsLoading: true,\r\n      brsAuthorized: false,\r\n      googleAuthorized: false,\r\n      redirect: false,\r\n      submitLoading: false,\r\n      openAlert: false,\r\n      alertMessage: \"\",\r\n      alertType: \"error\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.props.googleAuth.ensureInitializedAsync();\r\n    await this.props.brsAuth.tryRestoreAsync();\r\n\r\n    this.props.googleAuth.listenAuthorized((authorized) => {\r\n      this.setState({ googleAuthorized: authorized });\r\n    });\r\n\r\n    const brsAuthorized = this.props.brsAuth.checkAuth();\r\n    const googleAuthorized = this.props.googleAuth.checkAuthorized();\r\n    this.setState({ brsLoading: false, brsAuthorized, googleAuthorized });\r\n  }\r\n\r\n  handleBrsSubmit = async (credentials: Credentials) => {\r\n    this.setState({ submitLoading: true });\r\n\r\n    const loginStatus = await this.loginBrsAsync(credentials);\r\n\r\n    this.setState({ submitLoading: false });\r\n\r\n    switch (loginStatus) {\r\n      case LoginStatus.Succeed:\r\n        this.setState({\r\n          alertMessage: \"Авторизация прошла успешно\",\r\n          openAlert: true,\r\n          alertType: \"success\",\r\n          brsAuthorized: true,\r\n        });\r\n        break;\r\n      case LoginStatus.Error:\r\n        this.setState({\r\n          alertMessage: \"Что-то пошло не так :( Попробуйте позже\",\r\n          openAlert: true,\r\n          alertType: \"error\",\r\n        });\r\n        break;\r\n      case LoginStatus.InvalidCredentials:\r\n        this.setState({\r\n          alertMessage: \"Неверные логин, пароль или JSESSIONID\",\r\n          openAlert: true,\r\n          alertType: \"error\",\r\n        });\r\n    }\r\n  };\r\n\r\n  loginBrsAsync = async (credentials: Credentials): Promise<LoginStatus> => {\r\n    if (credentials.sid) {\r\n      return await this.props.brsAuth.authBySidAsync(credentials.sid);\r\n    }\r\n    if (credentials.login && credentials.password) {\r\n      return await this.props.brsAuth.loginAsync(\r\n        credentials.login,\r\n        credentials.password\r\n      );\r\n    }\r\n    return LoginStatus.InvalidCredentials;\r\n  };\r\n\r\n  handleCloseAlert = () => {\r\n    this.setState({ openAlert: false });\r\n  };\r\n\r\n  handleGoogleSignedIn = () => {\r\n    this.setState({ googleAuthorized: true });\r\n  };\r\n\r\n  handleGoogleLoginFailed = (error: any) => {\r\n    console.error(error);\r\n\r\n    this.setState({\r\n      openAlert: true,\r\n      alertType: \"error\",\r\n      alertMessage: \"Не удалось подключить Ваш Google аккаунт :(\",\r\n    });\r\n  };\r\n\r\n  startWork = () => {\r\n    this.setState({ redirect: true });\r\n  };\r\n\r\n  handleBrsLogout = () => {\r\n    this.props.brsAuth.logout();\r\n    this.setState({\r\n      brsAuthorized: false,\r\n      alertMessage: \"Вы вышли из аккаунта БРС\",\r\n      alertType: \"success\",\r\n      openAlert: true,\r\n    });\r\n  };\r\n\r\n  handleGoogleLogout = async () => {\r\n    await this.props.googleAuth.logout();\r\n    this.setState({\r\n      googleAuthorized: false,\r\n      alertType: \"success\",\r\n      alertMessage: \"Вы вышли из аккаунта Google\",\r\n      openAlert: true,\r\n    });\r\n  };\r\n\r\n  renderGreeting = () => {\r\n    return (\r\n      <div className=\"greeting\">\r\n        <h2>Добро пожаловать в Расширения БРС</h2>\r\n        <h3 className=\"block-header\">Как все работает</h3>\r\n        <ol>\r\n          <li>\r\n            В Google&nbsp;Таблицах вы заполняете оценки за курс по некоторому{\" \"}\r\n            <a\r\n              href={TABLE_URL_PATTERN}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              className=\"button-link\"\r\n            >\r\n              шаблону\r\n            </a>\r\n          </li>\r\n          <li>\r\n            После этого импортируете Google Таблицу в сервис и выполняете\r\n            пробный запуск выставления оценок, чтобы исключить ошибки\r\n          </li>\r\n          <li>Наконец делаете запуск с реальным выставлением оценок</li>\r\n        </ol>\r\n        <h3 className=\"block-header\">Правила хранения данных</h3>\r\n        <p>\r\n          Ваш логин и пароль передаются в БРС и нигде не сохраняются\r\n          <br />\r\n          Данные о доступных вам курсах сохраняются только в вашем браузере\r\n        </p>\r\n        <hr />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderBrsLogin = () => {\r\n    return (\r\n      <BrsLoginForm\r\n        onSubmit={this.handleBrsSubmit}\r\n        loading={this.state.brsLoading}\r\n        signedIn={this.state.brsAuthorized}\r\n        onLogout={this.handleBrsLogout}\r\n        userName={this.props.brsAuth.userName}\r\n        submitting={this.state.submitLoading}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderGoogleLogin = () => {\r\n    return (\r\n      <GoogleLoginButton\r\n        onSignedIn={this.handleGoogleSignedIn}\r\n        signedIn={this.state.googleAuthorized}\r\n        userName={this.props.googleAuth.getUserName()}\r\n        onLogout={this.handleGoogleLogout}\r\n        onFailure={this.handleGoogleLoginFailed}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderStartWorkButton = () => {\r\n    return (\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={this.startWork}\r\n        disabled={!this.state.brsAuthorized || !this.state.googleAuthorized}\r\n        color=\"secondary\"\r\n      >\r\n        начать работу\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login-page\">\r\n        {this.state.redirect && <Redirect to=\"/work\" />}\r\n        <Container component=\"main\" maxWidth=\"md\">\r\n          {this.renderGreeting()}\r\n          <Container maxWidth=\"xs\">\r\n            <Container>{this.renderBrsLogin()}</Container>\r\n            <hr className=\"vertical-margin-medium\" />\r\n            <Container>{this.renderGoogleLogin()}</Container>\r\n          </Container>\r\n          <Container className=\"text-align-center vertical-margin-large\">\r\n            {this.renderStartWorkButton()}\r\n          </Container>\r\n          <CustomAlert\r\n            open={this.state.openAlert}\r\n            message={this.state.alertMessage}\r\n            type={this.state.alertType}\r\n            onClose={this.handleCloseAlert}\r\n          />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\ninterface State {\r\n  brsLoading: boolean;\r\n  brsAuthorized: boolean;\r\n  googleAuthorized: boolean;\r\n  submitLoading: boolean;\r\n  redirect: boolean;\r\n  openAlert: boolean;\r\n  alertMessage: string;\r\n  alertType: \"error\" | \"success\";\r\n}\r\n\r\ninterface Props {\r\n  brsAuth: BrsAuth;\r\n  googleAuth: GoogleAuth;\r\n}\r\n","import React from \"react\";\r\nimport Context from \"../../Context\";\r\nimport LoginPage from \"./LoginPage\";\r\n\r\nexport default function LoginPageContainer() {\r\n  return (\r\n    <Context.Consumer>\r\n      {(context) =>\r\n        context && (\r\n          <LoginPage\r\n            brsAuth={context.brsAuth}\r\n            googleAuth={context.googleAuth}\r\n          />\r\n        )\r\n      }\r\n    </Context.Consumer>\r\n  );\r\n}\r\n","import \"bluebird\";\r\nimport request from \"request-promise\";\r\nimport * as cache from \"../helpers/cache\";\r\nimport { StorageType } from \"../helpers/cache\";\r\nimport BrsAuth from \"./BrsAuth\";\r\nimport BrsUrlProvider from \"./BrsUrlProvider\";\r\nimport CustomError, { StatusCode } from \"../helpers/CustomError\";\r\n\r\nexport enum StudentFailure {\r\n  /** -, дефис, все хорошо */ NoFailure = -1,\r\n  /** Не выбрана */ NotChosen = -19,\r\n  /** Не допущен (деканат) */ NotAllowedByDeansOffice = -18,\r\n  /** Не явился */ NotAppeared = 0,\r\n  /** Неуважительная */ DisrespectfulReason = 12,\r\n  /** Уважительная */ RespectfulReason = 13,\r\n  /** Не допущен */ NotAllowedByTeacher = 18,\r\n  /** Не должен сдавать */ ShouldNotPass = 19,\r\n  /** Академический отпуск */ AcademicLeave = 20,\r\n  /** Выбыл */ DroppedOut = 21,\r\n}\r\n\r\nexport enum TermType {\r\n  Fall = 1,\r\n  Spring = 2,\r\n}\r\n\r\nexport default class BrsApi {\r\n  readonly brsAuth: BrsAuth;\r\n  private readonly brsUrlProvider: BrsUrlProvider;\r\n\r\n  constructor(brsAuth: BrsAuth, brsUrlProvider: BrsUrlProvider) {\r\n    this.brsAuth = brsAuth;\r\n    this.brsUrlProvider = brsUrlProvider;\r\n  }\r\n\r\n  async getDisciplineCachedAsync(\r\n    year: number,\r\n    termType: TermType,\r\n    course: number,\r\n    isModule: boolean\r\n  ) {\r\n    const cacheName = this.getDisciplineCacheName(\r\n      year,\r\n      termType,\r\n      course,\r\n      isModule\r\n    );\r\n    const cacheResult = cache.read<Discipline[]>(\r\n      cacheName,\r\n      StorageType.Session\r\n    );\r\n    if (cacheResult) {\r\n      return cacheResult;\r\n    }\r\n\r\n    const total = await this.getDisciplineTotalAsync(\r\n      year,\r\n      termType,\r\n      course,\r\n      isModule\r\n    );\r\n    const result = await this.getDisciplineInternalAsync(\r\n      year,\r\n      termType,\r\n      course,\r\n      isModule,\r\n      total\r\n    );\r\n    cache.save(cacheName, result, StorageType.Session);\r\n    return result;\r\n  }\r\n\r\n  async getDisciplineInternalAsync(\r\n    year: number,\r\n    termType: TermType,\r\n    course: number,\r\n    isModule: boolean,\r\n    total: number\r\n  ) {\r\n    const queryString = `?year=${year}&termType=${termType}&course=${course}&total=${total}&page=1&pageSize=${total}&search=`;\r\n    if (isModule) {\r\n      const paging = await this.requestApiJsonAsync<Paging<Discipline>>(\r\n        \"/mvc/mobile/module/fetch\" + queryString\r\n      );\r\n      const disciplines = paging.content;\r\n      for (const d of disciplines) {\r\n        d.isModule = true;\r\n      }\r\n      return disciplines;\r\n    } else {\r\n      const paging = await this.requestApiJsonAsync<Paging<Discipline>>(\r\n        \"/mvc/mobile/discipline/fetch\" + queryString\r\n      );\r\n      const disciplines = paging.content;\r\n      for (const d of disciplines) {\r\n        d.isModule = false;\r\n      }\r\n      return disciplines;\r\n    }\r\n  }\r\n\r\n  async clearDisciplineCacheAsync(\r\n    year: number,\r\n    termType: TermType,\r\n    course: number,\r\n    isModule: boolean\r\n  ) {\r\n    const cacheName = this.getDisciplineCacheName(\r\n      year,\r\n      termType,\r\n      course,\r\n      isModule\r\n    );\r\n    cache.clear(cacheName, StorageType.Session);\r\n  }\r\n\r\n  async getDisciplineTotalAsync(\r\n    year: number,\r\n    termType: TermType,\r\n    course: number,\r\n    isModule: boolean\r\n  ) {\r\n    const moduleParameter = isModule ? \"&its=true\" : \"\";\r\n    const queryString =\r\n      `?year=${year}&termType=${termType}&course=${course}` + moduleParameter;\r\n    const total = await this.requestApiJsonAsync<number>(\r\n      \"/mvc/mobile/discipline/amount\" + queryString\r\n    );\r\n    return total;\r\n  }\r\n\r\n  async getAllStudentMarksAsync(discipline: Discipline) {\r\n    const students = [\r\n      ...(await this.getStudentMarksAsync(discipline, \"lecture\", \"current\")),\r\n      ...(await this.getStudentMarksAsync(\r\n        discipline,\r\n        \"lecture\",\r\n        \"intermediate\"\r\n      )),\r\n      ...(await this.getStudentMarksAsync(discipline, \"laboratory\", \"current\")),\r\n      ...(await this.getStudentMarksAsync(\r\n        discipline,\r\n        \"laboratory\",\r\n        \"intermediate\"\r\n      )),\r\n    ];\r\n\r\n    const uniqueStudents: { [id: string]: StudentMark } = {};\r\n    for (const s of students) {\r\n      const knownStudent = uniqueStudents[s.studentUuid] || {};\r\n      uniqueStudents[s.studentUuid] = { ...knownStudent, ...s };\r\n    }\r\n\r\n    return Object.keys(uniqueStudents).map((k) => uniqueStudents[k]);\r\n  }\r\n\r\n  async getStudentMarksAsync(\r\n    discipline: Discipline,\r\n    cardType: CardType,\r\n    markType: MarkType\r\n  ) {\r\n    return this.getStudentMarksInternalAsync(\r\n      discipline.disciplineLoad,\r\n      discipline.isModule,\r\n      discipline.groupHistoryId,\r\n      discipline.groupId,\r\n      cardType,\r\n      markType\r\n    );\r\n  }\r\n\r\n  async getStudentMarksInternalAsync(\r\n    disciplineLoad: string,\r\n    isModule: boolean,\r\n    groupUuid: string,\r\n    techgroup: string,\r\n    cardType: CardType,\r\n    markType: MarkType,\r\n    isTotal: boolean = false,\r\n    showActiveStudents: boolean = false\r\n  ) {\r\n    const groupPart = isModule\r\n      ? `techgroup=${techgroup}`\r\n      : `groupUuid=${groupUuid}`;\r\n    return this.requestApiJsonAsync<StudentMark[]>(\r\n      `/mvc/mobile/studentMarks/fetch?disciplineLoad=${disciplineLoad}&${groupPart}` +\r\n        `&cardType=${cardType}&hasTest=false&isTotal=${isTotal}` +\r\n        `&intermediate=${markType === \"intermediate\"}` +\r\n        `&selectedTeachers=null&showActiveStudents=${showActiveStudents}`\r\n    );\r\n  }\r\n\r\n  async getDisciplineMetaAsync(\r\n    discipline: Discipline\r\n  ): Promise<DisciplineMeta> {\r\n    const disciplineMeta: DisciplineMeta = {\r\n      lecture: null,\r\n      laboratory: null,\r\n      practice: null,\r\n      additionalPractice: null,\r\n    };\r\n\r\n    await this.fillCardMetaAsync(disciplineMeta, discipline, \"lecture\");\r\n    await this.fillCardMetaAsync(disciplineMeta, discipline, \"laboratory\");\r\n    await this.fillCardMetaAsync(disciplineMeta, discipline, \"practice\");\r\n    await this.fillCardMetaAsync(\r\n      disciplineMeta,\r\n      discipline,\r\n      \"additionalPractice\"\r\n    );\r\n\r\n    debugger;\r\n    return disciplineMeta;\r\n  }\r\n\r\n  async fillCardMetaAsync(\r\n    disciplineMeta: DisciplineMeta,\r\n    discipline: Discipline,\r\n    cardType: CardType\r\n  ) {\r\n    const currentColumns = await this.getControlActionColumnsCachedAsync(\r\n      discipline,\r\n      cardType,\r\n      \"current\"\r\n    );\r\n    const intermediateColumns = await this.getControlActionColumnsCachedAsync(\r\n      discipline,\r\n      cardType,\r\n      \"intermediate\"\r\n    );\r\n    if (currentColumns.length + intermediateColumns.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const cardMeta = {\r\n      currentControlActions: this.extractControlActions(currentColumns),\r\n      currentFactor: 0,\r\n      intermediateControlActions:\r\n        this.extractControlActions(intermediateColumns),\r\n      intermediateFactor: 0,\r\n      totalFactor: 0,\r\n    };\r\n    this.fillFactors(cardMeta, currentColumns);\r\n    this.fillFactors(cardMeta, intermediateColumns);\r\n    disciplineMeta[cardType] = cardMeta;\r\n\r\n    const totalColumns = await this.getControlActionColumnsCachedAsync(\r\n      discipline,\r\n      cardType,\r\n      \"total\"\r\n    );\r\n    this.fillTotalFactors(disciplineMeta, totalColumns);\r\n  }\r\n\r\n  async getControlActionColumnsCachedAsync(\r\n    discipline: Discipline,\r\n    cardType: CardType,\r\n    markType: MarkType\r\n  ) {\r\n    const cacheName =\r\n      `${this.brsAuth.safeUserName}_getControlActionColumns_${discipline.disciplineLoad}` +\r\n      `_${discipline.isModule}_${discipline.groupHistoryId}_${discipline.groupId}_${cardType}_${markType}`;\r\n    const cacheResult = cache.read<ControlActionColumn[]>(\r\n      cacheName,\r\n      StorageType.Session\r\n    );\r\n    if (cacheResult) {\r\n      return cacheResult;\r\n    }\r\n\r\n    const result = await this.getControlActionColumnsInternalAsync(\r\n      discipline.disciplineLoad,\r\n      discipline.isModule,\r\n      discipline.groupHistoryId,\r\n      discipline.groupId,\r\n      cardType,\r\n      markType\r\n    );\r\n    cache.save(cacheName, result, StorageType.Session);\r\n    return result;\r\n  }\r\n\r\n  async getControlActionColumnsInternalAsync(\r\n    disciplineLoad: string,\r\n    isModule: boolean,\r\n    groupUuid: string,\r\n    techgroup: string,\r\n    cardType: CardType,\r\n    markType: MarkType\r\n  ) {\r\n    const modulePart = isModule ? \"/module\" : \"\";\r\n    const groupPart = isModule ? techgroup : groupUuid;\r\n    const response = await this.requestApiAsync<string>(\r\n      `/mvc/mobile/view/mark/${disciplineLoad}/${groupPart}/teachers${modulePart}/${cardType}/${markType}`\r\n    );\r\n\r\n    const prefix = \"gridColumns = toTextArray(\";\r\n    const suffix = \");\";\r\n    const linesWithId = response\r\n      .split(\"\\r\\n\")\r\n      .map((s) => s.trim())\r\n      .filter((s) => s.startsWith(prefix));\r\n    if (linesWithId.length !== 1) {\r\n      throw new Error(\r\n        \"Не удалось разобрать страницу БРС со списком контрольных мероприятий. Ожидается, что эта страница содержит единственную строчку с идентификатором техкарты.\"\r\n      );\r\n    }\r\n\r\n    const columns: Array<ControlActionColumn> =\r\n      JSON.parse(\r\n        linesWithId[0].substr(\r\n          prefix.length,\r\n          linesWithId[0].length - prefix.length - suffix.length\r\n        )\r\n      ) || [];\r\n\r\n    return columns;\r\n  }\r\n\r\n  extractControlActions(columns: ControlActionColumn[]) {\r\n    const uuidPrefix = \"technologyCard\";\r\n    const result = columns\r\n      .filter((c) => c.uuid && c.uuid.startsWith(uuidPrefix))\r\n      .map((c) => ({\r\n        uuid: c.uuid,\r\n        uuidWithoutPrefix: c.uuid.substr(uuidPrefix.length),\r\n        maxValue: c.maxValue,\r\n        isIntermediate: c.intermediate > 0,\r\n        controlAction: c.controlAction,\r\n      }));\r\n\r\n    return result as ControlAction[];\r\n  }\r\n\r\n  fillFactors(cardMeta: CardMeta, columns: ControlActionColumn[]) {\r\n    for (const column of columns) {\r\n      switch (column.uuid) {\r\n        case \"currentWithFactor\":\r\n          cardMeta.currentFactor = typeof column.value === \"string\" ? parseFloat(column.value) : column.value;\r\n          break;\r\n        case \"intermediateWithFactor\":\r\n          cardMeta.intermediateFactor = typeof column.value === \"string\" ? parseFloat(column.value) : column.value;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  fillTotalFactors(\r\n    disciplineMeta: DisciplineMeta,\r\n    columns: ControlActionColumn[]\r\n  ) {\r\n    debugger;\r\n    for (const column of columns) {\r\n      switch (column.uuid) {\r\n        case \"lecture\":\r\n        case \"laboratory\":\r\n        case \"practice\":\r\n        case \"additionalPractice\":\r\n          const uuid: CardType = column.uuid;\r\n          const cardMeta = disciplineMeta[uuid];\r\n          if (cardMeta !== null) {\r\n            cardMeta.totalFactor = typeof column.value === \"string\" ? parseFloat(column.value) : column.value;\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  async putStudentMarkAsync(\r\n    studentUuid: string,\r\n    controlActionId: string,\r\n    mark: number,\r\n    groupId: string,\r\n    cardTypeKey: CardType,\r\n    disciplineLoadUuid: string\r\n  ) {\r\n    const body = `student=${studentUuid}&techcard=${controlActionId}&mark=${\r\n      isNaN(mark) ? \"\" : mark.toString()\r\n    }&groupId=${groupId}&cardTypeKey=${cardTypeKey}&disciplineLoadUuid=${disciplineLoadUuid}`;\r\n    return this.requestApiJsonAsync<StudentMark>(\r\n      `/mvc/mobile/studentMarks/put`,\r\n      {\r\n        method: \"POST\",\r\n        body,\r\n        json: false,\r\n      },\r\n      {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n      }\r\n    );\r\n  }\r\n\r\n  async putStudentFailureAsync(\r\n    studentUuid: string,\r\n    discipline: Discipline,\r\n    studentFailure: StudentFailure = StudentFailure.NoFailure,\r\n    cardType: CardType = \"lecture\"\r\n  ) {\r\n    const body = `markFailure=${studentFailure}&cardType=${cardType}&disciplineLoad=${discipline.disciplineLoad}&studentId=${studentUuid}`;\r\n    await this.requestApiAsync(\r\n      `/mvc/mobile/failure/update`,\r\n      {\r\n        method: \"POST\",\r\n        body,\r\n        json: false,\r\n      },\r\n      {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n      }\r\n    );\r\n  }\r\n\r\n  async updateAllMarksAsync(discipline: Discipline) {\r\n    // Одного вызова достаточно, чтобы обновить все оценки по предмету у группы.\r\n    await this.updateMarksAsync(discipline, \"lecture\", \"intermediate\");\r\n    // await updateMarksAsync(discipline, 'lecture', 'current');\r\n    // await updateMarksAsync(discipline, 'lecture', 'intermediate');\r\n    // await updateMarksAsync(discipline, 'laboratory', 'current');\r\n    // await updateMarksAsync(discipline, 'laboratory', 'intermediate');\r\n    // await updateMarksAsync(discipline, 'practice', 'current');\r\n    // await updateMarksAsync(discipline, 'practice', 'intermediate');\r\n  }\r\n\r\n  async updateMarksAsync(\r\n    discipline: Discipline,\r\n    cardType: CardType,\r\n    markType: MarkType\r\n  ) {\r\n    return this.updateMarksInternalAsync(\r\n      discipline.disciplineLoad,\r\n      discipline.isModule,\r\n      discipline.groupHistoryId,\r\n      discipline.groupId,\r\n      cardType,\r\n      markType\r\n    );\r\n  }\r\n\r\n  async updateMarksInternalAsync(\r\n    disciplineLoad: string,\r\n    isModule: boolean,\r\n    groupUuid: string,\r\n    techgroup: string,\r\n    cardType: CardType,\r\n    markType: MarkType\r\n  ) {\r\n    const modulePart = isModule ? \"/module\" : \"\";\r\n    const groupPart = isModule\r\n      ? `techgroup=${techgroup}`\r\n      : `groupUuid=${groupUuid}`;\r\n    const body =\r\n      `disciplineLoad=${disciplineLoad}&${groupPart}` +\r\n      `&cardType=${cardType}&hasTest=false&isTotal=false` +\r\n      `&intermediate=${markType === \"intermediate\"}` +\r\n      `&selectedTeachers=null&showActiveStudents=true`;\r\n    return this.requestApiAsync<string>(\r\n      `/mvc/mobile/updateMarks${modulePart}`,\r\n      {\r\n        method: \"POST\",\r\n        body,\r\n        json: false,\r\n      },\r\n      {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n      }\r\n    );\r\n  }\r\n\r\n  getDisciplineCacheName(\r\n    year: number,\r\n    termType: TermType,\r\n    course: number,\r\n    isModule: boolean\r\n  ) {\r\n    return `${this.brsAuth.safeUserName}_getDiscipline_${year}_${termType}_${course}_${isModule}`;\r\n  }\r\n\r\n  async requestApiJsonAsync<T>(\r\n    uri: string,\r\n    options?: RequestOptions,\r\n    headers?: RequestHeaders\r\n  ): Promise<T> {\r\n    const response = await this.requestApiAsync<string>(uri, options, headers);\r\n\r\n    return JSON.parse(response);\r\n  }\r\n\r\n  async requestApiAsync<T>(\r\n    uri: string,\r\n    options?: RequestOptions,\r\n    headers?: RequestHeaders\r\n  ): Promise<T> {\r\n    const response = await request({\r\n      method: \"GET\",\r\n      ...options,\r\n      url: this.brsUrlProvider.baseUrl + uri,\r\n      headers: {\r\n        \"X-Cookie\": `JSESSIONID=${this.brsAuth.sid}`,\r\n        \"X-Requested-With\": \"XMLHttpRequest\",\r\n        ...headers,\r\n      },\r\n    });\r\n\r\n    if (response.trimLeft().startsWith(\"<!DOCTYPE html>\")) {\r\n      throw new CustomError(StatusCode.BrsUnauthorized, uri + \" is Forbidden\");\r\n    }\r\n\r\n    return response;\r\n  }\r\n}\r\n\r\nexport type CardType =\r\n  | \"lecture\"\r\n  | \"laboratory\"\r\n  | \"practice\"\r\n  | \"additionalPractice\";\r\nexport type MarkType = \"current\" | \"intermediate\" | \"total\";\r\n\r\nexport interface RegisterInfo {\r\n  registerInfoStr: string;\r\n  registerId: number;\r\n  passDate: any;\r\n  cardType: string;\r\n  sheet: string;\r\n}\r\n\r\nexport interface Discipline {\r\n  groupId: string;\r\n  discipline: string;\r\n  group: string;\r\n  registerInfo: RegisterInfo[];\r\n  disciplineLoad: string;\r\n  groupHistoryId: string;\r\n  isModule: boolean;\r\n}\r\n\r\n// eslint-disable-next-line\r\nconst studentMarkSample: StudentMark = {\r\n  studentPersonalNumber: \"09800106\",\r\n  isEdit: false,\r\n  studentUuid:\r\n    \"studen18hc2jg0000magk6mi3iec84bsundigr18hc2jg0000m53o7mlgvora278\",\r\n  status: 1,\r\n  studentStatus: \"Активный\",\r\n  ignoreCurrentDebars: false,\r\n  studentFio: \"Анисимова Маргарита Васильевна\",\r\n  isExtern: false,\r\n  teacherName: \"\",\r\n  cardType: \"lecture\",\r\n  studentName: \"Анисимова М.В.\",\r\n  studentGroup: \"РИ-180001\",\r\n  registerClosed: false,\r\n  subgroupsITS: \"\",\r\n  disciplineLoad: \"unpldd18hc2jg0000m5kojcd3te76bnk\",\r\n};\r\n\r\nexport interface StudentMark {\r\n  studentPersonalNumber: string;\r\n  isEdit: boolean;\r\n  studentUuid: string;\r\n  status: number;\r\n  studentStatus: string;\r\n  ignoreCurrentDebars: boolean;\r\n  studentFio: string;\r\n  isExtern: boolean;\r\n  teacherName: string;\r\n  cardType: CardType;\r\n  studentName: string;\r\n  studentGroup: string;\r\n  registerClosed: boolean;\r\n  subgroupsITS: string;\r\n  disciplineLoad: string;\r\n  failure?: StudentFailure;\r\n  failureName?: string;\r\n\r\n  [props: string]: number | string | boolean | undefined;\r\n}\r\n\r\nexport interface DisciplineMeta {\r\n  lecture: CardMeta | null;\r\n  laboratory: CardMeta | null;\r\n  practice: CardMeta | null;\r\n  additionalPractice: CardMeta | null;\r\n}\r\n\r\nexport interface CardMeta {\r\n  currentFactor: number;\r\n  currentControlActions: ControlAction[];\r\n  intermediateFactor: number;\r\n  intermediateControlActions: ControlAction[];\r\n  totalFactor: number;\r\n}\r\n\r\nexport interface ControlAction {\r\n  uuid: string;\r\n  uuidWithoutPrefix: string;\r\n  controlAction: string;\r\n  maxValue: number;\r\n  isIntermediate: boolean;\r\n}\r\n\r\ninterface ControlActionColumn {\r\n  controlAction: string;\r\n  uuid: string;\r\n  maxValue: number;\r\n  intermediate: number;\r\n  value: number | string;\r\n}\r\n\r\ninterface RequestOptions {\r\n  method?: string;\r\n  body?: object | string;\r\n  json?: boolean;\r\n}\r\n\r\ninterface RequestHeaders {\r\n  \"Content-Type\"?: string;\r\n}\r\n\r\ninterface Paging<T> {\r\n  content: T[];\r\n  last: boolean;\r\n  totalPages: number;\r\n  totalElements: number;\r\n  size: number;\r\n  number: number;\r\n  sort: any;\r\n  first: boolean;\r\n  numberOfElements: number;\r\n}\r\n","export function getSpreadsheet(spreadsheetId: string): Spreadsheet {\r\n  const sheets = gapi.client.sheets;\r\n\r\n  async function readAsync(range: string) {\r\n    const response = await sheets.spreadsheets.values.get({\r\n      spreadsheetId,\r\n      range,\r\n    });\r\n    return response.result;\r\n  }\r\n\r\n  return {\r\n    readAsync,\r\n  };\r\n}\r\n\r\nexport async function getSpreadsheetProperties(\r\n  spreadsheetId: string\r\n): Promise<SpreadsheetProperties[]> {\r\n  const sheets = gapi.client.sheets;\r\n\r\n  const res = await sheets.spreadsheets.get({ spreadsheetId });\r\n  const sheetProps = JSON.parse(res.body).sheets as [\r\n    { properties: SpreadsheetProperties }\r\n  ];\r\n  return sheetProps.map((s) => s.properties);\r\n}\r\n\r\nexport interface Spreadsheet {\r\n  readAsync: (range: string) => Promise<ValueRange>;\r\n}\r\n\r\nexport interface ValueRange {\r\n  majorDimension?: string | null;\r\n  range?: string | null;\r\n  values?: any[][] | null;\r\n}\r\n\r\nexport interface SpreadsheetProperties {\r\n  sheetId: number;\r\n  title: string;\r\n}\r\n","export function fixSpaces(str: string) {\r\n  return str && str.replace(/[\\s]/g, \" \");\r\n}\r\n\r\nexport function normalizeString(str: string) {\r\n  return (\r\n    str &&\r\n    str\r\n      .toLowerCase()\r\n      .replace(\"ё\", \"е\")\r\n      .replace(/[^A-Za-zА-ЯЁа-яё0-9]/g, \"\")\r\n  );\r\n}\r\n\r\nexport function compareNormalized(s1: string, s2: string) {\r\n  return normalizeString(s1) === normalizeString(s2);\r\n}\r\n\r\nexport function parseAnyFloat(s: string) {\r\n  return parseFloat(s && s.replace(\",\", \".\"));\r\n}\r\n\r\nexport function groupBy<TItem>(items: TItem[], key: keyof TItem) {\r\n  const reducer: { [group: string]: TItem[] } = {};\r\n  return items.reduce((reducer, item) => {\r\n    const itemKey = `${item[key]}`;\r\n    (reducer[itemKey] = reducer[itemKey] || []).push(item);\r\n    return reducer;\r\n  }, reducer);\r\n}\r\n\r\nexport function getKeys<T>(obj: T): (keyof T)[] {\r\n  const keys = Object.keys(obj) as (keyof T)[];\r\n  return keys;\r\n}\r\n\r\nexport function filterNull<T>(items: (T | null)[]): T[] {\r\n  const result: T[] = [];\r\n  for (const item of items) {\r\n    if (item !== null) {\r\n      result.push(item);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function pluralize(\r\n  count: number,\r\n  version1: string,\r\n  version2: string,\r\n  version5: string\r\n) {\r\n  if (\r\n    count % 10 === 0 ||\r\n    count % 10 >= 5 ||\r\n    (count % 100 > 10 && count % 100 < 20)\r\n  )\r\n    return version5;\r\n  return count % 10 === 1 ? version1 : version2;\r\n}\r\n","import { StudentFailure } from \"../apis/BrsApi\";\r\nimport { compareNormalized } from \"./tools\";\r\n\r\nconst failureMapping: { [key: string]: StudentFailure } = {\r\n  \"-\": StudentFailure.NoFailure,\r\n  \"Не выбрана\": StudentFailure.NotChosen,\r\n  \"Не допущен (деканат)\": StudentFailure.NotAllowedByDeansOffice,\r\n  \"Не явился\": StudentFailure.NotAppeared,\r\n  Неуважительная: StudentFailure.DisrespectfulReason,\r\n  Уважительная: StudentFailure.RespectfulReason,\r\n  \"Не допущен\": StudentFailure.NotAllowedByTeacher,\r\n  \"Не должен сдавать\": StudentFailure.ShouldNotPass,\r\n  \"Академический отпуск\": StudentFailure.AcademicLeave,\r\n  Выбыл: StudentFailure.DroppedOut,\r\n};\r\n\r\nexport function parseStudentFailure(input: string): StudentFailure | null {\r\n  if (input === null || input === undefined) {\r\n    return null;\r\n  }\r\n\r\n  for (let key of Object.keys(failureMapping)) {\r\n    if (compareNormalized(key, input)) {\r\n      return failureMapping[key];\r\n    }\r\n  }\r\n\r\n  return StudentFailure.NoFailure;\r\n}\r\n\r\nexport function formatStudentFailure(\r\n  input: StudentFailure | null | undefined\r\n): string | null {\r\n  if (input === null || input === undefined) {\r\n    return null;\r\n  }\r\n\r\n  for (let key of Object.keys(failureMapping)) {\r\n    if (failureMapping[key] === input) {\r\n      return key;\r\n    }\r\n  }\r\n\r\n  return \"-\";\r\n}\r\n","import { StudentFailure, TermType } from \"../apis/BrsApi\";\r\nimport { ControlActionConfig } from \"./MarksManager\";\r\nimport * as googleApi from \"../apis/GoogleApi\";\r\nimport {\r\n  compareNormalized,\r\n  getKeys,\r\n  filterNull,\r\n  normalizeString,\r\n} from \"../helpers/tools\";\r\nimport { parseStudentFailure } from \"../helpers/brsHelpers\";\r\n\r\nexport interface ActualStudent {\r\n  fullName: string;\r\n  groupName: string;\r\n  id: string | null;\r\n  failure: StudentFailure | null;\r\n  properties: string[];\r\n}\r\n\r\nexport interface SpreadsheetData {\r\n  actualStudents: ActualStudent[];\r\n  disciplineConfig: DisciplineConfig;\r\n  controlActionConfigs: ControlActionConfig[];\r\n}\r\n\r\nexport interface DisciplineConfig {\r\n  name: string;\r\n  year: number;\r\n  termType: number;\r\n  course: number;\r\n  isModule: boolean;\r\n  defaultStudentFailure: StudentFailure;\r\n}\r\n\r\ntype DisciplineConfigErrors = {\r\n  [key in keyof DisciplineConfig]: string | null;\r\n};\r\n\r\nexport default class SpreadsheetManager {\r\n  private readonly spreadsheetId: string;\r\n\r\n  constructor(spreadsheetId: string) {\r\n    this.spreadsheetId = spreadsheetId;\r\n  }\r\n\r\n  async getSpreadsheetDataAsync(sheetName: string): Promise<SpreadsheetData> {\r\n    const rows = await readRowsFromSpreadsheetAsync(\r\n      this.spreadsheetId,\r\n      sheetName\r\n    );\r\n    const header = getHeader(rows);\r\n\r\n    const indices = buildIndicesBy(header);\r\n    const dataRange = buildDataRange(sheetName, indices);\r\n    const controlActionConfigs = buildControlActionConfig(header, indices);\r\n    const disciplineConfig = buildDisciplineConfig(rows, indices);\r\n\r\n    const actualStudents = await readStudentsAsync(\r\n      this.spreadsheetId,\r\n      dataRange,\r\n      indices.fullNameColumn - indices.left,\r\n      indices.groupColumn - indices.left,\r\n      null,\r\n      indices.failureColumn - indices.left\r\n    );\r\n\r\n    return {\r\n      actualStudents,\r\n      disciplineConfig,\r\n      controlActionConfigs,\r\n    };\r\n  }\r\n}\r\n\r\nasync function readStudentsAsync(\r\n  spreadsheetId: string,\r\n  readRange: string,\r\n  fullNameIndex: number = 0,\r\n  groupNameIndex: number = 1,\r\n  idIndex: number | null = null,\r\n  failureIndex: number | null = null\r\n) {\r\n  const sheet = googleApi.getSpreadsheet(spreadsheetId);\r\n\r\n  const rows = (await sheet.readAsync(readRange)).values || [];\r\n\r\n  const result: ActualStudent[] = [];\r\n  for (const row of rows) {\r\n    const fullName = row[fullNameIndex];\r\n    const groupName = row[groupNameIndex];\r\n    const id = idIndex !== null ? row[idIndex] : null;\r\n    const failure =\r\n      failureIndex !== null ? parseStudentFailure(row[failureIndex]) : null;\r\n    if (fullName && groupName) {\r\n      result.push({\r\n        fullName,\r\n        groupName,\r\n        id: id,\r\n        failure: failure,\r\n        properties: row,\r\n      });\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nasync function readRowsFromSpreadsheetAsync(\r\n  spreadsheetId: string,\r\n  sheetName: string\r\n) {\r\n  const sheet = googleApi.getSpreadsheet(spreadsheetId);\r\n  const rows = (await sheet.readAsync(sheetName + \"!A1:ZZ100\"))\r\n    .values as string[][];\r\n  return rows || null;\r\n}\r\n\r\nfunction getHeader(rows: string[][]) {\r\n  const header = rows && rows[0];\r\n  if (!header) throw new Error(`Лист Google-таблицы не содержит строк`);\r\n  return header;\r\n}\r\n\r\nfunction buildIndicesBy(header: string[]): Indices {\r\n  const defaultGroupColumnName = \"Группа в БРС\";\r\n  const defaultFullNameColumnName = \"Фамилия Имя в БРС\";\r\n  const defaultFailureColumnName = \"Причина отсутствия\";\r\n  const disciplineParameterKeyColumnPrefix = \"Названия параметров\";\r\n  const disciplineParameterValueColumnPrefix = \"Значения параметров\";\r\n\r\n  const normalizedHeader = header && header.map((s) => normalizeString(s));\r\n  const groupColumnIndex = normalizedHeader.indexOf(\r\n    normalizeString(defaultGroupColumnName)\r\n  );\r\n  const fullNameColumnIndex = normalizedHeader.indexOf(\r\n    normalizeString(defaultFullNameColumnName)\r\n  );\r\n  const failureColumnIndex = normalizedHeader.indexOf(\r\n    normalizeString(defaultFailureColumnName)\r\n  );\r\n  const disciplineParameterKeyColumnIndex = normalizedHeader.indexOf(\r\n    normalizeString(disciplineParameterKeyColumnPrefix)\r\n  );\r\n  const disciplineParameterValueColumnIndex = normalizedHeader.indexOf(\r\n    normalizeString(disciplineParameterValueColumnPrefix)\r\n  );\r\n\r\n  if (\r\n    failureColumnIndex < 0 ||\r\n    groupColumnIndex < 0 ||\r\n    fullNameColumnIndex < 0 ||\r\n    groupColumnIndex > failureColumnIndex ||\r\n    fullNameColumnIndex > failureColumnIndex ||\r\n    Math.abs(fullNameColumnIndex - groupColumnIndex) !== 1 ||\r\n    disciplineParameterKeyColumnIndex < 0 ||\r\n    disciplineParameterValueColumnIndex < 0 ||\r\n    disciplineParameterKeyColumnIndex <= failureColumnIndex ||\r\n    disciplineParameterValueColumnIndex <= failureColumnIndex ||\r\n    disciplineParameterValueColumnIndex !==\r\n      disciplineParameterKeyColumnIndex + 1\r\n  )\r\n    throw new Error(`Неправильный порядок столбцов`);\r\n  const leftIndex = Math.min(groupColumnIndex, fullNameColumnIndex);\r\n  const rightIndex = failureColumnIndex;\r\n\r\n  return {\r\n    groupColumn: groupColumnIndex,\r\n    fullNameColumn: fullNameColumnIndex,\r\n    failureColumn: failureColumnIndex,\r\n    disciplineKeyColumn: disciplineParameterKeyColumnIndex,\r\n    disciplineValueColumn: disciplineParameterValueColumnIndex,\r\n    left: leftIndex,\r\n    right: rightIndex,\r\n  };\r\n}\r\n\r\nfunction buildDataRange(sheetName: string, indices: Indices) {\r\n  const leftLetter = String.fromCharCode(\"A\".charCodeAt(0) + indices.left);\r\n  const rightLetter = String.fromCharCode(\"A\".charCodeAt(0) + indices.right);\r\n  return `${sheetName}!${leftLetter}2:${rightLetter}`;\r\n}\r\n\r\nfunction buildControlActionConfig(header: string[], indices: Indices) {\r\n  const controlActionConfigs: ControlActionConfig[] = [];\r\n  for (let index = indices.left; index <= indices.right; index++) {\r\n    if (\r\n      index === indices.groupColumn ||\r\n      index === indices.fullNameColumn ||\r\n      index === indices.failureColumn ||\r\n      !header[index]\r\n    ) {\r\n      continue;\r\n    }\r\n    controlActionConfigs.push({\r\n      controlAction: header[index],\r\n      propertyIndex: index - indices.left,\r\n    });\r\n  }\r\n\r\n  for (const config of controlActionConfigs) {\r\n    const sameColumns = controlActionConfigs.filter((c) =>\r\n      compareNormalized(c.controlAction, config.controlAction)\r\n    );\r\n    if (sameColumns.length > 1) {\r\n      config.matchCount = sameColumns.length;\r\n      for (let matchIndex = 0; matchIndex < sameColumns.length; matchIndex++) {\r\n        sameColumns[matchIndex].matchIndex = matchIndex;\r\n      }\r\n    }\r\n  }\r\n\r\n  return controlActionConfigs;\r\n}\r\n\r\nfunction buildDisciplineConfig(rows: string[][], indices: Indices) {\r\n  const result: DisciplineConfig = {\r\n    name: \"\",\r\n    year: 0,\r\n    termType: TermType.Fall,\r\n    course: 1,\r\n    isModule: false,\r\n    defaultStudentFailure: StudentFailure.NoFailure,\r\n  };\r\n  const errors: DisciplineConfigErrors = {\r\n    name: \"Дисциплина\",\r\n    year: \"Учебный год\",\r\n    termType: \"Семестр\",\r\n    course: \"Курс\",\r\n    isModule: \"ИТС\",\r\n    defaultStudentFailure: \"Причина отсутствия по умолчанию\",\r\n  };\r\n\r\n  for (let i = 0; i < rows.length; i++) {\r\n    const key = rows[i][indices.disciplineKeyColumn]?.trim();\r\n    if (!key) {\r\n      break;\r\n    }\r\n    const value = rows[i][indices.disciplineValueColumn]?.trim();\r\n    addDisciplineConfigParameter(result, errors, key, value);\r\n  }\r\n\r\n  const errorNames = filterNull(getKeys(errors).map((k) => errors[k]));\r\n  if (errorNames.length > 0) {\r\n    const errorNamesString = errorNames.map((n) => `«${n}»`).join(\", \");\r\n    throw new Error(\r\n      `Следующие параметры дисциплины не заданы: ${errorNamesString}`\r\n    );\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction addDisciplineConfigParameter(\r\n  config: DisciplineConfig,\r\n  errors: DisciplineConfigErrors,\r\n  key: string,\r\n  value: string\r\n) {\r\n  if (compareNormalized(key, \"Дисциплина\")) {\r\n    if (value) {\r\n      config.name = value;\r\n      errors.name = null;\r\n    }\r\n  } else if (compareNormalized(key, \"ИТС\")) {\r\n    if (value) {\r\n      config.isModule = value.toLowerCase() === \"да\";\r\n      errors.isModule = null;\r\n    }\r\n  } else if (compareNormalized(key, \"Год\")) {\r\n    if (value) {\r\n      config.year = parseInt(value.toLowerCase(), 10);\r\n      errors.year = null;\r\n    }\r\n  } else if (compareNormalized(key, \"Учебный год\")) {\r\n    if (value) {\r\n      const yearParts = value.toLowerCase().split(\"/\");\r\n      config.year = parseInt(yearParts[0], 10);\r\n      errors.year = null;\r\n    }\r\n  } else if (compareNormalized(key, \"Семестр\")) {\r\n    if (value) {\r\n      if (value.toLowerCase() === \"осенний\") {\r\n        config.termType = TermType.Fall;\r\n        errors.termType = null;\r\n      } else if (value.toLowerCase() === \"весенний\") {\r\n        config.termType = TermType.Spring;\r\n        errors.termType = null;\r\n      }\r\n    }\r\n  } else if (compareNormalized(key, \"Курс\")) {\r\n    if (value) {\r\n      const lowerValue = value.toLowerCase().trim();\r\n      if (lowerValue === \"все курсы\") {\r\n        config.course = 0;\r\n        errors.course = null;\r\n      } else {\r\n        config.course = parseInt(value.toLowerCase(), 10);\r\n        errors.course = null;\r\n      }\r\n    }\r\n  } else if (compareNormalized(key, \"Причина отсутствия по умолчанию\")) {\r\n    config.defaultStudentFailure =\r\n      parseStudentFailure(value) ?? StudentFailure.NoFailure;\r\n    errors.defaultStudentFailure = null;\r\n  }\r\n}\r\n\r\ninterface Indices {\r\n  groupColumn: number;\r\n  fullNameColumn: number;\r\n  failureColumn: number;\r\n  disciplineKeyColumn: number;\r\n  disciplineValueColumn: number;\r\n  left: number;\r\n  right: number;\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport {\r\n  Collapse,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from \"@material-ui/core\";\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\r\n\r\nexport default function NestedList(props: NestedListProps) {\r\n  const { title, items, icons } = props;\r\n\r\n  const listSubheader = (\r\n    <ListSubheader component=\"div\" id=\"nested-list-subheader\" hidden={!title}>\r\n      {title}\r\n    </ListSubheader>\r\n  );\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n      subheader={listSubheader}\r\n      className=\"nested-list primary\"\r\n    >\r\n      {items.length ? renderNestedItems(items, 0, icons) : renderEmpty()}\r\n    </List>\r\n  );\r\n}\r\n\r\nfunction renderNestedItems(\r\n  items: NestedItem[],\r\n  level: number,\r\n  icons?: (JSX.Element | null)[]\r\n) {\r\n  return items.map((item, index) => (\r\n    <NestedListItem key={index} item={item} icons={icons} level={level} />\r\n  ));\r\n}\r\n\r\nfunction renderEmpty() {\r\n  return (\r\n    <ListItem className=\"text-align-center\">\r\n      <ListItemText primary=\"...\" />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nfunction NestedListItem({ item, level, icons }: NestedListItemProps) {\r\n  const { title, nestedItems, colored, collapsed } = item;\r\n\r\n  const [open, setOpen] = React.useState(!collapsed);\r\n\r\n  const hasSubItems = nestedItems && nestedItems.length > 0;\r\n\r\n  const color = colored && \"colored-back\";\r\n\r\n  const icon = icons && icons[level];\r\n  const IconPlace = icon && <ListItemIcon>{icon}</ListItemIcon>;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ListItem\r\n        button\r\n        onClick={() => setOpen(!open)}\r\n        style={level ? { paddingLeft: 40 * level } : undefined}\r\n        className={\"hover \" + color}\r\n      >\r\n        {IconPlace}\r\n        <ListItemText primary={title} />\r\n        {hasSubItems && (open ? <ExpandLess /> : <ExpandMore />)}\r\n      </ListItem>\r\n      {hasSubItems && (\r\n        <Collapse in={open} unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            {nestedItems && renderNestedItems(nestedItems, level + 1, icons)}\r\n          </List>\r\n        </Collapse>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport interface NestedItem {\r\n  title: string;\r\n  colored?: boolean;\r\n  collapsed?: boolean;\r\n  nestedItems?: NestedItem[];\r\n}\r\n\r\ninterface NestedListProps {\r\n  items: NestedItem[];\r\n  title?: string;\r\n  icons?: (JSX.Element | null)[];\r\n}\r\n\r\ninterface NestedListItemProps {\r\n  item: NestedItem;\r\n  level: number;\r\n  icons?: (JSX.Element | null)[];\r\n}\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function RunWorkerButtons({\r\n  enabled,\r\n  onRunWorkSafe,\r\n  onRunWorkUnsafe,\r\n}: Props) {\r\n  return (\r\n    <Grid container justify=\"space-around\">\r\n      <Grid item>\r\n        <Button\r\n          variant=\"contained\"\r\n          disabled={!enabled}\r\n          onClick={onRunWorkSafe}\r\n          color=\"primary\"\r\n        >\r\n          Попробовать сделать хорошо\r\n        </Button>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          variant=\"contained\"\r\n          disabled={!enabled}\r\n          onClick={onRunWorkUnsafe}\r\n          color=\"secondary\"\r\n        >\r\n          Сделать хорошо\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  enabled: boolean;\r\n  onRunWorkSafe: () => void;\r\n  onRunWorkUnsafe: () => void;\r\n}\r\n","import BrsApi, {\r\n  ControlAction,\r\n  Discipline,\r\n  StudentFailure,\r\n  StudentMark,\r\n} from \"../apis/BrsApi\";\r\nimport {\r\n  compareNormalized,\r\n  groupBy,\r\n  parseAnyFloat,\r\n  pluralize,\r\n} from \"../helpers/tools\";\r\nimport * as fio from \"../helpers/fio\";\r\nimport { ActualStudent, SpreadsheetData } from \"./SpreadsheetManager\";\r\nimport { formatStudentFailure } from \"../helpers/brsHelpers\";\r\nimport ReportManager from \"./ReportManager\";\r\n\r\nenum MarkUpdateStatus {\r\n  Updated,\r\n  Failed,\r\n  Skipped,\r\n}\r\n\r\nexport default class MarksManager {\r\n  private readonly brsApi: BrsApi;\r\n  private readonly save: boolean;\r\n  private cancelPending: boolean = false;\r\n\r\n  readonly reportManager: ReportManager;\r\n\r\n  constructor(brsApi: BrsApi, reportManager: ReportManager, save: boolean) {\r\n    this.brsApi = brsApi;\r\n    this.reportManager = reportManager;\r\n    this.save = save;\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelPending = true;\r\n  }\r\n\r\n  async putMarksToBrsAsync(\r\n    spreadsheetData: SpreadsheetData,\r\n    disciplines: Discipline[]\r\n  ) {\r\n    const { actualStudents, disciplineConfig, controlActionConfigs } =\r\n      spreadsheetData;\r\n    try {\r\n      for (const discipline of disciplines) {\r\n        const students = actualStudents.filter((s) =>\r\n          compareNormalized(s.groupName, discipline.group)\r\n        );\r\n        if (students.length === 0) {\r\n          continue;\r\n        }\r\n\r\n        this.reportManager.newReport(discipline.group);\r\n\r\n        var isSuccessful = await this.putMarksForDisciplineAsync(\r\n          discipline,\r\n          students,\r\n          disciplineConfig.defaultStudentFailure,\r\n          controlActionConfigs\r\n        );\r\n\r\n        if (isSuccessful) {\r\n          this.reportManager.finishReport();\r\n        } else {\r\n          this.reportManager.cancelReport();\r\n          break;\r\n        }\r\n\r\n        if (this.cancelPending) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      return null;\r\n    } catch (e) {\r\n      return e;\r\n    }\r\n  }\r\n\r\n  async putMarksForDisciplineAsync(\r\n    discipline: Discipline,\r\n    actualStudents: ActualStudent[],\r\n    defaultStudentFailure: StudentFailure,\r\n    controlActionConfigs: ControlActionConfig[]\r\n  ) {\r\n    const disciplineMeta = await this.brsApi.getDisciplineMetaAsync(discipline);\r\n\r\n    const controlActions = [\r\n      ...(disciplineMeta.lecture?.currentControlActions || []),\r\n      ...(disciplineMeta.lecture?.intermediateControlActions || []),\r\n      ...(disciplineMeta.laboratory?.currentControlActions || []),\r\n      ...(disciplineMeta.laboratory?.intermediateControlActions || []),\r\n      ...(disciplineMeta.practice?.currentControlActions || []),\r\n      ...(disciplineMeta.practice?.intermediateControlActions || []),\r\n      ...(disciplineMeta.additionalPractice?.currentControlActions || []),\r\n      ...(disciplineMeta.additionalPractice?.intermediateControlActions || []),\r\n    ];\r\n\r\n    if (\r\n      !this.checkControlActionsConfiguration(\r\n        controlActions,\r\n        controlActionConfigs\r\n      )\r\n    )\r\n      return false;\r\n\r\n    const brsStudents = await this.brsApi.getAllStudentMarksAsync(discipline);\r\n    const { mergedStudents, skippedActualStudents, skippedBrsStudents } =\r\n      this.mergeStudents(actualStudents, brsStudents);\r\n\r\n    this.logMergedStudents(\r\n      mergedStudents,\r\n      skippedActualStudents,\r\n      skippedBrsStudents\r\n    );\r\n\r\n    await this.putMarksForStudentsAsync(\r\n      discipline,\r\n      mergedStudents,\r\n      controlActionConfigs,\r\n      controlActions\r\n    );\r\n\r\n    await this.updateFailuresForSkippedStudentsAsync(\r\n      skippedBrsStudents,\r\n      discipline,\r\n      defaultStudentFailure\r\n    );\r\n\r\n    if (this.save) {\r\n      await this.brsApi.updateAllMarksAsync(discipline);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  checkControlActionsConfiguration(\r\n    controlActions: ControlAction[],\r\n    controlActionConfigs: ControlActionConfig[]\r\n  ) {\r\n    for (const config of controlActionConfigs) {\r\n      if (!this.getSuitableControlAction(config, controlActions)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async putMarksForStudentsAsync(\r\n    discipline: Discipline,\r\n    students: MergedStudent[],\r\n    controlActionConfigs: ControlActionConfig[],\r\n    controlActions: ControlAction[]\r\n  ) {\r\n    const ratingResults = await Promise.all(\r\n      students.map(async (student) => {\r\n        return await this.putMarksForStudentAsync(\r\n          discipline,\r\n          student,\r\n          controlActionConfigs,\r\n          controlActions\r\n        );\r\n      })\r\n    );\r\n\r\n    const groupedResults = Object.entries(groupBy(ratingResults, \"status\")).map(\r\n      ([groupKey, rawStudents]) => ({\r\n        title: formatMarkUpdateStatus(rawStudents[0][\"status\"]),\r\n        students: rawStudents.map((s) => s.infoString),\r\n      })\r\n    );\r\n\r\n    this.reportManager.currentReport.marks.push(...groupedResults);\r\n  }\r\n\r\n  async putMarksForStudentAsync(\r\n    discipline: Discipline,\r\n    student: MergedStudent,\r\n    controlActionConfigs: ControlActionConfig[],\r\n    controlActions: ControlAction[]\r\n  ) {\r\n    let updated = 0;\r\n    let failed = 0;\r\n\r\n    const marks = [];\r\n    for (const config of controlActionConfigs) {\r\n      const controlAction = this.getSuitableControlAction(\r\n        config,\r\n        controlActions\r\n      );\r\n      if (!controlAction) {\r\n        throw new Error(\r\n          `Подходящее контрольное мероприятие для «${config.controlAction}» не найдено в БРС`\r\n        );\r\n      }\r\n\r\n      const brsMarkString = student.brs[controlAction.uuid] as string;\r\n      const brsMark = parseAnyFloat(brsMarkString);\r\n      const actualMarkString = student.actual.properties[config.propertyIndex];\r\n      const actualMark = parseAnyFloat(actualMarkString);\r\n\r\n      const needUpdateMark =\r\n        !isNaN(actualMark) &&\r\n        !(isNaN(brsMark) ? actualMark === 0 : brsMark === actualMark);\r\n      const actualMarkOutput = !isNaN(actualMark) ? actualMark.toString() : \"-\";\r\n\r\n      if (needUpdateMark) {\r\n        marks.push(\r\n          `    ${actualMarkOutput}!`.substr(`${actualMarkOutput}`.length - 1)\r\n        );\r\n      } else {\r\n        marks.push(\r\n          `    ${actualMarkOutput} `.substr(`${actualMarkOutput}`.length - 1)\r\n        );\r\n        continue;\r\n      }\r\n\r\n      try {\r\n        if (this.save) {\r\n          await this.brsApi.putStudentMarkAsync(\r\n            student.brs.studentUuid,\r\n            controlAction.uuidWithoutPrefix,\r\n            actualMark,\r\n            discipline.groupHistoryId,\r\n            student.brs.cardType,\r\n            student.brs.disciplineLoad\r\n          );\r\n        }\r\n        updated++;\r\n      } catch (error) {\r\n        failed++;\r\n      }\r\n    }\r\n\r\n    const brsFailureStatus =\r\n      (student.brs.failure as StudentFailure) ?? StudentFailure.NoFailure;\r\n    const actualFailure = student.actual.failure ?? StudentFailure.NoFailure;\r\n    let failureStatus: string;\r\n    if (actualFailure === brsFailureStatus) {\r\n      failureStatus = `${formatStudentFailure(actualFailure)}`;\r\n    } else {\r\n      failureStatus = `${formatStudentFailure(actualFailure)}!`;\r\n      try {\r\n        if (this.save) {\r\n          await this.brsApi.putStudentFailureAsync(\r\n            student.brs.studentUuid,\r\n            discipline,\r\n            actualFailure\r\n          );\r\n        }\r\n        updated++;\r\n      } catch (error) {\r\n        failed++;\r\n      }\r\n    }\r\n\r\n    const status =\r\n      failed > 0\r\n        ? MarkUpdateStatus.Failed\r\n        : updated > 0\r\n        ? MarkUpdateStatus.Updated\r\n        : MarkUpdateStatus.Skipped;\r\n    const studentName = student.actual.fullName.substr(0, 30);\r\n    let infoString = `${studentName}, баллы: ${marks.join(\" \")}`;\r\n    if (failureStatus && failureStatus !== \"-\")\r\n      infoString += `, ${failureStatus}`;\r\n    return { status, infoString };\r\n  }\r\n\r\n  getSuitableControlAction(\r\n    config: ControlActionConfig,\r\n    controlActions: ControlAction[]\r\n  ) {\r\n    const suitableControlActions = controlActions.filter((a) =>\r\n      compareNormalized(a.controlAction, config.controlAction)\r\n    );\r\n\r\n    const errorMessages = [];\r\n\r\n    if (suitableControlActions.length === 0) {\r\n      errorMessages.push(\r\n        `Контрольное мероприятие «${config.controlAction}» не сопоставлено с БРС`\r\n      );\r\n      errorMessages.push(\r\n        `Найденные в БРС контрольные мероприятия: ${controlActions\r\n          .map((a) => a.controlAction)\r\n          .join(\", \")}`\r\n      );\r\n\r\n      this.reportManager.onInvalidConfiguration(errorMessages);\r\n\r\n      return null;\r\n    }\r\n\r\n    if (config.matchIndex !== undefined || config.matchCount !== undefined) {\r\n      if (\r\n        config.matchIndex === undefined ||\r\n        config.matchCount === undefined ||\r\n        suitableControlActions.length !== config.matchCount ||\r\n        config.matchIndex >= config.matchCount\r\n      ) {\r\n        errorMessages.push(\r\n          `Неверная конфигурация контрольного мероприятия «${config.controlAction}»`\r\n        );\r\n        if (suitableControlActions.length !== config.matchCount) {\r\n          errorMessages.push(\r\n            `В БРС найдено ${suitableControlActions.length} ${pluralize(\r\n              suitableControlActions.length,\r\n              \"подходящее контрольное мероприятие\",\r\n              \"подходящих контрольных мероприятия\",\r\n              \"подходящих контрольных мероприятий\"\r\n            )}, а в таблице указано ${config.matchCount}`\r\n          );\r\n        }\r\n\r\n        this.reportManager.onInvalidConfiguration(errorMessages);\r\n\r\n        return null;\r\n      }\r\n      return suitableControlActions[config.matchIndex];\r\n    }\r\n\r\n    if (suitableControlActions.length > 1) {\r\n      errorMessages.push(\r\n        `Несколько контрольных мероприятий найдено для «${config.controlAction}»`\r\n      );\r\n      errorMessages.push(\r\n        `Найденные контрольные мероприятия: ${suitableControlActions\r\n          .map((a) => a.controlAction)\r\n          .join(\", \")}`\r\n      );\r\n\r\n      this.reportManager.onInvalidConfiguration(errorMessages);\r\n\r\n      return null;\r\n    }\r\n\r\n    return suitableControlActions[0];\r\n  }\r\n\r\n  async updateFailuresForSkippedStudentsAsync(\r\n    students: StudentMark[],\r\n    discipline: Discipline,\r\n    defaultStudentFailure: StudentFailure\r\n  ) {\r\n    const ratingResults = await Promise.all(\r\n      students.map((student) =>\r\n        this.updateFailureForStudent(student, discipline, defaultStudentFailure)\r\n      )\r\n    );\r\n\r\n    if (ratingResults.length > 0) {\r\n      const groupedResults = Object.entries(\r\n        groupBy(ratingResults, \"status\")\r\n      ).map(([groupKey, rawStudents]) => ({\r\n        title: formatMarkUpdateStatus(rawStudents[0][\"status\"]),\r\n        students: rawStudents.map((s) => s.infoString),\r\n      }));\r\n\r\n      this.reportManager.currentReport.skipped.push(...groupedResults);\r\n    }\r\n  }\r\n\r\n  async updateFailureForStudent(\r\n    student: StudentMark,\r\n    discipline: Discipline,\r\n    defaultStudentFailure: StudentFailure\r\n  ) {\r\n    let status: MarkUpdateStatus;\r\n    const brsFailureStatus = student.failure\r\n      ? (student.failure as StudentFailure)\r\n      : StudentFailure.NoFailure;\r\n    const actualFailure = defaultStudentFailure;\r\n    if (actualFailure === brsFailureStatus) {\r\n      status = MarkUpdateStatus.Skipped;\r\n    } else {\r\n      try {\r\n        if (this.save) {\r\n          await this.brsApi.putStudentFailureAsync(\r\n            student.studentUuid,\r\n            discipline,\r\n            actualFailure\r\n          );\r\n        }\r\n        status = MarkUpdateStatus.Updated;\r\n      } catch (error) {\r\n        status = MarkUpdateStatus.Failed;\r\n      }\r\n    }\r\n\r\n    const studentName = student.studentFio.substr(0, 30);\r\n    const description =\r\n      status !== MarkUpdateStatus.Skipped\r\n        ? `выставлено «${formatStudentFailure(\r\n            actualFailure\r\n          )}», было «${formatStudentFailure(brsFailureStatus)}»`\r\n        : `«${formatStudentFailure(actualFailure)}»`;\r\n\r\n    const infoString = `${studentName}, ${description}`;\r\n\r\n    return { status, infoString };\r\n  }\r\n\r\n  mergeStudents(actualStudents: ActualStudent[], brsStudents: StudentMark[]) {\r\n    const activeBrsStudents = brsStudents.filter(isStudentActive);\r\n\r\n    const mergedStudents: MergedStudent[] = [];\r\n    const skippedActualStudents: ActualStudent[] = [];\r\n    for (const actualStudent of actualStudents) {\r\n      const suitableStudents = activeBrsStudents.filter((brsStudent) =>\r\n        areStudentsLike(brsStudent, actualStudent)\r\n      );\r\n      if (suitableStudents.length === 1) {\r\n        mergedStudents.push({\r\n          actual: actualStudent,\r\n          brs: suitableStudents[0],\r\n        });\r\n      } else {\r\n        skippedActualStudents.push(actualStudent);\r\n      }\r\n    }\r\n\r\n    const skippedBrsStudents: StudentMark[] = [];\r\n    for (const brsStudent of activeBrsStudents) {\r\n      if (\r\n        !mergedStudents.some(\r\n          (ms) => ms.brs.studentUuid === brsStudent.studentUuid\r\n        )\r\n      ) {\r\n        skippedBrsStudents.push(brsStudent);\r\n      }\r\n    }\r\n\r\n    return { mergedStudents, skippedActualStudents, skippedBrsStudents };\r\n  }\r\n\r\n  logMergedStudents(\r\n    mergedStudents: MergedStudent[],\r\n    skippedActualStudents: ActualStudent[],\r\n    skippedBrsStudents: StudentMark[]\r\n  ) {\r\n    const report = this.reportManager.currentReport;\r\n\r\n    report.merge.succeed = mergedStudents.length;\r\n\r\n    if (skippedActualStudents.length > 0)\r\n      report.merge.failedActual = skippedActualStudents.map(\r\n        (s) => \"- \" + s.fullName\r\n      );\r\n\r\n    if (skippedBrsStudents.length > 0) {\r\n      report.merge.failedBrs = skippedBrsStudents.map(\r\n        (s) => \"- \" + s.studentFio\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction isStudentActive(brsStudent: StudentMark) {\r\n  return (\r\n    brsStudent.studentStatus !== \"Переведен\" &&\r\n    brsStudent.studentStatus !== \"Отчислен\"\r\n  );\r\n}\r\n\r\nfunction areStudentsLike(\r\n  brsStudent: StudentMark,\r\n  actualStudent: ActualStudent\r\n) {\r\n  const brsFullName = fio.toKey(brsStudent.studentFio);\r\n  const actualFullName = fio.toKey(actualStudent.fullName);\r\n  return brsFullName.startsWith(actualFullName);\r\n}\r\n\r\nfunction formatMarkUpdateStatus(status: MarkUpdateStatus) {\r\n  switch (status) {\r\n    case MarkUpdateStatus.Updated:\r\n      return \"ОБНОВЛЕНО\";\r\n    case MarkUpdateStatus.Skipped:\r\n      return \"ПРОПУЩЕНО\";\r\n    case MarkUpdateStatus.Failed:\r\n      return \"ПРОВАЛЕНО\";\r\n    default:\r\n      throw new Error(\"Неизвестный статус обновления оценок\");\r\n  }\r\n}\r\n\r\nexport interface ControlActionConfig {\r\n  controlAction: string;\r\n  matchIndex?: number;\r\n  matchCount?: number;\r\n  propertyIndex: number;\r\n}\r\n\r\ninterface MergedStudent {\r\n  actual: ActualStudent;\r\n  brs: StudentMark;\r\n}\r\n","export function toShow(fio: string) {\r\n  return fio.replace(\"ё\", \"е\").replace(/[ ]+/, \" \");\r\n}\r\n\r\nexport function toKey(fio: string) {\r\n  return fio.toLowerCase().replace(\"ё\", \"е\").replace(/[ ]+/, \" \").trim();\r\n}\r\n","import React, { memo } from \"react\";\r\nimport SpreadsheetManager, {\r\n  DisciplineConfig,\r\n  SpreadsheetData,\r\n} from \"../../../managers/SpreadsheetManager\";\r\nimport NestedList, { NestedItem } from \"../../shared/NestedList\";\r\nimport { Collapse, Container } from \"@material-ui/core\";\r\nimport { compareNormalized } from \"../../../helpers/tools\";\r\nimport { getSpreadsheetProperties } from \"../../../apis/GoogleApi\";\r\nimport BrsApi, { Discipline } from \"../../../apis/BrsApi\";\r\nimport \"./styles.css\";\r\nimport RunWorkerButtons from \"../RunWorkerButtons\";\r\nimport WorkerDialog, { MarksData } from \"../WorkerDialog\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport { ViewModule } from \"@material-ui/icons\";\r\nimport GoogleTableFetchForm from \"./GoogleTableFetchForm\";\r\n\r\nenum LastAction {\r\n  None,\r\n  LoadDisciplines,\r\n  RunWork,\r\n}\r\n\r\nclass GoogleTableFetch extends React.Component<Props, State> {\r\n  marksData: MarksData = {} as any;\r\n  workerSaveMode: boolean = false;\r\n  spreadsheetId: string = \"\";\r\n  sheetId: string | null = null;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tableUrl: \"\",\r\n      loading: false,\r\n      showDisciplines: false,\r\n      lastAction: LastAction.None,\r\n      tableUrlError: { error: false, message: \"\" },\r\n      disciplines: [],\r\n      allDisciplinesMissed: false,\r\n      missedDisciplinesCount: 0,\r\n      showWorkerButtons: false,\r\n      runWorker: false,\r\n    };\r\n  }\r\n\r\n  loadDisciplines = async (spreadsheetId: string, sheetId: string | null) => {\r\n    this.spreadsheetId = spreadsheetId;\r\n    this.sheetId = sheetId;\r\n\r\n    this.setState({ loading: true });\r\n\r\n    const spreadsheetData = await this.getActualSpreadsheetDataAsync(\r\n      spreadsheetId,\r\n      sheetId\r\n    );\r\n    if (!spreadsheetData) {\r\n      this.setState({ loading: false });\r\n      return false;\r\n    }\r\n\r\n    const disciplines = await this.getActualDisciplinesAsync(\r\n      spreadsheetData.disciplineConfig\r\n    );\r\n    if (!disciplines) {\r\n      this.setState({ loading: false });\r\n      return false;\r\n    }\r\n\r\n    const disciplinesInfo = this.disciplinesToListItems(\r\n      disciplines,\r\n      spreadsheetData\r\n    );\r\n\r\n    this.marksData.spreadsheetData = spreadsheetData;\r\n    this.marksData.suitableDisciplines = disciplines;\r\n\r\n    this.setState({\r\n      loading: false,\r\n      disciplines: disciplinesInfo.disciplines,\r\n      showDisciplines: true,\r\n      lastAction: LastAction.LoadDisciplines,\r\n      allDisciplinesMissed: disciplinesInfo.allMissed,\r\n      missedDisciplinesCount: disciplinesInfo.missedCount,\r\n      showWorkerButtons: !disciplinesInfo.allMissed,\r\n    });\r\n\r\n    return !disciplinesInfo.allMissed;\r\n  };\r\n\r\n  disciplinesToListItems(\r\n    availableDisciplines: Discipline[],\r\n    spreadsheetData: SpreadsheetData\r\n  ): { allMissed: boolean; missedCount: number; disciplines: NestedItem[] } {\r\n    const actualGroups = new Set(\r\n      spreadsheetData.actualStudents.map((s) => s.groupName)\r\n    );\r\n    const availableGroups = new Set(availableDisciplines.map((s) => s.group));\r\n\r\n    let missedCount = 0;\r\n    const nestedItems: NestedItem[] = Array.from(actualGroups).map((group) => {\r\n      const groupMissed = !availableGroups.has(group);\r\n      if (groupMissed) missedCount++;\r\n      return { title: group, colored: groupMissed };\r\n    });\r\n\r\n    return {\r\n      allMissed: missedCount === actualGroups.size,\r\n      missedCount,\r\n      disciplines: [\r\n        {\r\n          title: spreadsheetData.disciplineConfig.name,\r\n          nestedItems,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  async getActualDisciplinesAsync(disciplineConfig: DisciplineConfig) {\r\n    try {\r\n      const allDisciplines = await this.props.brsApi.getDisciplineCachedAsync(\r\n        disciplineConfig.year,\r\n        disciplineConfig.termType,\r\n        disciplineConfig.course,\r\n        disciplineConfig.isModule\r\n      );\r\n\r\n      return allDisciplines.filter((d) =>\r\n        compareNormalized(d.discipline, disciplineConfig.name)\r\n      );\r\n    } catch (error) {\r\n      this.props.onError(error);\r\n    }\r\n  }\r\n\r\n  async getActualSpreadsheetDataAsync(\r\n    spreadsheetId: string,\r\n    sheetId: string | null\r\n  ) {\r\n    const sheetName = await this.getSheetName(spreadsheetId, sheetId);\r\n    if (!sheetName) {\r\n      return null;\r\n    }\r\n\r\n    let spreadsheetData: SpreadsheetData;\r\n    try {\r\n      const spreadsheetManager = new SpreadsheetManager(spreadsheetId);\r\n      spreadsheetData = await spreadsheetManager.getSpreadsheetDataAsync(\r\n        sheetName\r\n      );\r\n    } catch (e) {\r\n      this.props.onError(e.message || JSON.stringify(e));\r\n      return null;\r\n    }\r\n\r\n    return spreadsheetData;\r\n  }\r\n\r\n  async getSheetName(\r\n    spreadsheetId: string,\r\n    sheetId: string | null\r\n  ): Promise<string | null> {\r\n    try {\r\n      const spreadsheetProperties = await getSpreadsheetProperties(\r\n        spreadsheetId\r\n      );\r\n      const maybeSheet = sheetId\r\n        ? spreadsheetProperties.filter(\r\n            (s) => s.sheetId.toString() === sheetId\r\n          )[0]\r\n        : spreadsheetProperties[0];\r\n      if (!maybeSheet) {\r\n        this.props.onError(\"Таблица не найдена\");\r\n        return null;\r\n      }\r\n      return maybeSheet.title;\r\n    } catch (e) {\r\n      this.props.onError(e.message || JSON.stringify(e));\r\n      return null;\r\n    }\r\n  }\r\n\r\n  updateCachedDisciplines = (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    event.preventDefault();\r\n    this.setState({ showDisciplines: false });\r\n\r\n    const disciplineConfig = this.marksData.spreadsheetData?.disciplineConfig;\r\n    if (!disciplineConfig) return;\r\n\r\n    this.props.brsApi\r\n      .clearDisciplineCacheAsync(\r\n        disciplineConfig.year,\r\n        disciplineConfig.termType,\r\n        disciplineConfig.course,\r\n        disciplineConfig.isModule\r\n      )\r\n      .then(\r\n        (x) => x,\r\n        (error) => {\r\n          this.props.onError(error);\r\n        }\r\n      );\r\n\r\n    this.loadDisciplines(this.spreadsheetId, this.sheetId);\r\n  };\r\n\r\n  runWork = async (save: boolean) => {\r\n    if (this.state.lastAction !== LastAction.LoadDisciplines) {\r\n      const success = await this.loadDisciplines(this.spreadsheetId, this.sheetId);\r\n      if (!success) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.workerSaveMode = save;\r\n    this.setState({\r\n      lastAction: LastAction.RunWork,\r\n      runWorker: true\r\n    });\r\n  };\r\n\r\n  handleRunWorkSafe = () => this.runWork(false);\r\n\r\n  handleRunWorkUnsafe = () => this.runWork(true);\r\n\r\n  handleWorkerClosed = () => this.setState({ runWorker: false });\r\n\r\n  render() {\r\n    return (\r\n      <span className=\"spreadsheet-fetch\">\r\n        <h3 className=\"vertical-margin-min\">\r\n          Вставьте ссылку на лист Google Таблицы с оценками\r\n        </h3>\r\n        <GoogleTableFetchForm\r\n          loading={this.state.loading}\r\n          onSubmit={this.loadDisciplines}\r\n        />\r\n\r\n        <Collapse\r\n          in={this.state.showDisciplines}\r\n          className=\"vertical-margin-min\"\r\n        >\r\n          <h3>Загруженная дисциплина из Google Таблицы</h3>\r\n          {this.state.missedDisciplinesCount > 0 && (\r\n            <p>\r\n              Группы, к которым у вас нет доступа в БРС,{\" \"}\r\n              <b className=\"colored-text\"> подсвечены</b>\r\n            </p>\r\n          )}\r\n\r\n          <NestedList\r\n            items={this.state.disciplines}\r\n            icons={[<ViewModule />, <GroupIcon />]}\r\n          />\r\n\r\n          {this.state.allDisciplinesMissed ? (\r\n            <React.Fragment>\r\n              <p>У вас нет доступа ни к одной из перечисленных групп в БРС</p>\r\n              <span>Возможные действия:</span>\r\n              <ol className=\"no-margin\">\r\n                <li>\r\n                  Убедитесь, что название дисциплины в БРС и в Google Таблицах\r\n                  совпадает\r\n                </li>\r\n                <li>Запросите доступ на дисциплину в БРС</li>\r\n                <li>Убедитесь, что техкарта согласована в БРС</li>\r\n                <li>\r\n                  <button\r\n                    className=\"button-link\"\r\n                    onClick={this.updateCachedDisciplines}\r\n                  >\r\n                    Обновите кэш групп\r\n                  </button>\r\n                </li>\r\n              </ol>\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <p>\r\n                Если вам доступны не все группы, которые вам доступны в БРС, то{\" \"}\r\n                <button\r\n                  className=\"button-link\"\r\n                  onClick={this.updateCachedDisciplines}\r\n                >\r\n                  обновите кэш групп\r\n                </button>\r\n              </p>\r\n              <Container className=\"vertical-margin-medium\">\r\n                <RunWorkerButtons\r\n                  enabled={this.state.showWorkerButtons}\r\n                  onRunWorkSafe={this.handleRunWorkSafe}\r\n                  onRunWorkUnsafe={this.handleRunWorkUnsafe}\r\n                />\r\n              </Container>\r\n            </React.Fragment>\r\n          )}\r\n        </Collapse>\r\n        {this.state.runWorker && (\r\n          <WorkerDialog\r\n            marksData={this.marksData}\r\n            onClosed={this.handleWorkerClosed}\r\n            brsApi={this.props.brsApi}\r\n            onError={this.props.onError}\r\n            save={this.workerSaveMode}\r\n          />\r\n        )}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default memo(GoogleTableFetch);\r\n\r\ninterface Props {\r\n  brsApi: BrsApi;\r\n  onError: (errorMessage: string) => void;\r\n}\r\n\r\ninterface State {\r\n  tableUrl: string;\r\n  loading: boolean;\r\n  showDisciplines: boolean;\r\n  lastAction: LastAction;\r\n  tableUrlError: { error: boolean; message: string };\r\n  disciplines: NestedItem[];\r\n  allDisciplinesMissed: boolean;\r\n  missedDisciplinesCount: number;\r\n  showWorkerButtons: boolean;\r\n  runWorker: boolean;\r\n}\r\n","export default class ReportManager {\r\n  private _currentReport: Report | null = null;\r\n  private readonly onReportFinished: (report: Report) => void;\r\n\r\n  readonly onInvalidConfiguration: (errorMessages: string[]) => void;\r\n\r\n  constructor(\r\n    onReportFinished: (report: Report) => void,\r\n    onInvalidConfiguration: (errorMessages: string[]) => void\r\n  ) {\r\n    this.onReportFinished = onReportFinished;\r\n    this.onInvalidConfiguration = onInvalidConfiguration;\r\n  }\r\n\r\n  get currentReport() {\r\n    if (!this._currentReport)\r\n      throw new Error(\"Построение отчета еще не начато\");\r\n    return this._currentReport;\r\n  }\r\n\r\n  newReport(group: string) {\r\n    this.finishReport();\r\n    this._currentReport = {\r\n      group,\r\n      merge: { succeed: 0 },\r\n      marks: [],\r\n      skipped: [],\r\n    };\r\n  }\r\n\r\n  finishReport() {\r\n    if (this._currentReport) this.onReportFinished(this._currentReport);\r\n    this._currentReport = null;\r\n  }\r\n\r\n  cancelReport() {\r\n    this._currentReport = null;\r\n  }\r\n}\r\n\r\nexport interface Report {\r\n  group: string;\r\n  merge: {\r\n    succeed: number;\r\n    failedActual?: string[];\r\n    failedBrs?: string[];\r\n  };\r\n  marks: Section[];\r\n  skipped: Section[];\r\n}\r\n\r\nexport interface Section {\r\n  title: string;\r\n  students?: string[];\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport SubmitWithLoading from \"../../shared/SubmitWithLoading\";\r\nimport MarksManager from \"../../../managers/MarksManager\";\r\nimport BrsApi, { Discipline } from \"../../../apis/BrsApi\";\r\nimport { SpreadsheetData } from \"../../../managers/SpreadsheetManager\";\r\nimport NestedList, { NestedItem } from \"../../shared/NestedList\";\r\nimport ReportManager, { Report } from \"../../../managers/ReportManager\";\r\nimport { pluralize } from \"../../../helpers/tools\";\r\n\r\nconst DialogContent = withStyles(() => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default class WorkerDialog extends React.Component<Props, State> {\r\n  marksManager: MarksManager;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    const { brsApi, save } = props;\r\n    const reportManager = new ReportManager(\r\n      this.logMessage,\r\n      this.logConfigurationErrors\r\n    );\r\n    this.marksManager = new MarksManager(brsApi, reportManager, save);\r\n\r\n    this.state = {\r\n      okLoading: true,\r\n      cancelPending: false,\r\n      logItems: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.startWork();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.marksManager.cancel();\r\n  }\r\n\r\n  logConfigurationErrors = (errorMessages: string[]) => {\r\n    const logItems = errorMessages.map((title) => ({ title, colored: true }));\r\n    this.setState({ logItems });\r\n  }\r\n\r\n  logMessage = async (report: Report) => {\r\n    const logItems = await this.reportToNestedListItems(report);\r\n    this.setState({ logItems });\r\n  };\r\n\r\n  reportToNestedListItems(report: Report): Promise<NestedItem[]> {\r\n    const logItems = this.state.logItems;\r\n    return new Promise((resolve) => {\r\n      let title = `Группа ${report.group}`;\r\n      const nestedItems: NestedItem[] = [];\r\n      const mainItem: NestedItem = { title, collapsed: true, nestedItems };\r\n\r\n      let hasErrors = false;\r\n\r\n      const merge = report.merge;\r\n      let mergeResultsTitle = `Сопоставление: ${merge.succeed} успешно`;\r\n      const failedActualCount = merge.failedActual?.length || 0;\r\n      mergeResultsTitle += `, ${failedActualCount} ${pluralize(\r\n        failedActualCount,\r\n        \"неизвестный\",\r\n        \"неизвестных\",\r\n        \"неизвестных\"\r\n      )} в таблице`;\r\n      const failedBrsCount = merge.failedBrs?.length || 0;\r\n      mergeResultsTitle += `, ${failedBrsCount} ${pluralize(\r\n        failedBrsCount,\r\n        \"неизвестный\",\r\n        \"неизвестных\",\r\n        \"неизвестных\"\r\n      )} в БРС`;\r\n\r\n      const mergeInfoItem: NestedItem = {\r\n        title: mergeResultsTitle,\r\n        collapsed: true,\r\n        nestedItems: [],\r\n      };\r\n      nestedItems.push(mergeInfoItem);\r\n\r\n      if (!!merge.failedActual) {\r\n        hasErrors = true;\r\n        title = `Не удалось сопоставить ${\r\n          merge.failedActual.length\r\n        } ${pluralize(\r\n          merge.failedActual.length,\r\n          \"студента\",\r\n          \"студентов\",\r\n          \"студентов\"\r\n        )} из Google Таблицы`;\r\n        mergeInfoItem.nestedItems?.push({\r\n          title,\r\n          colored: true,\r\n          collapsed: false,\r\n          nestedItems: merge.failedActual.map((s) => ({ title: s })),\r\n        });\r\n      }\r\n      if (!!merge.failedBrs) {\r\n        hasErrors = true;\r\n        title = `Не удалось сопоставить ${merge.failedBrs.length} ${pluralize(\r\n          merge.failedBrs.length,\r\n          \"студента\",\r\n          \"студентов\",\r\n          \"студентов\"\r\n        )} из БРС`;\r\n        mergeInfoItem.nestedItems?.push({\r\n          title,\r\n          colored: true,\r\n          collapsed: false,\r\n          nestedItems: merge.failedBrs.map((s) => ({ title: s })),\r\n        });\r\n      }\r\n\r\n      const marks = report.marks;\r\n      const marksItem: NestedItem = {\r\n        title: \"Выставление баллов\",\r\n        collapsed: true,\r\n      };\r\n      marksItem.nestedItems = marks.map(({ title, students }) => ({\r\n        title: `${title}: ${students?.length ?? 0} ${pluralize(\r\n          students?.length ?? 0,\r\n          \"студент\",\r\n          \"студента\",\r\n          \"студентов\"\r\n        )}`,\r\n        nestedItems: students?.map((s) => ({ title: s })),\r\n        collapsed: false,\r\n      }));\r\n      nestedItems.push(marksItem);\r\n\r\n      const skipped = report.skipped;\r\n      if (skipped.length > 0) {\r\n        const skippedItem: NestedItem = {\r\n          title: \"Неизвестные студенты из БРС\",\r\n          collapsed: true,\r\n        };\r\n        skippedItem.nestedItems = skipped.map(({ title, students }) => ({\r\n          title: `${title}: ${students?.length ?? 0} ${pluralize(\r\n            students?.length ?? 0,\r\n            \"студент\",\r\n            \"студента\",\r\n            \"студентов\"\r\n          )}`,\r\n          nestedItems: students?.map((s) => ({ title: s })),\r\n          collapsed: false,\r\n        }));\r\n        nestedItems.push(skippedItem);\r\n      }\r\n\r\n      if (hasErrors) {\r\n        mainItem.colored = true;\r\n      }\r\n      logItems.push(mainItem);\r\n\r\n      resolve(logItems);\r\n    });\r\n  }\r\n\r\n  startWork = async () => {\r\n    const { spreadsheetData, suitableDisciplines } = this.props.marksData;\r\n    const error = await this.marksManager.putMarksToBrsAsync(\r\n      spreadsheetData,\r\n      suitableDisciplines\r\n    );\r\n\r\n    if (error) this.props.onError(error);\r\n\r\n    this.setState({\r\n      cancelPending: false,\r\n      okLoading: false,\r\n    });\r\n  };\r\n\r\n  cancelWork = () => {\r\n    this.setState({ cancelPending: true });\r\n    this.marksManager.cancel();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Dialog open={true} maxWidth=\"md\" fullWidth className=\"worker-dialog\">\r\n          <MuiDialogTitle>Журнал действий</MuiDialogTitle>\r\n          <DialogContent dividers>\r\n            <NestedList items={this.state.logItems} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <SubmitWithLoading\r\n              loading={this.state.okLoading}\r\n              onClick={this.props.onClosed}\r\n              title=\"ок\"\r\n            />\r\n            <SubmitWithLoading\r\n              loading={this.state.cancelPending}\r\n              disabled={!this.state.okLoading}\r\n              onClick={this.cancelWork}\r\n              title=\"отмена\"\r\n            />\r\n          </DialogActions>\r\n        </Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport interface MarksData {\r\n  spreadsheetData: SpreadsheetData;\r\n  suitableDisciplines: Discipline[];\r\n}\r\n\r\ninterface Props {\r\n  marksData: MarksData;\r\n  brsApi: BrsApi;\r\n  save: boolean;\r\n  onClosed: () => void;\r\n  onError: (errorMessage: string) => void;\r\n}\r\n\r\ninterface State {\r\n  okLoading: boolean;\r\n  cancelPending: boolean;\r\n  logItems: NestedItem[];\r\n}\r\n","import { TextField } from \"@material-ui/core\";\r\nimport SubmitWithLoading from \"../../shared/SubmitWithLoading\";\r\nimport React, { FormEvent, useState } from \"react\";\r\nimport { TABLE_URL_PATTERN, TABLE_TEMPLATE_URL } from \"../../../Constants\";\r\n\r\nexport default function GoogleTableFetchForm({ loading, onSubmit }: Props) {\r\n  const [tableUrl, setTableUrl] = useState(\"\");\r\n  const [urlError, setUrlError] = useState(null as null | string);\r\n\r\n  const handleUrlChanged = (event: React.ChangeEvent<{ value: string }>) => {\r\n    const target = event.target;\r\n    if (urlError) setUrlError(null);\r\n    setTableUrl(target.value);\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const regExp =\r\n      /d\\/(?<spreadsheetId>[a-zA-Z0-9-_]+)\\/edit(#gid=(?<sheetId>[0-9]+))?/;\r\n    const spreadsheetInfo = tableUrl.match(regExp);\r\n\r\n    if (!spreadsheetInfo?.groups || !spreadsheetInfo.groups.spreadsheetId) {\r\n      setUrlError(\"Неверный url-адрес.\");\r\n      return null;\r\n    }\r\n\r\n    const spreadsheetId = spreadsheetInfo.groups.spreadsheetId;\r\n    const maybeSheetId = spreadsheetInfo.groups.sheetId || null;\r\n\r\n    onSubmit(spreadsheetId, maybeSheetId);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"vertical-margin-min\">\r\n      <TextField\r\n        name=\"table-url\"\r\n        label={\"Ссылка вида \" + TABLE_TEMPLATE_URL}\r\n        type=\"text\"\r\n        className=\"tableUrl\"\r\n        value={tableUrl}\r\n        onChange={handleUrlChanged}\r\n        error={!!urlError}\r\n        helperText={urlError}\r\n        required\r\n      />\r\n      <SubmitWithLoading\r\n        title=\"загрузить\"\r\n        loading={loading}\r\n        className=\"submit\"\r\n      />\r\n      <a\r\n        href={TABLE_URL_PATTERN}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n        className=\"button-link\"\r\n      >\r\n        Пример таблицы для экспорта в БРС\r\n      </a>\r\n    </form>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  onSubmit: (spreadsheetId: string, sheetId: string | null) => void;\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<unknown>\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SessionExpiredAlert({\r\n  open,\r\n  sessionName,\r\n  onOk,\r\n}: Props) {\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Необходимо авторизоваться\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Кажется, действие сессии {sessionName} истекло.\r\n            <br />\r\n            Необходимо повторно авторизоваться.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions\r\n          style={{ display: \"flex\", justifyContent: \"space-around\" }}\r\n        >\r\n          <Button onClick={onOk} color=\"primary\">\r\n            Ок\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  sessionName: string;\r\n  onOk: () => void;\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nexport default function LoadingPane() {\r\n  return (\r\n    <div className=\"loading-pane\">\r\n      <CircularProgress size={100} className=\"progress\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Container } from \"@material-ui/core\";\r\nimport GoogleTableFetch from \"../GoogleTableFetch\";\r\nimport BrsApi from \"../../../apis/BrsApi\";\r\nimport SessionExpiredAlert from \"../../shared/SessionExpiredAlert\";\r\nimport CustomAlert from \"../../shared/CustomAlert\";\r\nimport GoogleAuth from \"../../../apis/GoogleAuth\";\r\nimport BrsAuth from \"../../../apis/BrsAuth\";\r\nimport { StatusCode } from \"../../../helpers/CustomError\";\r\nimport LoadingPane from \"../LoadingPane\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class WorkPage extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showControls: false,\r\n      runWork: false,\r\n      openSessionExpiredAlert: false,\r\n      sessionName: \"\",\r\n      errorMessage: \"\",\r\n      loading: true,\r\n      redirect: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.props.googleAuth.ensureInitializedAsync();\r\n    await this.props.brsAuth.tryRestoreAsync();\r\n\r\n    const brsAuthorized = this.props.brsAuth.checkAuth();\r\n    if (!brsAuthorized) this.handleSessionExpired(\"БРС\");\r\n\r\n    const googleAuthorized = this.props.googleAuth.checkAuthorized();\r\n    if (!googleAuthorized) {\r\n      setTimeout(() => {\r\n        const googleAuthorized = this.props.googleAuth.checkAuthorized();\r\n        if (!googleAuthorized) this.handleSessionExpired(\"Google\");\r\n        else this.setState({ loading: false });\r\n      }, 1000);\r\n    } else {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  handleError = (error: any) => {\r\n    const errorMessage: string = error.message || JSON.stringify(error);\r\n    if (error.statusCode)\r\n      if (error.statusCode === StatusCode.BrsUnauthorized)\r\n        this.handleSessionExpired(\"БРС\");\r\n      else this.handleSessionExpired(\"Google\");\r\n    else if (error.name === \"RequestError\")\r\n      this.setState({\r\n        errorMessage: \"В данный момент сервер недоступен. Попробуйте позже.\",\r\n      });\r\n    else this.setState({ errorMessage });\r\n  };\r\n\r\n  handleSessionExpired = (sessionName: SessionName) => {\r\n    this.setState({\r\n      openSessionExpiredAlert: true,\r\n      sessionName,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  handleSessionExpiredOk = () => {\r\n    if (this.state.sessionName === \"БРС\") {\r\n      this.props.brsAuth.logout();\r\n      this.returnToLoginPage();\r\n      this.setState({ redirect: true });\r\n    } else if (this.state.sessionName === \"Google\") {\r\n      this.returnToLoginPage();\r\n    }\r\n  };\r\n\r\n  closeError = () => {\r\n    this.setState({ errorMessage: \"\" });\r\n  };\r\n\r\n  returnToLoginPage = () => {\r\n    this.setState({ redirect: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.loading && <LoadingPane />}\r\n        <SessionExpiredAlert\r\n          open={this.state.openSessionExpiredAlert}\r\n          sessionName={this.state.sessionName}\r\n          onOk={this.handleSessionExpiredOk}\r\n        />\r\n        {this.state.errorMessage && (\r\n          <CustomAlert\r\n            open={!!this.state.errorMessage}\r\n            message={this.state.errorMessage}\r\n            type=\"error\"\r\n            onClose={this.closeError}\r\n          />\r\n        )}\r\n        {this.state.redirect && <Redirect to=\"/\" />}\r\n        <div className=\"work-page\">\r\n          <Container maxWidth=\"md\">\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ marginTop: 10 }}\r\n              onClick={this.returnToLoginPage}\r\n            >\r\n              Вернуться на страницу входа\r\n            </Button>\r\n            <GoogleTableFetch\r\n              brsApi={this.props.brsApi}\r\n              onError={this.handleError}\r\n            />\r\n          </Container>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\ntype SessionName = \"БРС\" | \"Google\";\r\n\r\ninterface State {\r\n  showControls: boolean;\r\n  openSessionExpiredAlert: boolean;\r\n  sessionName: SessionName | \"\";\r\n  errorMessage: string;\r\n  runWork: boolean;\r\n  loading: boolean;\r\n  redirect: boolean;\r\n}\r\n\r\ninterface Props {\r\n  brsAuth: BrsAuth;\r\n  brsApi: BrsApi;\r\n  googleAuth: GoogleAuth;\r\n}\r\n","import React from \"react\";\r\nimport Context from \"../../Context\";\r\nimport WorkPage from \"./WorkPage\";\r\n\r\nexport default function WorkPageContainer() {\r\n  return (\r\n    <Context.Consumer>\r\n      {(context) =>\r\n        context && (\r\n          <WorkPage\r\n            brsAuth={context.brsAuth}\r\n            brsApi={context.brsApi}\r\n            googleAuth={context.googleAuth}\r\n          />\r\n        )\r\n      }\r\n    </Context.Consumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport BrsUrlProvider from \"./apis/BrsUrlProvider\";\r\nimport BrsAuth from \"./apis/BrsAuth\";\r\nimport GoogleAuth from \"./apis/GoogleAuth\";\r\nimport LoginPageContainer from \"./components/login/LoginPageContainer\";\r\nimport WorkPageContainer from \"./components/work/WorkPageContainer\";\r\nimport BrsApi from \"./apis/BrsApi\";\r\nimport Context from \"./Context\";\r\n\r\nconst urlProvider = new BrsUrlProvider(true);\r\nconst brsAuth = new BrsAuth(urlProvider);\r\nconst brsApi = new BrsApi(brsAuth, urlProvider);\r\nconst googleAuth = new GoogleAuth();\r\n\r\nexport default function App() {\r\n  return (\r\n    <Context.Provider value={{ brsAuth, brsApi, googleAuth }}>\r\n      <HashRouter hashType=\"noslash\">\r\n        <Switch>\r\n          <Route path=\"/work\" component={WorkPageContainer} />\r\n          <Route exact path=\"\" component={LoginPageContainer} />\r\n        </Switch>\r\n      </HashRouter>\r\n    </Context.Provider>\r\n  );\r\n}\r\n","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}