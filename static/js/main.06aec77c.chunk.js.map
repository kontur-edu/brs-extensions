{"version":3,"sources":["helpers/cache.ts","apis/brsUrlProvider.ts","helpers/CustomError.ts","apis/brsAuth.ts","Context.tsx","components/submitWithLoading/index.tsx","components/loginPage/brsLoginForm/index.tsx","apis/googleAuth.ts","components/loginPage/GoogleLoginButton.tsx","components/CustomAlert.tsx","apis/brsApi.ts","components/loginPage/index.tsx","components/loginPage/LoginPageWrapper.tsx","apis/googleApi.ts","helpers/tools.ts","helpers/brsHelpers.ts","functions/readStudentsAsync.ts","functions/getSpreadsheetDataAsync.ts","components/nestedList/index.tsx","functions/getSuitableDisciplinesAsync.ts","components/workPage/worker/RunWorkerButtons.tsx","helpers/fio.ts","marksActions/MarksManager.ts","marksActions/ReportBuilder.ts","components/workPage/worker/workerDialog/index.tsx","components/googleTableFetch/googleTableFetchForm/index.tsx","components/googleTableFetch/index.tsx","helpers/tryInvoke.ts","components/SessionExpiredAlert.tsx","components/workPage/loadingPane/LoadingPane.tsx","components/workPage/WorkPage.tsx","components/workPage/WorkPageWrapper.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StorageType","brsUrl","BrsUrlProvider","withProxy","this","memoryCache","save","name","data","whereTo","json","JSON","stringify","Local","LocalAndSession","localStorage","setItem","Session","sessionStorage","read","whereFrom","localData","content","getItem","memoryData","parse","clear","storageType","removeItem","StatusCode","CustomError","statusCode","message","LoginStatus","BrsAuth","brsUrlProvider","_sid","_cacheName","_username","loginInfo","cache","saveLoginInfo","sid","username","checkSidAsync","sidCheckResult","success","request","method","url","baseUrl","headers","response","match","login","password","requestSidAsync","Error","cookie","result","checkResult","InvalidCredentials","Succeed","cacheName","replaceAll","body","resolveWithFullResponse","simple","then","x","BrsUnauthorized","Context","createContext","SubmitWithLoading","props","title","loading","className","onClick","disabled","Button","type","fullWidth","variant","color","CircularProgress","size","onSubmit","submitting","signedIn","onLogout","React","useState","setLogin","setPassword","setSid","Fragment","e","preventDefault","TextField","margin","id","label","autoFocus","value","onChange","target","autoComplete","href","DISCOVERY_DOCS","googleAuth","init","gapi","client","Promise","resolve","load","a","clientId","discoveryDocs","scope","catch","console","error","checkAuthorized","auth2","getAuthInstance","isSignedIn","get","getUsername","basicProfile","currentUser","getBasicProfile","getName","getEmail","logout","signOut","GoogleLoginButton","onSignedIn","onFailure","Container","buttonText","onSuccess","CustomAlert","open","onClose","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","severity","Alert","elevation","StudentFailure","TermType","LoginPage","handleBrsSubmit","credentials","setState","submitLoading","loginBrsAsync","loginStatus","alertMessage","openAlert","alertType","brsAuthorized","brsAuth","authBySidAsync","loginAsync","handleCloseAlert","handleGoogleSignedIn","googleAuthorized","handleGoogleLoginFailed","startWork","redirect","handleBrsLogout","handleGoogleLogout","state","brsLoading","tryRestoreAsync","checkAuth","to","component","maxWidth","style","width","Component","Consumer","context","BrsApi","year","termType","course","isModule","cacheResult","getDisciplineTotalAsync","total","getDisciplineInternalAsync","queryString","requestApiJsonAsync","paging","disciplines","moduleParameter","discipline","getStudentMarksAsync","students","uniqueStudents","s","knownStudent","studentUuid","Object","keys","map","k","cardType","markType","getStudentMarksInternalAsync","disciplineLoad","groupHistoryId","groupId","groupUuid","techgroup","isTotal","showActiveStudents","groupPart","getControlActionsCachedAsync","getControlActionsInternalAsync","modulePart","requestApiAsync","prefix","suffix","linesWithId","split","trim","filter","startsWith","length","columns","substr","uuidPrefix","c","uuid","uuidWithoutPrefix","controlAction","controlActionId","mark","cardTypeKey","disciplineLoadUuid","isNaN","toString","studentFailure","NoFailure","updateMarksAsync","updateMarksInternalAsync","uri","options","trimLeft","getSpreadsheet","spreadsheetId","sheets","range","spreadsheets","values","readAsync","writeAsync","asEnteredByUser","valueInputOption","requestBody","update","appendAsync","append","getSpreadsheetProperties","res","sheetProps","properties","normalizeString","str","toLowerCase","replace","compareNormalized","s1","s2","parseAnyFloat","parseFloat","groupBy","items","key","reduce","reducer","item","itemKey","push","failureMapping","NotChosen","NotAllowedByDeansOffice","NotAppeared","Неуважительная","DisrespectfulReason","Уважительная","RespectfulReason","NotAllowedByTeacher","ShouldNotPass","AcademicLeave","Выбыл","DroppedOut","parseStudentFailure","input","undefined","formatStudentFailure","fromSpreadsheetAsync","readRange","fullNameIndex","groupNameIndex","idIndex","failureIndex","sheet","googleApi","rows","row","fullName","groupName","failure","getSpreadsheetDataAsync","sheetName","readRowsFromSpreadsheetAsync","header","getHeader","indices","buildIndicesBy","dataRange","buildDataRange","controlActionConfigs","buildControlActionConfig","disciplineConfig","buildDisciplineConfig","readStudents","fullNameColumn","left","groupColumn","failureColumn","actualStudents","normalizedHeader","groupColumnIndex","indexOf","fullNameColumnIndex","failureColumnIndex","disciplineParameterKeyColumnIndex","disciplineParameterValueColumnIndex","Math","abs","disciplineKeyColumn","disciplineValueColumn","min","right","leftLetter","String","fromCharCode","charCodeAt","rightLetter","index","controlActions","propertyIndex","config","sameColumns","matchCount","matchIndex","isSuitableDiscipline","Fall","defaultStudentFailure","i","addDisciplineConfigParameter","parseInt","Spring","lowerValue","NestedList","icons","listSubheader","ListSubheader","hidden","List","aria-labelledby","subheader","ConstructItems","ListItem","ListItemText","primary","level","NestedListItem","nestedItems","colored","collapsed","setOpen","hasSubItems","icon","IconPlace","ListItemIcon","button","paddingLeft","ExpandLess","ExpandMore","Collapse","in","unmountOnExit","disablePadding","getSuitableDisciplinesAsync","brsApi","getDisciplineCachedAsync","allDisciplines","d","enabled","onRunWorkSafe","onRunWorkUnsafe","Grid","container","justify","toKey","fio","MarksManager","reportsStore","cancelPending","reportBuilder","spreadsheetData","suitableDisciplines","putMarksForDisciplineAsync","group","finishReport","newReport","getAllControlActionsCachedAsync","checkControlActionsConfiguration","getAllStudentMarksAsync","brsStudents","mergeStudents","mergedStudents","skippedActualStudents","skippedBrsStudents","logMergedStudents","putMarksForStudentsAsync","updateFailuresForSkippedStudentsAsync","updateAllMarksAsync","getSuitableControlAction","all","student","putMarksForStudentAsync","ratingResults","groupedResults","entries","infoString","currentReport","marks","updated","failed","brsMark","brs","actualMark","actual","putStudentMarkAsync","brsFailureStatus","actualFailure","failureStatus","putStudentFailureAsync","status","studentName","join","suitableControlActions","some","b","errorMessages","onInvalidConfiguration","updateFailureForStudent","rawStudents","studentFio","description","activeBrsStudents","isStudentActive","actualStudent","suitableStudents","brsStudent","brsFullName","actualFullName","areStudentsLike","ms","report","merge","succeed","failedActual","failedBrs","studentStatus","ReportBuilder","onReportFinished","_currentReport","DialogContent","withStyles","root","padding","MuiDialogContent","DialogActions","display","justifyContent","MuiDialogActions","WorkerDialog","marksManager","logMessage","reportToNestedListItems","logItems","marksData","putMarksToBrsAsync","onError","okLoading","cancelWork","cancel","logConfigurationErrors","mainItem","hasErrors","mergeResultsTitle","mergeInfoItem","marksItem","translateStatus","Dialog","dividers","onClosed","GoogleTableFetchForm","tableUrl","setTableUrl","urlError","setUrlError","regExp","spreadsheetInfo","groups","maybeSheetId","sheetId","event","helperText","required","GoogleTableFetch","workerSaveMode","loadDisciplines","getActualSpreadsheetDataAsync","getAvailableDisciplinesAsync","availableDisciplines","disciplinesInfo","disciplinesToListItems","showDisciplines","disciplinesMissed","missed","showWorkerButtons","updateCachedDisciplines","userCacheName","action","tryInvoke","runWork","runWorker","handleRunWorkSafe","handleRunWorkUnsafe","handleWorkerClosed","tableUrlError","actualGroups","Set","availableGroups","missedCount","Array","from","groupMissed","has","getSheetName","spreadsheetProperties","maybeSheet","ViewModule","RunWorkerButtons","memo","Transition","forwardRef","ref","Slide","direction","SessionExpiredAlert","sessionName","setRedirect","TransitionComponent","keepMounted","aria-describedby","DialogTitle","DialogContentText","WorkPage","handleSessionExpired","openSessionExpiredAlert","handleError","errorMessage","closeError","returnToLoginPage","showControls","LoadingPane","marginTop","urlProvider","App","Provider","hashType","path","WorkPageWrapper","exact","LoginPageWrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06aec77c.chunk.js","sourcesContent":["import {DisciplineConfig} from \"../functions/getSpreadsheetDataAsync\";\r\n\r\nconst memoryCache: { [name: string]: object | string } = {};\r\n\r\nexport function save(name: string, data: object | string, whereTo: StorageType) {\r\n    if (!data) {\r\n        return false;\r\n    }\r\n\r\n    const json = JSON.stringify(data);\r\n\r\n    if (whereTo === StorageType.Local || whereTo === StorageType.LocalAndSession)\r\n        localStorage.setItem(name, json);\r\n    if (whereTo === StorageType.Session || whereTo === StorageType.LocalAndSession)\r\n        sessionStorage.setItem(name, json);\r\n\r\n    memoryCache[name] = data;\r\n\r\n    return true;\r\n}\r\n\r\nexport function read<T extends object | string>(name: string, whereFrom: StorageType) {\r\n    const localData = memoryCache[name];\r\n    if (localData && whereFrom !== StorageType.Session) {\r\n        return localData as T;\r\n    }\r\n\r\n    let content: string | null = null\r\n\r\n    if (whereFrom === StorageType.Local || whereFrom === StorageType.LocalAndSession)\r\n        content = localStorage.getItem(name);\r\n    if (whereFrom === StorageType.Session || whereFrom === StorageType.LocalAndSession)\r\n        content = sessionStorage.getItem(name);\r\n\r\n    if (!content) {\r\n        return null;\r\n    }\r\n\r\n    const memoryData = JSON.parse(content);\r\n    if (!memoryData) {\r\n        return null;\r\n    }\r\n\r\n    memoryCache[name] = memoryData;\r\n    return memoryData as T;\r\n}\r\n\r\nexport function clear(name: string, storageType: StorageType) {\r\n    if (storageType === StorageType.Local || storageType === StorageType.LocalAndSession)\r\n        localStorage.removeItem(name);\r\n    if (storageType === StorageType.Session || storageType === StorageType.LocalAndSession)\r\n        sessionStorage.removeItem(name);\r\n\r\n    delete memoryCache[name];\r\n\r\n    return true;\r\n}\r\n\r\nexport function buildCacheName(login: string, method: string, disciplineConfig: DisciplineConfig) {\r\n    const {year, termType, course, isModule} = disciplineConfig;\r\n    return `${login}_${method}_${year}_${termType}_${course}_${isModule}`;\r\n}\r\n\r\nexport enum StorageType {\r\n    Local,\r\n    Session,\r\n    LocalAndSession\r\n}\r\n","const brsUrl = 'https://brs.urfu.ru/mrd';\r\nconst corsProxy = 'https://kamikoto-cors-proxy.herokuapp.com';\r\n\r\nexport default class BrsUrlProvider {\r\n    private readonly withProxy: boolean;\r\n\r\n    constructor(withProxy: boolean) {\r\n        this.withProxy = withProxy;\r\n    }\r\n\r\n    get baseUrl() {\r\n        return this.withProxy ? `${corsProxy}/${brsUrl}` : brsUrl;\r\n    }\r\n}\r\n","export class CustomError {\r\n    readonly message: string;\r\n    readonly statusCode: StatusCode;\r\n\r\n    constructor(statusCode: StatusCode, message: string = '') {\r\n        this.statusCode = statusCode;\r\n        this.message = message;\r\n    }\r\n}\r\n\r\nexport enum StatusCode {\r\n    BrsUnauthorized = 1,\r\n    GoogleUnauthorized\r\n}\r\n","import request from \"request-promise\";\r\nimport BrsUrlProvider from \"./brsUrlProvider\";\r\nimport * as cache from \"../helpers/cache\";\r\nimport {StorageType} from \"../helpers/cache\";\r\nimport {CustomError, StatusCode} from \"../helpers/CustomError\";\r\n\r\nexport default class BrsAuth {\r\n    readonly brsUrlProvider: BrsUrlProvider;\r\n\r\n    constructor(brsUrlProvider: BrsUrlProvider) {\r\n        this.brsUrlProvider = brsUrlProvider;\r\n    }\r\n\r\n    private _sid: string | null = null;\r\n\r\n    get sid() {\r\n        if (!this._sid)\r\n            throw new CustomError(StatusCode.BrsUnauthorized, 'BRS unauthorized');\r\n        return this._sid;\r\n    }\r\n\r\n    private _cacheName: string | null = null;\r\n\r\n    get cacheName() {\r\n        if (!this._cacheName)\r\n            throw new CustomError(StatusCode.BrsUnauthorized, 'BRS unauthorized');\r\n        return this._cacheName;\r\n    }\r\n\r\n    private _username?: string = \"Anonymous\";\r\n\r\n    get username() {\r\n        return this._username;\r\n    }\r\n\r\n    checkAuth() {\r\n        return !!(this._sid && this._cacheName);\r\n    }\r\n\r\n    async tryRestoreAsync() {\r\n        if (!!(this._sid && this._cacheName))\r\n            return;\r\n\r\n        let loginInfo = cache.read<LoginInfo>(\"loginInfo\", StorageType.Session);\r\n        if (loginInfo) {\r\n            this.saveLoginInfo(loginInfo.sid, loginInfo.username);\r\n            return;\r\n        }\r\n\r\n        loginInfo = cache.read<LoginInfo>(\"loginInfo\", StorageType.Local);\r\n        if (!loginInfo)\r\n            return;\r\n\r\n        const sidCheckResult = await this.checkSidAsync(loginInfo.sid);\r\n        if (sidCheckResult?.success)\r\n            this.saveLoginInfo(loginInfo.sid, loginInfo.username);\r\n    }\r\n\r\n    private async checkSidAsync(sid: string): Promise<SidCheckResult | null> {\r\n        try {\r\n            const response: string = await request({\r\n                method: 'GET',\r\n                url: this.brsUrlProvider.baseUrl + \"/mvc/mobile\",\r\n                headers: {\r\n                    'X-Cookie': `JSESSIONID=${sid}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                },\r\n            });\r\n\r\n            const username = response.match(/username\">([А-ЯЁа-яё \\-]+)</);\r\n            if (username)\r\n                return {success: true, username: username[1]};\r\n            return {success: false, username: \"Anonymous\"}\r\n\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async loginAsync(login: string, password: string): Promise<LoginStatus> {\r\n        const response = await this.requestSidAsync(login, password);\r\n\r\n        if (!response || !('x-set-cookie' in response.headers)) {\r\n            return LoginStatus.Error;\r\n        }\r\n\r\n        const cookie = response.headers['x-set-cookie'] as string;\r\n        const result = cookie.match(/(?<=JSESSIONID=)\\w+/);\r\n\r\n        if (!result)\r\n            return LoginStatus.Error;\r\n\r\n        const sid = result[0];\r\n\r\n        const checkResult = await this.checkSidAsync(sid);\r\n        if (checkResult === null)\r\n            return LoginStatus.Error;\r\n        if (!checkResult.success)\r\n            return LoginStatus.InvalidCredentials;\r\n\r\n        this.saveLoginInfo(sid, checkResult.username);\r\n\r\n        return LoginStatus.Succeed;\r\n    }\r\n\r\n    async authBySidAsync(sid: string): Promise<LoginStatus> {\r\n        if (!sid)\r\n            return LoginStatus.InvalidCredentials;\r\n\r\n        const checkResult = await this.checkSidAsync(sid);\r\n        if (checkResult === null)\r\n            return LoginStatus.Error;\r\n        if (!checkResult.success)\r\n            return LoginStatus.InvalidCredentials;\r\n\r\n        this.saveLoginInfo(sid, checkResult.username);\r\n\r\n        return LoginStatus.Succeed;\r\n    }\r\n\r\n    private saveLoginInfo(sid: string, username: string) {\r\n        const cacheName = username.replaceAll(' ', '_');\r\n\r\n        cache.save(\"loginInfo\", {sid, cacheName, username}, StorageType.LocalAndSession);\r\n\r\n        this._sid = sid;\r\n        this._cacheName = cacheName;\r\n        this._username = username;\r\n    }\r\n\r\n    logout() {\r\n        this._sid = null;\r\n        this._cacheName = null;\r\n        cache.clear(\"loginInfo\", StorageType.LocalAndSession);\r\n    }\r\n\r\n    private async requestSidAsync(login: string, password: string) {\r\n        return await request({\r\n            url: this.brsUrlProvider.baseUrl + `/login`,\r\n            method: 'POST',\r\n            body: `username=${login}&password=${password}`,\r\n            resolveWithFullResponse: true,\r\n            simple: false,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            },\r\n        }).then(x => x, () => null);\r\n    }\r\n}\r\n\r\nexport enum LoginStatus {\r\n    Succeed,\r\n    InvalidCredentials,\r\n    Error\r\n}\r\n\r\ninterface LoginInfo {\r\n    sid: string;\r\n    cacheName: string;\r\n    username: string;\r\n}\r\n\r\ninterface SidCheckResult {\r\n    success: boolean;\r\n    username: string;\r\n}\r\n","import {createContext} from \"react\";\r\nimport BrsAuth from \"./apis/brsAuth\";\r\nimport BrsApi from \"./apis/brsApi\";\r\n\r\n// @ts-ignore\r\nconst Context = createContext<{ brsAuth: BrsAuth, brsApi: BrsApi }>();\r\n\r\nexport default Context;\r\n","import {Button, CircularProgress} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default function SubmitWithLoading(props: Props) {\r\n    const {title, loading, className, onClick, disabled = false} = props;\r\n\r\n    return (\r\n        <div className={\"submit-with-loading \" + className}>\r\n            <Button type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onClick}\r\n                    disabled={loading || disabled}>\r\n                {title}\r\n            </Button>\r\n            {\r\n                loading &&\r\n                <CircularProgress color=\"secondary\" size={24} className=\"button-progress\"/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface Props {\r\n    title: string;\r\n    loading: boolean;\r\n    className?: string;\r\n    onClick?: () => void;\r\n    disabled?: boolean;\r\n}\r\n","import {Button, CircularProgress, TextField} from \"@material-ui/core\";\r\nimport SubmitWithLoading from \"../../submitWithLoading\";\r\nimport React, {FormEvent} from \"react\";\r\nimport \"./styles.css\"\r\n\r\nconst sidGainingInstruction = \"https://docs.google.com/document/d/1btXePo-5bE8RyX7RFXnBuS-UN9SmwUithpc_UXhAWsg/edit\";\r\n\r\nexport default function ({onSubmit, submitting, loading, signedIn, onLogout, username}: Props) {\r\n    const [login, setLogin] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [sid, setSid] = React.useState('');\r\n\r\n    function handleUsernameChanged(e: React.ChangeEvent<HTMLInputElement>) {\r\n        const value = e.target.value;\r\n        setLogin(value);\r\n        setSid(\"\");\r\n    }\r\n\r\n    function handlePasswordChanged(e: React.ChangeEvent<HTMLInputElement>) {\r\n        const value = e.target.value;\r\n        setPassword(value);\r\n        setSid(\"\");\r\n    }\r\n\r\n    function handleSidChanged(e: React.ChangeEvent<HTMLInputElement>) {\r\n        const value = e.target.value;\r\n        setSid(value);\r\n        setLogin(\"\");\r\n        setPassword(\"\");\r\n    }\r\n\r\n    function handleSubmit(e: FormEvent) {\r\n        e.preventDefault();\r\n\r\n        if (loading)\r\n            return;\r\n\r\n        onSubmit({login: login, password, sid});\r\n    }\r\n\r\n    return signedIn ? (\r\n            <React.Fragment>\r\n                <p>Добро пожаловать, {username}</p>\r\n                <Button type=\"button\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        onClick={onLogout}\r\n                        color=\"primary\">\r\n                    Выйти из БРС\r\n                </Button>\r\n            </React.Fragment>\r\n        ) :\r\n        (\r\n            <div className={\"brs-login-form\"}>\r\n                <p><b>Войдите в БРС</b>, чтобы сервис мог получить информацию о ваших курсах и выставлять оценки от\r\n                    вашего имени</p>\r\n                <p>Это можно сделать через учетную запись БРС</p>\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <TextField\r\n                        className={\"form-component\"}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Имя пользователя\"\r\n                        name=\"username\"\r\n                        autoFocus\r\n                        value={login}\r\n                        disabled={loading}\r\n                        onChange={handleUsernameChanged}/>\r\n                    <TextField\r\n                        className={\"form-component\"}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Пароль\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={password}\r\n                        disabled={loading}\r\n                        onChange={handlePasswordChanged}/>\r\n                    <p className=\"form-component text-align-center\">или через JSESSIONID при использовании единой\r\n                        учетной записи УрФУ</p>\r\n                    <TextField\r\n                        className={\"form-component\"}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        name=\"sid\"\r\n                        label=\"JSESSIONID\"\r\n                        type=\"password\"\r\n                        id=\"sid\"\r\n                        value={sid}\r\n                        disabled={loading}\r\n                        onChange={handleSidChanged}/>\r\n                    <a href={sidGainingInstruction}\r\n                       className={\"button-link\"}\r\n                       target={\"_blank\"}\r\n                    >Как получить JSESSIONID</a>\r\n                    <SubmitWithLoading className={\"vertical-margin-medium\"} title=\"войти\" loading={submitting}\r\n                                       disabled={loading}/>\r\n                </form>\r\n                {\r\n                    loading &&\r\n                    <CircularProgress color=\"primary\" size={150} className=\"progress\"/>\r\n                }\r\n            </div>\r\n        );\r\n}\r\n\r\ninterface Props {\r\n    submitting: boolean;\r\n    loading: boolean;\r\n    onSubmit: (credentials: Credentials) => void;\r\n    onLogout: () => void;\r\n    signedIn: boolean;\r\n    username?: string;\r\n}\r\n\r\nexport interface Credentials {\r\n    login: string\r\n    password: string\r\n    sid: string\r\n}\r\n","const CLIENT_ID = '122993083593-pacve8csj86voko30ia65raeg0ncrtuv.apps.googleusercontent.com';\r\nconst DISCOVERY_DOCS = [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"];\r\nconst SCOPES = \"profile email https://www.googleapis.com/auth/spreadsheets\";\r\n\r\nconst googleAuth = {\r\n    async init() {\r\n        // @ts-ignore\r\n        if (gapi.client)\r\n            return;\r\n        return new Promise(resolve => {\r\n            gapi.load('client:auth2', async () => {\r\n                await gapi.client.init({\r\n                    clientId: CLIENT_ID,\r\n                    discoveryDocs: DISCOVERY_DOCS,\r\n                    scope: SCOPES\r\n                }).catch(console.error);\r\n                resolve();\r\n            });\r\n        });\r\n    },\r\n\r\n    checkAuthorized() {\r\n        // @ts-ignore\r\n        return gapi.auth2?.getAuthInstance()?.isSignedIn?.get();\r\n    },\r\n\r\n    getUsername(): string | undefined {\r\n        // @ts-ignore\r\n        const basicProfile = gapi.auth2?.getAuthInstance()?.currentUser?.get()?.getBasicProfile();\r\n        return basicProfile?.getName() || basicProfile?.getEmail();\r\n    },\r\n\r\n    async logout() {\r\n        // @ts-ignore\r\n        await gapi.auth2?.getAuthInstance()?.signOut();\r\n    }\r\n};\r\n\r\nexport default googleAuth;\r\n","import GoogleLogin from \"react-google-login\";\r\nimport React from \"react\";\r\nimport {Button, Container} from \"@material-ui/core\";\r\n\r\nconst CLIENT_ID = '122993083593-pacve8csj86voko30ia65raeg0ncrtuv.apps.googleusercontent.com';\r\nconst SCOPES = \"profile email https://www.googleapis.com/auth/spreadsheets\";\r\n\r\nexport default function GoogleLoginButton(props: Props) {\r\n    const {onSignedIn, onFailure, signedIn, username, onLogout} = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                signedIn ?\r\n                    <Container className={\"text-align-center\"}>\r\n                        <p>Добро пожаловать, {username}</p>\r\n                        <Button type=\"button\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                onClick={onLogout}\r\n                                color=\"primary\">\r\n                            Выйти из Google\r\n                        </Button>\r\n                    </Container> :\r\n                    <Container className={\"text-align-center\"}>\r\n                        <p><b>Войдите в Google</b>, чтобы сервис мог загружать оценки студентов из ваших\r\n                            Google&nbsp;Таблиц</p>\r\n                        <GoogleLogin\r\n                            clientId={CLIENT_ID}\r\n                            buttonText=\"Войти в аккаунт Google\"\r\n                            onSuccess={onSignedIn}\r\n                            onFailure={onFailure}\r\n                            scope={SCOPES}\r\n                            isSignedIn={true}/>\r\n                    </Container>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\ninterface Props {\r\n    onSignedIn: () => void;\r\n    onFailure: (error: any) => void;\r\n    onLogout: () => void;\r\n    signedIn: boolean;\r\n    username?: string;\r\n}\r\n","import React from \"react\";\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\r\nimport {Snackbar} from \"@material-ui/core\";\r\n\r\nexport default function CustomAlert(props: Props) {\r\n    const {open, message, type, onClose} = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Snackbar\r\n                open={open}\r\n                autoHideDuration={10000}\r\n                anchorOrigin={{vertical: 'top', horizontal: 'center'}}\r\n                onClose={onClose}>\r\n                <Alert severity={type} onClose={onClose}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    message: string;\r\n    type: \"error\" | \"success\";\r\n    onClose: () => void;\r\n}\r\n","import 'bluebird';\r\nimport request from 'request-promise';\r\nimport * as cache from '../helpers/cache';\r\nimport {StorageType} from '../helpers/cache';\r\nimport BrsAuth from \"./brsAuth\";\r\nimport BrsUrlProvider from \"./brsUrlProvider\";\r\nimport {CustomError, StatusCode} from \"../helpers/CustomError\";\r\n\r\nexport default class BrsApi {\r\n    readonly brsAuth: BrsAuth;\r\n    private readonly brsUrlProvider: BrsUrlProvider;\r\n\r\n    constructor(brsAuth: BrsAuth, brsUrlProvider: BrsUrlProvider) {\r\n        this.brsAuth = brsAuth;\r\n        this.brsUrlProvider = brsUrlProvider;\r\n    }\r\n\r\n    async getDisciplineCachedAsync(\r\n        year: number,\r\n        termType: TermType,\r\n        course: number,\r\n        isModule: boolean\r\n    ) {\r\n        const cacheName = `${this.brsAuth.cacheName}_getDiscipline_${year}_${termType}_${course}_${isModule}`;\r\n        const cacheResult = cache.read<Discipline[]>(cacheName, StorageType.Local);\r\n        if (cacheResult) {\r\n            return cacheResult;\r\n        }\r\n\r\n        const total = await this.getDisciplineTotalAsync(year, termType, course, isModule);\r\n        const result = await this.getDisciplineInternalAsync(\r\n            year,\r\n            termType,\r\n            course,\r\n            isModule,\r\n            total\r\n        );\r\n        cache.save(cacheName, result, StorageType.Local);\r\n        return result;\r\n    }\r\n\r\n    async getDisciplineInternalAsync(\r\n        year: number,\r\n        termType: TermType,\r\n        course: number,\r\n        isModule: boolean,\r\n        total: number\r\n    ) {\r\n        const queryString = `?year=${year}&termType=${termType}&course=${course}&total=${total}&page=1&pageSize=${total}&search=`;\r\n        if (isModule) {\r\n            const paging = await this.requestApiJsonAsync<Paging<Discipline>>(\r\n                '/mvc/mobile/module/fetch' + queryString\r\n            );\r\n            const disciplines = paging.content;\r\n            for (const d of disciplines) {\r\n                d.isModule = true;\r\n            }\r\n            return disciplines;\r\n        } else {\r\n            const paging = await this.requestApiJsonAsync<Paging<Discipline>>(\r\n                '/mvc/mobile/discipline/fetch' + queryString\r\n            );\r\n            const disciplines = paging.content;\r\n            for (const d of disciplines) {\r\n                d.isModule = false;\r\n            }\r\n            return disciplines;\r\n        }\r\n    }\r\n\r\n    async getDisciplineTotalAsync(\r\n        year: number,\r\n        termType: TermType,\r\n        course: number,\r\n        isModule: boolean\r\n    ) {\r\n        const moduleParameter = isModule ? '&its=true' : '';\r\n        const queryString = `?year=${year}&termType=${termType}&course=${course}` + moduleParameter;\r\n        const total = await this.requestApiJsonAsync<number>(\r\n            '/mvc/mobile/discipline/amount' + queryString\r\n        );\r\n        return total;\r\n    }\r\n\r\n    async getAllStudentMarksAsync(discipline: Discipline) {\r\n        const students = [\r\n            ...(await this.getStudentMarksAsync(discipline, 'lecture', 'current')),\r\n            ...(await this.getStudentMarksAsync(discipline, 'lecture', 'intermediate')),\r\n            ...(await this.getStudentMarksAsync(discipline, 'laboratory', 'current')),\r\n            ...(await this.getStudentMarksAsync(discipline, 'laboratory', 'intermediate')),\r\n        ];\r\n\r\n        const uniqueStudents: { [id: string]: StudentMark } = {};\r\n        for (const s of students) {\r\n            const knownStudent = uniqueStudents[s.studentUuid] || {};\r\n            uniqueStudents[s.studentUuid] = {...knownStudent, ...s};\r\n        }\r\n\r\n        return Object.keys(uniqueStudents).map(k => uniqueStudents[k]);\r\n    }\r\n\r\n    async getStudentMarksAsync(\r\n        discipline: Discipline,\r\n        cardType: CardType,\r\n        markType: MarkType\r\n    ) {\r\n        return this.getStudentMarksInternalAsync(\r\n            discipline.disciplineLoad,\r\n            discipline.isModule,\r\n            discipline.groupHistoryId,\r\n            discipline.groupId,\r\n            cardType,\r\n            markType\r\n        );\r\n    }\r\n\r\n    async getStudentMarksInternalAsync(\r\n        disciplineLoad: string,\r\n        isModule: boolean,\r\n        groupUuid: string,\r\n        techgroup: string,\r\n        cardType: CardType,\r\n        markType: MarkType,\r\n        isTotal: boolean = false,\r\n        showActiveStudents: boolean = false\r\n    ) {\r\n        const groupPart = isModule\r\n            ? `techgroup=${techgroup}`\r\n            : `groupUuid=${groupUuid}`;\r\n        return this.requestApiJsonAsync<StudentMark[]>(\r\n            `/mvc/mobile/studentMarks/fetch?disciplineLoad=${disciplineLoad}&${groupPart}` +\r\n            `&cardType=${cardType}&hasTest=false&isTotal=${isTotal}` +\r\n            `&intermediate=${markType === 'intermediate'}` +\r\n            `&selectedTeachers=null&showActiveStudents=${showActiveStudents}`\r\n        );\r\n    }\r\n\r\n    async getAllControlActionsCachedAsync(discipline: Discipline) {\r\n        return [\r\n            ...(await this.getControlActionsCachedAsync(discipline, 'lecture', 'current')),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'lecture',\r\n                'intermediate'\r\n            )),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'laboratory',\r\n                'current'\r\n            )),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'laboratory',\r\n                'intermediate'\r\n            )),\r\n            ...(await this.getControlActionsCachedAsync(discipline, 'practice', 'current')),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'practice',\r\n                'intermediate'\r\n            )),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'additionalPractice',\r\n                'current'\r\n            )),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'additionalPractice',\r\n                'intermediate'\r\n            )),\r\n        ];\r\n    }\r\n\r\n    async getControlActionsCachedAsync(\r\n        discipline: Discipline,\r\n        cardType: CardType,\r\n        markType: MarkType\r\n    ) {\r\n        const cacheName = `${this.brsAuth.cacheName}_getControlActions_${discipline.disciplineLoad}` +\r\n            `_${discipline.isModule}_${discipline.groupHistoryId}_${discipline.groupId}_${cardType}_${markType}`;\r\n        const cacheResult = cache.read<ControlAction[]>(cacheName, StorageType.Local);\r\n        if (cacheResult) {\r\n            return cacheResult;\r\n        }\r\n\r\n        const result = await this.getControlActionsInternalAsync(\r\n            discipline.disciplineLoad,\r\n            discipline.isModule,\r\n            discipline.groupHistoryId,\r\n            discipline.groupId,\r\n            cardType,\r\n            markType\r\n        );\r\n        cache.save(cacheName, result, StorageType.Local);\r\n        return result;\r\n    }\r\n\r\n    async getControlActionsInternalAsync(\r\n        disciplineLoad: string,\r\n        isModule: boolean,\r\n        groupUuid: string,\r\n        techgroup: string,\r\n        cardType: CardType,\r\n        markType: MarkType\r\n    ) {\r\n        const modulePart = isModule ? '/module' : '';\r\n        const groupPart = isModule ? techgroup : groupUuid;\r\n        const response = await this.requestApiAsync<string>(\r\n            `/mvc/mobile/view/mark/${disciplineLoad}/${groupPart}/teachers${modulePart}/${cardType}/${markType}`\r\n        );\r\n\r\n        const prefix = 'gridColumns = toTextArray(';\r\n        const suffix = ');';\r\n        const linesWithId = response\r\n            .split('\\r\\n')\r\n            .map(s => s.trim())\r\n            .filter(s => s.startsWith(prefix));\r\n        if (linesWithId.length !== 1) {\r\n            throw new Error(\r\n                'Control actions page should contain single line target line with techcard identifier'\r\n            );\r\n        }\r\n\r\n        const columns: Array<{ controlAction: string; uuid: string }> =\r\n            JSON.parse(\r\n                linesWithId[0].substr(\r\n                    prefix.length,\r\n                    linesWithId[0].length - prefix.length - suffix.length\r\n                )\r\n            ) || [];\r\n\r\n        const uuidPrefix = 'technologyCard';\r\n        const result = columns\r\n            .filter(c => c.uuid && c.uuid.startsWith(uuidPrefix))\r\n            .map(c => ({\r\n                uuid: c.uuid,\r\n                uuidWithoutPrefix: c.uuid.substr(uuidPrefix.length),\r\n                controlAction: c.controlAction,\r\n            }));\r\n        return result as ControlAction[];\r\n    }\r\n\r\n    async putStudentMarkAsync(\r\n        studentUuid: string,\r\n        controlActionId: string,\r\n        mark: number,\r\n        groupId: string,\r\n        cardTypeKey: CardType,\r\n        disciplineLoadUuid: string\r\n    ) {\r\n        const body = `student=${studentUuid}&techcard=${controlActionId}&mark=${\r\n            isNaN(mark) ? '' : mark.toString()\r\n        }&groupId=${groupId}&cardTypeKey=${cardTypeKey}&disciplineLoadUuid=${disciplineLoadUuid}`;\r\n        return this.requestApiJsonAsync<StudentMark>(\r\n            `/mvc/mobile/studentMarks/put`,\r\n            {\r\n                method: 'POST',\r\n                body,\r\n                json: false,\r\n            },\r\n            {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            }\r\n        );\r\n    }\r\n\r\n    async putStudentFailureAsync(\r\n        studentUuid: string,\r\n        discipline: Discipline,\r\n        studentFailure: StudentFailure = StudentFailure.NoFailure,\r\n        cardType: CardType = 'lecture'\r\n    ) {\r\n        const body = `markFailure=${studentFailure}&cardType=${cardType}&disciplineLoad=${discipline.disciplineLoad}&studentId=${studentUuid}`;\r\n        await this.requestApiAsync(\r\n            `/mvc/mobile/failure/update`,\r\n            {\r\n                method: 'POST',\r\n                body,\r\n                json: false,\r\n            },\r\n            {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            }\r\n        );\r\n    }\r\n\r\n    async updateAllMarksAsync(discipline: Discipline) {\r\n        // Одного вызова достаточно, чтобы обновить все оценки по предмету у группы.\r\n        await this.updateMarksAsync(discipline, 'lecture', 'intermediate');\r\n        // await updateMarksAsync(discipline, 'lecture', 'current');\r\n        // await updateMarksAsync(discipline, 'lecture', 'intermediate');\r\n        // await updateMarksAsync(discipline, 'laboratory', 'current');\r\n        // await updateMarksAsync(discipline, 'laboratory', 'intermediate');\r\n        // await updateMarksAsync(discipline, 'practice', 'current');\r\n        // await updateMarksAsync(discipline, 'practice', 'intermediate');\r\n    }\r\n\r\n    async updateMarksAsync(\r\n        discipline: Discipline,\r\n        cardType: CardType,\r\n        markType: MarkType\r\n    ) {\r\n        return this.updateMarksInternalAsync(\r\n            discipline.disciplineLoad,\r\n            discipline.isModule,\r\n            discipline.groupHistoryId,\r\n            discipline.groupId,\r\n            cardType,\r\n            markType\r\n        );\r\n    }\r\n\r\n    async updateMarksInternalAsync(\r\n        disciplineLoad: string,\r\n        isModule: boolean,\r\n        groupUuid: string,\r\n        techgroup: string,\r\n        cardType: CardType,\r\n        markType: MarkType\r\n    ) {\r\n        const modulePart = isModule ? '/module' : '';\r\n        const groupPart = isModule\r\n            ? `techgroup=${techgroup}`\r\n            : `groupUuid=${groupUuid}`;\r\n        const body =\r\n            `disciplineLoad=${disciplineLoad}&${groupPart}` +\r\n            `&cardType=${cardType}&hasTest=false&isTotal=false` +\r\n            `&intermediate=${markType === 'intermediate'}` +\r\n            `&selectedTeachers=null&showActiveStudents=true`;\r\n        return this.requestApiAsync<string>(\r\n            `/mvc/mobile/updateMarks${modulePart}`,\r\n            {\r\n                method: 'POST',\r\n                body,\r\n                json: false,\r\n            },\r\n            {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            }\r\n        );\r\n    }\r\n\r\n    async requestApiJsonAsync<T>(\r\n        uri: string,\r\n        options?: RequestOptions,\r\n        headers?: RequestHeaders\r\n    ): Promise<T> {\r\n        const response = await this.requestApiAsync<string>(uri, options, headers);\r\n\r\n        return JSON.parse(response);\r\n    }\r\n\r\n    async requestApiAsync<T>(\r\n        uri: string,\r\n        options?: RequestOptions,\r\n        headers?: RequestHeaders\r\n    ): Promise<T> {\r\n        const response = await request({\r\n            method: 'GET',\r\n            ...options,\r\n            url: this.brsUrlProvider.baseUrl + uri,\r\n            headers: {\r\n                'X-Cookie': `JSESSIONID=${this.brsAuth.sid}`,\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                ...headers,\r\n            },\r\n        });\r\n\r\n        if (response.trimLeft().startsWith('<!DOCTYPE html>')) {\r\n            throw new CustomError(StatusCode.BrsUnauthorized, uri + ' is Forbidden');\r\n        }\r\n\r\n        return response;\r\n    }\r\n}\r\n\r\nexport enum StudentFailure {\r\n    /** -, дефис, все хорошо */ NoFailure = -1,\r\n    /** Не выбрана */ NotChosen = -19,\r\n    /** Не допущен (деканат) */ NotAllowedByDeansOffice = -18,\r\n    /** Не явился */ NotAppeared = 0,\r\n    /** Неуважительная */ DisrespectfulReason = 12,\r\n    /** Уважительная */ RespectfulReason = 13,\r\n    /** Не допущен */ NotAllowedByTeacher = 18,\r\n    /** Не должен сдавать */ ShouldNotPass = 19,\r\n    /** Академический отпуск */ AcademicLeave = 20,\r\n    /** Выбыл */ DroppedOut = 21,\r\n}\r\n\r\nexport enum TermType {\r\n    Fall = 1,\r\n    Spring = 2,\r\n}\r\n\r\nexport type CardType = 'lecture' | 'laboratory' | 'practice' | 'additionalPractice';\r\nexport type MarkType = 'intermediate' | 'current';\r\n\r\nexport interface RegisterInfo {\r\n    registerInfoStr: string;\r\n    registerId: number;\r\n    passDate: any;\r\n    cardType: string;\r\n    sheet: string;\r\n}\r\n\r\nexport interface Discipline {\r\n    groupId: string;\r\n    discipline: string;\r\n    group: string;\r\n    registerInfo: RegisterInfo[];\r\n    disciplineLoad: string;\r\n    groupHistoryId: string;\r\n    isModule: boolean;\r\n}\r\n\r\n// eslint-disable-next-line\r\nconst studentMarkSample: StudentMark = {\r\n    studentPersonalNumber: '09800106',\r\n    isEdit: false,\r\n    studentUuid:\r\n        'studen18hc2jg0000magk6mi3iec84bsundigr18hc2jg0000m53o7mlgvora278',\r\n    status: 1,\r\n    studentStatus: 'Активный',\r\n    ignoreCurrentDebars: false,\r\n    studentFio: 'Анисимова Маргарита Васильевна',\r\n    isExtern: false,\r\n    teacherName: '',\r\n    cardType: 'lecture',\r\n    studentName: 'Анисимова М.В.',\r\n    studentGroup: 'РИ-180001',\r\n    registerClosed: false,\r\n    subgroupsITS: '',\r\n    disciplineLoad: 'unpldd18hc2jg0000m5kojcd3te76bnk',\r\n};\r\n\r\nexport interface StudentMark {\r\n    studentPersonalNumber: string;\r\n    isEdit: boolean;\r\n    studentUuid: string;\r\n    status: number;\r\n    studentStatus: string;\r\n    ignoreCurrentDebars: boolean;\r\n    studentFio: string;\r\n    isExtern: boolean;\r\n    teacherName: string;\r\n    cardType: CardType;\r\n    studentName: string;\r\n    studentGroup: string;\r\n    registerClosed: boolean;\r\n    subgroupsITS: string;\r\n    disciplineLoad: string;\r\n    failure?: StudentFailure;\r\n    failureName?: string;\r\n\r\n    [props: string]: number | string | boolean | undefined;\r\n}\r\n\r\nexport interface ControlAction {\r\n    uuid: string;\r\n    uuidWithoutPrefix: string;\r\n    controlAction: string;\r\n}\r\n\r\ninterface RequestOptions {\r\n    method?: string;\r\n    body?: object | string;\r\n    json?: boolean;\r\n}\r\n\r\ninterface RequestHeaders {\r\n    'Content-Type'?: string;\r\n}\r\n\r\ninterface Paging<T> {\r\n    content: T[];\r\n    last: boolean;\r\n    totalPages: number;\r\n    totalElements: number;\r\n    size: number;\r\n    number: number;\r\n    sort: any;\r\n    first: boolean;\r\n    numberOfElements: number;\r\n}\r\n","import React from 'react';\r\nimport \"./styles.css\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Button, Container} from \"@material-ui/core\";\r\nimport BrsAuth, {LoginStatus} from \"../../apis/brsAuth\";\r\nimport BrsLoginForm, {Credentials} from \"./brsLoginForm\";\r\nimport googleAuth from \"../../apis/googleAuth\";\r\nimport GoogleLoginButton from \"./GoogleLoginButton\";\r\nimport CustomAlert from \"../CustomAlert\";\r\n\r\nexport default class LoginPage extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            brsLoading: true,\r\n            brsAuthorized: false,\r\n            googleAuthorized: false,\r\n            redirect: false,\r\n            submitLoading: false,\r\n            openAlert: false,\r\n            alertMessage: '',\r\n            alertType: 'error'\r\n        }\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.brsAuth.tryRestoreAsync();\r\n        googleAuth.init();\r\n\r\n        const brsAuthorized = this.props.brsAuth.checkAuth();\r\n        const googleAuthorized = googleAuth.checkAuthorized();\r\n        this.setState({brsLoading: false, brsAuthorized, googleAuthorized});\r\n    }\r\n\r\n    handleBrsSubmit = async (credentials: Credentials) => {\r\n        this.setState({submitLoading: true});\r\n\r\n        const loginStatus = await this.loginBrsAsync(credentials);\r\n\r\n        this.setState({submitLoading: false})\r\n\r\n        switch (loginStatus) {\r\n            case LoginStatus.Succeed:\r\n                this.setState({\r\n                    alertMessage: \"Авторизация прошла успешно\",\r\n                    openAlert: true,\r\n                    alertType: 'success',\r\n                    brsAuthorized: true\r\n                });\r\n                break;\r\n            case LoginStatus.Error:\r\n                this.setState({\r\n                    alertMessage: \"Что-то пошло не так :( Попробуйте позже\",\r\n                    openAlert: true,\r\n                    alertType: 'error'\r\n                });\r\n                break;\r\n            case LoginStatus.InvalidCredentials:\r\n                this.setState({\r\n                    alertMessage: \"Неверные логин, пароль или JSESSIONID\",\r\n                    openAlert: true,\r\n                    alertType: 'error'\r\n                });\r\n        }\r\n    }\r\n\r\n    loginBrsAsync = async (credentials: Credentials): Promise<LoginStatus> => {\r\n        if (credentials.sid) {\r\n            return await this.props.brsAuth.authBySidAsync(credentials.sid);\r\n        }\r\n        if (credentials.login && credentials.password) {\r\n            return await this.props.brsAuth.loginAsync(credentials.login, credentials.password);\r\n        }\r\n        return LoginStatus.InvalidCredentials;\r\n    }\r\n\r\n    handleCloseAlert = () => {\r\n        this.setState({openAlert: false});\r\n    }\r\n\r\n    handleGoogleSignedIn = () => {\r\n        this.setState({googleAuthorized: true});\r\n    }\r\n\r\n    handleGoogleLoginFailed = (error: any) => {\r\n        console.error(error);\r\n\r\n        this.setState({\r\n            openAlert: true,\r\n            alertType: 'error',\r\n            alertMessage: 'Не удалось подключить Ваш Google аккаунт :('\r\n        });\r\n    }\r\n\r\n    startWork = () => {\r\n        this.setState({redirect: true});\r\n    }\r\n\r\n    handleBrsLogout = () => {\r\n        this.props.brsAuth.logout();\r\n        this.setState({\r\n            brsAuthorized: false,\r\n            alertMessage: \"Вы вышли из аккаунта БРС\",\r\n            alertType: \"success\",\r\n            openAlert: true\r\n        });\r\n    }\r\n\r\n    handleGoogleLogout = async () => {\r\n        await googleAuth.logout();\r\n        this.setState({\r\n            googleAuthorized: false,\r\n            alertType: \"success\",\r\n            alertMessage: \"Вы вышли из аккаунта Google\",\r\n            openAlert: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                {this.state.redirect && <Redirect to=\"/work\"/>}\r\n                <Container component=\"main\" maxWidth=\"md\">\r\n                    <div style={{width: 700}}>\r\n                        <h1>Добро пожаловать в Расширения БРС</h1>\r\n                        <h3 className={\"block-header\"}>Как все работает</h3>\r\n                        <p>В Google&nbsp;Таблицах вы заполняете оценки за курс по некоторому шаблону.<br/>\r\n                            После этого импортируете Google Таблицу в сервис и выполняете пробный запуск выставления\r\n                            оценок,\r\n                            чтобы исключить ошибки.<br/>\r\n                            Наконец делаете запуск с реальным выставлением оценок.</p>\r\n                        <h3 className={\"block-header\"}>Правила хранения данных</h3>\r\n                        <p>Ваш логин и пароль передаются в БРС и нигде не сохраняются.<br/>\r\n                            Данные о доступных вам курсах сохраняются только в вашем браузере.</p>\r\n                    </div>\r\n                    <hr/>\r\n                    <Container maxWidth={\"xs\"}>\r\n                        <Container>\r\n                            <BrsLoginForm onSubmit={this.handleBrsSubmit}\r\n                                          loading={this.state.brsLoading}\r\n                                          signedIn={this.state.brsAuthorized}\r\n                                          onLogout={this.handleBrsLogout}\r\n                                          username={this.props.brsAuth.username}\r\n                                          submitting={this.state.submitLoading}/>\r\n                        </Container>\r\n                        <hr className={\"vertical-margin-medium\"}/>\r\n                        <Container>\r\n                            <GoogleLoginButton onSignedIn={this.handleGoogleSignedIn}\r\n                                               signedIn={this.state.googleAuthorized}\r\n                                               username={googleAuth.getUsername()}\r\n                                               onLogout={this.handleGoogleLogout}\r\n                                               onFailure={this.handleGoogleLoginFailed}/>\r\n                        </Container>\r\n                    </Container>\r\n                    <Container className=\"text-align-center vertical-margin-large\">\r\n                        <Button variant=\"contained\"\r\n                                onClick={this.startWork}\r\n                                disabled={!this.state.brsAuthorized || !this.state.googleAuthorized}\r\n                                color=\"secondary\">\r\n                            начать работу\r\n                        </Button>\r\n                    </Container>\r\n                    <CustomAlert open={this.state.openAlert}\r\n                                 message={this.state.alertMessage}\r\n                                 type={this.state.alertType}\r\n                                 onClose={this.handleCloseAlert}/>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface State {\r\n    brsLoading: boolean;\r\n    brsAuthorized: boolean;\r\n    googleAuthorized: boolean;\r\n    submitLoading: boolean;\r\n    redirect: boolean;\r\n    openAlert: boolean,\r\n    alertMessage: string,\r\n    alertType: \"error\" | \"success\";\r\n}\r\n\r\ninterface Props {\r\n    brsAuth: BrsAuth;\r\n}\r\n","import React from \"react\";\r\nimport Context from \"../../Context\";\r\nimport LoginPage from \"./index\";\r\nimport BrsAuth from \"../../apis/brsAuth\";\r\n\r\nexport default function () {\r\n    return (\r\n        <Context.Consumer>\r\n            {\r\n                context => <LoginPage brsAuth={(context as { brsAuth: BrsAuth }).brsAuth}/>\r\n            }\r\n        </Context.Consumer>\r\n    );\r\n}\r\n","export function getSpreadsheet(spreadsheetId: string): Spreadsheet {\r\n    // @ts-ignore\r\n    const sheets = gapi.client.sheets;\r\n\r\n    async function readAsync(range: string) {\r\n        const response = await sheets.spreadsheets.values.get({\r\n            spreadsheetId,\r\n            range,\r\n        });\r\n        return response.result;\r\n    }\r\n\r\n    function writeAsync(range: string, values: any[][], asEnteredByUser = false) {\r\n        const valueInputOption = asEnteredByUser ? \"USER_ENTERED\" : \"RAW\";\r\n        const requestBody = {\r\n            values,\r\n        };\r\n        return sheets.spreadsheets.values.update({\r\n            spreadsheetId,\r\n            range,\r\n            valueInputOption,\r\n            requestBody,\r\n        });\r\n    }\r\n\r\n    function appendAsync(\r\n        range: string,\r\n        values: any[][],\r\n        asEnteredByUser = false\r\n    ) {\r\n        const valueInputOption = asEnteredByUser ? \"USER_ENTERED\" : \"RAW\";\r\n        const requestBody = {\r\n            values,\r\n        };\r\n        return sheets.spreadsheets.values.append({\r\n            spreadsheetId,\r\n            range,\r\n            valueInputOption,\r\n            requestBody,\r\n        });\r\n    }\r\n\r\n    return {\r\n        readAsync,\r\n        writeAsync,\r\n        appendAsync,\r\n    };\r\n}\r\n\r\nexport async function getSpreadsheetProperties(spreadsheetId: string): Promise<SpreadsheetProperties[]> {\r\n    // @ts-ignore\r\n    const sheets = gapi.client.sheets;\r\n\r\n    const res = await sheets.spreadsheets.get({spreadsheetId});\r\n    const sheetProps = JSON.parse(res.body).sheets as [{ properties: SpreadsheetProperties }];\r\n    return sheetProps.map(s => s.properties)\r\n}\r\n\r\nexport interface Spreadsheet {\r\n    readAsync: (range: string) => Promise<ValueRange>;\r\n    writeAsync: (\r\n        range: string,\r\n        values: any[][],\r\n        asEnteredByUser?: boolean\r\n    ) => Promise<any>;\r\n    appendAsync: (\r\n        range: string,\r\n        values: any[][],\r\n        asEnteredByUser?: boolean\r\n    ) => Promise<any>;\r\n}\r\n\r\nexport interface ValueRange {\r\n    majorDimension?: string | null;\r\n    range?: string | null;\r\n    values?: any[][] | null;\r\n}\r\n\r\nexport interface SpreadsheetProperties {\r\n    sheetId: number;\r\n    title: string;\r\n}\r\n","export function fixSpaces(str: string) {\r\n    return str && str.replace(/[\\s]/g, ' ');\r\n}\r\n\r\nexport function normalizeString(str: string) {\r\n    return (\r\n        str &&\r\n        str\r\n            .toLowerCase()\r\n            .replace('ё', 'е')\r\n            .replace(/[^A-Za-zА-ЯЁа-яё0-9]/g, '')\r\n    );\r\n}\r\n\r\nexport function compareNormalized(s1: string, s2: string) {\r\n    return normalizeString(s1) === normalizeString(s2);\r\n}\r\n\r\nexport function parseAnyFloat(s: string) {\r\n    return parseFloat(s && s.replace(',', '.'));\r\n}\r\n\r\nexport function groupBy<TItem, TKey>(items: TItem[], key: keyof TItem) {\r\n    const reducer: { [group: string]: TItem[] } = {};\r\n    return items.reduce((reducer, item) => {\r\n        const itemKey = `${item[key]}`;\r\n        (reducer[itemKey] = reducer[itemKey] || []).push(item);\r\n        return reducer;\r\n    }, reducer);\r\n}\r\n","import {StudentFailure} from '../apis/brsApi';\r\nimport {compareNormalized} from './tools';\r\n\r\nconst failureMapping: { [key: string]: StudentFailure } = {\r\n    '-': StudentFailure.NoFailure,\r\n    'Не выбрана': StudentFailure.NotChosen,\r\n    'Не допущен (деканат)': StudentFailure.NotAllowedByDeansOffice,\r\n    'Не явился': StudentFailure.NotAppeared,\r\n    Неуважительная: StudentFailure.DisrespectfulReason,\r\n    Уважительная: StudentFailure.RespectfulReason,\r\n    'Не допущен': StudentFailure.NotAllowedByTeacher,\r\n    'Не должен сдавать': StudentFailure.ShouldNotPass,\r\n    'Академический отпуск': StudentFailure.AcademicLeave,\r\n    Выбыл: StudentFailure.DroppedOut,\r\n};\r\n\r\nexport function parseStudentFailure(input: string): StudentFailure | null {\r\n    if (input === null || input === undefined) {\r\n        return null;\r\n    }\r\n\r\n    for (let key of Object.keys(failureMapping)) {\r\n        if (compareNormalized(key, input)) {\r\n            return failureMapping[key];\r\n        }\r\n    }\r\n\r\n    return StudentFailure.NoFailure;\r\n}\r\n\r\nexport function formatStudentFailure(\r\n    input: StudentFailure | null | undefined\r\n): string | null {\r\n    if (input === null || input === undefined) {\r\n        return null;\r\n    }\r\n\r\n    for (let key of Object.keys(failureMapping)) {\r\n        if (failureMapping[key] === input) {\r\n            return key;\r\n        }\r\n    }\r\n\r\n    return '-';\r\n}\r\n","import {StudentFailure} from '../apis/brsApi';\r\nimport * as googleApi from '../apis/googleApi';\r\nimport {parseStudentFailure} from '../helpers/brsHelpers';\r\n\r\nexport interface ActualStudent {\r\n    fullName: string;\r\n    groupName: string;\r\n    id: string | null;\r\n    failure: StudentFailure | null;\r\n    properties: string[];\r\n}\r\n\r\nexport async function fromSpreadsheetAsync(\r\n    spreadsheetId: string,\r\n    readRange: string,\r\n    fullNameIndex: number = 0,\r\n    groupNameIndex: number = 1,\r\n    idIndex: number | null = null,\r\n    failureIndex: number | null = null\r\n) {\r\n    const sheet = googleApi.getSpreadsheet(spreadsheetId);\r\n\r\n    const rows = (await sheet.readAsync(readRange)).values || [];\r\n\r\n    const result: ActualStudent[] = [];\r\n    for (const row of rows) {\r\n        const fullName = row[fullNameIndex];\r\n        const groupName = row[groupNameIndex];\r\n        const id = idIndex !== null ? row[idIndex] : null;\r\n        const failure =\r\n            failureIndex !== null\r\n                ? parseStudentFailure(row[failureIndex])\r\n                : null;\r\n        if (fullName && groupName) {\r\n            result.push({\r\n                fullName,\r\n                groupName,\r\n                id: id,\r\n                failure: failure,\r\n                properties: row,\r\n            });\r\n        }\r\n    }\r\n    return result;\r\n}\r\n","import {Discipline, StudentFailure, TermType} from '../apis/brsApi';\r\nimport {ControlActionConfig} from '../marksActions/MarksManager';\r\nimport * as readStudents from './readStudentsAsync';\r\nimport {ActualStudent} from './readStudentsAsync';\r\nimport * as googleApi from '../apis/googleApi';\r\nimport {compareNormalized, normalizeString} from '../helpers/tools';\r\nimport {parseStudentFailure} from '../helpers/brsHelpers';\r\n\r\nexport default async function getSpreadsheetDataAsync(\r\n    spreadsheetId: string,\r\n    sheetName: string,): Promise<SpreadsheetData> {\r\n\r\n    const rows = await readRowsFromSpreadsheetAsync(spreadsheetId, sheetName);\r\n    const header = getHeader(rows);\r\n\r\n    const indices = buildIndicesBy(header);\r\n    const dataRange = buildDataRange(sheetName, indices);\r\n    const controlActionConfigs = buildControlActionConfig(header, indices);\r\n    const disciplineConfig = buildDisciplineConfig(\r\n        rows,\r\n        indices,\r\n        null\r\n    );\r\n\r\n    const actualStudents = await readStudents.fromSpreadsheetAsync(\r\n        spreadsheetId,\r\n        dataRange,\r\n        indices.fullNameColumn - indices.left,\r\n        indices.groupColumn - indices.left,\r\n        null,\r\n        indices.failureColumn - indices.left\r\n    );\r\n\r\n    return {\r\n        actualStudents,\r\n        disciplineConfig,\r\n        controlActionConfigs,\r\n    };\r\n}\r\n\r\nasync function readRowsFromSpreadsheetAsync(\r\n    spreadsheetId: string,\r\n    sheetName: string\r\n) {\r\n    const sheet = googleApi.getSpreadsheet(spreadsheetId);\r\n    const rows = (await sheet.readAsync(sheetName + '!A1:ZZ100'))\r\n        .values as string[][];\r\n    return rows || null;\r\n}\r\n\r\nfunction getHeader(rows: string[][]) {\r\n    const header = rows && rows[0];\r\n    if (!header) throw new Error(`Can't read header of spreadsheet`);\r\n    return header;\r\n}\r\n\r\nfunction buildIndicesBy(header: string[]): Indices {\r\n    const defaultGroupColumnName = 'Группа в БРС';\r\n    const defaultFullNameColumnName = 'Фамилия Имя в БРС';\r\n    const defaultFailureColumnName = 'Причина отсутствия';\r\n    const disciplineParameterKeyColumnPrefix = 'Названия параметров';\r\n    const disciplineParameterValueColumnPrefix = 'Значения параметров';\r\n\r\n    const normalizedHeader = header && header.map((s) => normalizeString(s));\r\n    const groupColumnIndex = normalizedHeader.indexOf(\r\n        normalizeString(defaultGroupColumnName)\r\n    );\r\n    const fullNameColumnIndex = normalizedHeader.indexOf(\r\n        normalizeString(defaultFullNameColumnName)\r\n    );\r\n    const failureColumnIndex = normalizedHeader.indexOf(\r\n        normalizeString(defaultFailureColumnName)\r\n    );\r\n    const disciplineParameterKeyColumnIndex = normalizedHeader.indexOf(\r\n        normalizeString(disciplineParameterKeyColumnPrefix)\r\n    );\r\n    const disciplineParameterValueColumnIndex = normalizedHeader.indexOf(\r\n        normalizeString(disciplineParameterValueColumnPrefix)\r\n    );\r\n\r\n    if (\r\n        failureColumnIndex < 0 ||\r\n        groupColumnIndex < 0 ||\r\n        fullNameColumnIndex < 0 ||\r\n        groupColumnIndex > failureColumnIndex ||\r\n        fullNameColumnIndex > failureColumnIndex ||\r\n        Math.abs(fullNameColumnIndex - groupColumnIndex) !== 1 ||\r\n        disciplineParameterKeyColumnIndex < 0 ||\r\n        disciplineParameterValueColumnIndex < 0 ||\r\n        disciplineParameterKeyColumnIndex <= failureColumnIndex ||\r\n        disciplineParameterValueColumnIndex <= failureColumnIndex ||\r\n        disciplineParameterValueColumnIndex !==\r\n        disciplineParameterKeyColumnIndex + 1\r\n    )\r\n        throw new Error(`Неправильный порядок столбцов`);\r\n    const leftIndex = Math.min(groupColumnIndex, fullNameColumnIndex);\r\n    const rightIndex = failureColumnIndex;\r\n\r\n    return {\r\n        groupColumn: groupColumnIndex,\r\n        fullNameColumn: fullNameColumnIndex,\r\n        failureColumn: failureColumnIndex,\r\n        disciplineKeyColumn: disciplineParameterKeyColumnIndex,\r\n        disciplineValueColumn: disciplineParameterValueColumnIndex,\r\n        left: leftIndex,\r\n        right: rightIndex,\r\n    };\r\n}\r\n\r\nfunction buildDataRange(sheetName: string, indices: Indices) {\r\n    const leftLetter = String.fromCharCode('A'.charCodeAt(0) + indices.left);\r\n    const rightLetter = String.fromCharCode('A'.charCodeAt(0) + indices.right);\r\n    return `${sheetName}!${leftLetter}2:${rightLetter}`;\r\n}\r\n\r\nfunction buildControlActionConfig(header: string[], indices: Indices) {\r\n    const controlActionConfigs: ControlActionConfig[] = [];\r\n    for (let index = indices.left; index <= indices.right; index++) {\r\n        if (\r\n            index === indices.groupColumn ||\r\n            index === indices.fullNameColumn ||\r\n            index === indices.failureColumn ||\r\n            !header[index]\r\n        ) {\r\n            continue;\r\n        }\r\n        controlActionConfigs.push({\r\n            controlActions: [header[index]],\r\n            propertyIndex: index - indices.left,\r\n        });\r\n    }\r\n\r\n    for (const config of controlActionConfigs) {\r\n        if (config.controlActions.length === 1) {\r\n            const sameColumns = controlActionConfigs.filter(\r\n                (c) =>\r\n                    c.controlActions.length === 1 &&\r\n                    compareNormalized(\r\n                        c.controlActions[0],\r\n                        config.controlActions[0]\r\n                    )\r\n            );\r\n            if (sameColumns.length > 1) {\r\n                config.matchCount = sameColumns.length;\r\n                for (\r\n                    let matchIndex = 0;\r\n                    matchIndex < sameColumns.length;\r\n                    matchIndex++\r\n                ) {\r\n                    sameColumns[matchIndex].matchIndex = matchIndex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return controlActionConfigs;\r\n}\r\n\r\nfunction buildDisciplineConfig(\r\n    rows: string[][],\r\n    indices: Indices,\r\n    isSuitableDiscipline: ((d: Discipline) => boolean) | null\r\n) {\r\n    const result: DisciplineConfig = {\r\n        name: '',\r\n        year: 0,\r\n        termType: TermType.Fall,\r\n        course: 1,\r\n        isModule: false,\r\n        defaultStudentFailure: StudentFailure.NoFailure,\r\n        isSuitableDiscipline: null,\r\n    };\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n        const key = rows[i][indices.disciplineKeyColumn]?.trim();\r\n        if (!key) {\r\n            break;\r\n        }\r\n        const value = rows[i][indices.disciplineValueColumn]?.trim();\r\n        addDisciplineConfigParameter(result, key, value);\r\n    }\r\n\r\n    result.isSuitableDiscipline = isSuitableDiscipline;\r\n    return result;\r\n}\r\n\r\nfunction addDisciplineConfigParameter(\r\n    config: DisciplineConfig,\r\n    key: string,\r\n    value: string\r\n) {\r\n    if (compareNormalized(key, 'Дисциплина')) {\r\n        if (value) {\r\n            config.name = value;\r\n        }\r\n    } else if (compareNormalized(key, 'ИТС')) {\r\n        if (value) {\r\n            config.isModule = value.toLowerCase() === 'да';\r\n        }\r\n    } else if (compareNormalized(key, 'Год')) {\r\n        if (value) {\r\n            config.year = parseInt(value.toLowerCase(), 10);\r\n        }\r\n    } else if (compareNormalized(key, 'Семестр')) {\r\n        if (value) {\r\n            if (value.toLowerCase() === 'осенний') {\r\n                config.termType = TermType.Fall;\r\n            } else if (value.toLowerCase() === 'весенний') {\r\n                config.termType = TermType.Spring;\r\n            }\r\n        }\r\n    } else if (compareNormalized(key, 'Курс')) {\r\n        if (value) {\r\n            const lowerValue = value.toLowerCase().trim();\r\n            if (lowerValue === 'все курсы') {\r\n                config.course = 0;\r\n            } else {\r\n                config.course = parseInt(value.toLowerCase(), 10);\r\n            }\r\n        }\r\n    } else if (compareNormalized(key, 'Причина отсутствия по умолчанию')) {\r\n        config.defaultStudentFailure =\r\n            parseStudentFailure(value) ?? StudentFailure.NoFailure;\r\n    }\r\n}\r\n\r\nexport interface SpreadsheetData {\r\n    actualStudents: ActualStudent[];\r\n    disciplineConfig: DisciplineConfig;\r\n    controlActionConfigs: ControlActionConfig[];\r\n}\r\n\r\nexport interface DisciplineConfig {\r\n    name: string;\r\n    year: number;\r\n    termType: number;\r\n    course: number;\r\n    isModule: boolean;\r\n    defaultStudentFailure: StudentFailure;\r\n    isSuitableDiscipline: ((d: Discipline) => boolean) | null;\r\n}\r\n\r\ninterface Indices {\r\n    groupColumn: number;\r\n    fullNameColumn: number;\r\n    failureColumn: number;\r\n    disciplineKeyColumn: number;\r\n    disciplineValueColumn: number;\r\n    left: number;\r\n    right: number;\r\n}\r\n","import React from 'react';\r\nimport \"./styles.css\"\r\nimport {Collapse, List, ListItem, ListItemIcon, ListItemText, ListSubheader} from '@material-ui/core';\r\nimport {ExpandLess, ExpandMore} from '@material-ui/icons';\r\n\r\nexport default function NestedList(props: NestedListProps) {\r\n    const {title, items, icons} = props;\r\n\r\n    const listSubheader = (\r\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\" hidden={!title}>\r\n            {title}\r\n        </ListSubheader>\r\n    );\r\n\r\n    return (\r\n        <List\r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            subheader={listSubheader}\r\n            className={\"nested-list primary\"}>\r\n            {\r\n                items.length ?\r\n                    ConstructItems(items, 0, icons) :\r\n                    <ListItem className={\"text-align-center\"}>\r\n                        <ListItemText primary=\"No items\"/>\r\n                    </ListItem>\r\n            }\r\n        </List>\r\n    );\r\n}\r\n\r\nfunction ConstructItems(items: INestedListItem[], level: number, icons?: (JSX.Element | null)[]) {\r\n    return items.map((item, index) => (\r\n        <NestedListItem key={index}\r\n                        item={item}\r\n                        icons={icons}\r\n                        level={level}/>\r\n    ));\r\n}\r\n\r\nfunction NestedListItem({item, level, icons}: NestedListItemProps) {\r\n    const {title, nestedItems, colored, collapsed} = item;\r\n\r\n    const [open, setOpen] = React.useState(!collapsed);\r\n\r\n    const hasSubItems = nestedItems && nestedItems.length > 0;\r\n\r\n    const color = colored && \"colored-back\";\r\n\r\n    const icon = icons && icons[level];\r\n    const IconPlace = icon && <ListItemIcon>{icon}</ListItemIcon>;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ListItem button\r\n                      onClick={() => setOpen(!open)}\r\n                      style={level ? {paddingLeft: 40 * level} : undefined}\r\n                      className={\"hover \" + color}>\r\n                {IconPlace}\r\n                <ListItemText primary={title}/>\r\n                {hasSubItems && (open ? <ExpandLess/> : <ExpandMore/>)}\r\n            </ListItem>\r\n            {\r\n                hasSubItems &&\r\n                <Collapse in={open} unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        {nestedItems && ConstructItems(nestedItems, level + 1, icons)}\r\n                    </List>\r\n                </Collapse>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport interface INestedListItem {\r\n    title: string;\r\n    colored?: boolean;\r\n    collapsed?: boolean;\r\n    nestedItems?: INestedListItem[];\r\n}\r\n\r\ninterface NestedListProps {\r\n    items: INestedListItem[];\r\n    title?: string;\r\n    icons?: (JSX.Element | null)[];\r\n}\r\n\r\ninterface NestedListItemProps {\r\n    item: INestedListItem;\r\n    level: number;\r\n    icons?: (JSX.Element | null)[];\r\n}\r\n","import BrsApi from '../apis/brsApi';\r\nimport {compareNormalized} from '../helpers/tools';\r\nimport {DisciplineConfig} from \"./getSpreadsheetDataAsync\";\r\n\r\nexport default async function getSuitableDisciplinesAsync(brsApi: BrsApi, disciplineConfig: DisciplineConfig) {\r\n    const allDisciplines = await brsApi.getDisciplineCachedAsync(\r\n        disciplineConfig.year,\r\n        disciplineConfig.termType,\r\n        disciplineConfig.course,\r\n        disciplineConfig.isModule\r\n    );\r\n\r\n    return allDisciplines.filter(\r\n        (d) =>\r\n            compareNormalized(d.discipline, disciplineConfig.name) &&\r\n            (!disciplineConfig.isSuitableDiscipline ||\r\n                disciplineConfig.isSuitableDiscipline(d))\r\n    );\r\n}\r\n","import {Button, Grid} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function ({enabled, onRunWorkSafe, onRunWorkUnsafe}: Props) {\r\n    return (\r\n        <Grid container justify=\"space-around\">\r\n            <Grid item>\r\n                <Button variant=\"contained\"\r\n                        disabled={!enabled}\r\n                        onClick={onRunWorkSafe}\r\n                        color=\"primary\">\r\n                    Попробуй сделать хорошо\r\n                </Button>\r\n            </Grid>\r\n            <Grid item>\r\n                <Button variant=\"contained\"\r\n                        disabled={!enabled}\r\n                        onClick={onRunWorkUnsafe}\r\n                        color=\"secondary\">\r\n                    Сделай хорошо\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\ninterface Props {\r\n    enabled: boolean;\r\n    onRunWorkSafe: () => void;\r\n    onRunWorkUnsafe: () => void;\r\n}\r\n","export function toShow(fio: string) {\r\n    return fio.replace('ё', 'е').replace(/[ ]+/, ' ');\r\n}\r\n\r\nexport function toKey(fio: string) {\r\n    return fio.toLowerCase().replace('ё', 'е').replace(/[ ]+/, ' ').trim();\r\n}\r\n","import BrsApi, {ControlAction, Discipline, StudentFailure, StudentMark} from '../apis/brsApi';\r\nimport {compareNormalized, groupBy, parseAnyFloat} from '../helpers/tools';\r\nimport * as fio from '../helpers/fio';\r\nimport {ActualStudent} from '../functions/readStudentsAsync';\r\nimport {formatStudentFailure} from '../helpers/brsHelpers';\r\nimport {SpreadsheetData} from \"../functions/getSpreadsheetDataAsync\";\r\nimport ReportBuilder from \"./ReportBuilder\";\r\n\r\nexport default class MarksManager {\r\n    private readonly brsApi: BrsApi;\r\n    private readonly save: boolean;\r\n    private cancelPending: boolean = false;\r\n\r\n    readonly reportBuilder: ReportBuilder;\r\n\r\n    constructor(brsApi: BrsApi, reportsStore: ReportBuilder, save: boolean) {\r\n        this.brsApi = brsApi;\r\n        this.reportBuilder = reportsStore;\r\n        this.save = save;\r\n    }\r\n\r\n    cancel() {\r\n        this.cancelPending = true;\r\n    }\r\n\r\n    async putMarksToBrsAsync(spreadsheetData: SpreadsheetData, suitableDisciplines: Discipline[]) {\r\n        const {\r\n            actualStudents,\r\n            disciplineConfig,\r\n            controlActionConfigs,\r\n        } = spreadsheetData;\r\n\r\n        try {\r\n            for (const discipline of suitableDisciplines) {\r\n                await this.putMarksForDisciplineAsync(\r\n                    discipline,\r\n                    actualStudents.filter(s => compareNormalized(s.groupName, discipline.group)),\r\n                    disciplineConfig.defaultStudentFailure,\r\n                    controlActionConfigs\r\n                );\r\n\r\n                if (this.cancelPending) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.reportBuilder.finishReport()\r\n\r\n            return null;\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    async putMarksForDisciplineAsync(\r\n        discipline: Discipline,\r\n        actualStudents: ActualStudent[],\r\n        defaultStudentFailure: StudentFailure,\r\n        controlActionConfigs: ControlActionConfig[]\r\n    ) {\r\n        if (actualStudents.length === 0) return;\r\n        this.reportBuilder.newReport(discipline.group);\r\n\r\n        const controlActions = await this.brsApi.getAllControlActionsCachedAsync(discipline);\r\n        if (!this.checkControlActionsConfiguration(controlActions, controlActionConfigs))\r\n            return;\r\n\r\n        const brsStudents = await this.brsApi.getAllStudentMarksAsync(discipline);\r\n        const {\r\n            mergedStudents,\r\n            skippedActualStudents,\r\n            skippedBrsStudents,\r\n        } = this.mergeStudents(actualStudents, brsStudents);\r\n\r\n        this.logMergedStudents(\r\n            mergedStudents,\r\n            skippedActualStudents,\r\n            skippedBrsStudents\r\n        );\r\n\r\n        await this.putMarksForStudentsAsync(\r\n            discipline,\r\n            mergedStudents,\r\n            controlActionConfigs,\r\n            controlActions\r\n        );\r\n\r\n        await this.updateFailuresForSkippedStudentsAsync(\r\n            skippedBrsStudents,\r\n            discipline,\r\n            defaultStudentFailure\r\n        );\r\n\r\n        if (this.save) {\r\n            await this.brsApi.updateAllMarksAsync(discipline);\r\n        }\r\n\r\n    }\r\n\r\n    checkControlActionsConfiguration(\r\n        controlActions: ControlAction[],\r\n        controlActionConfigs: ControlActionConfig[]\r\n    ) {\r\n        for (const config of controlActionConfigs) {\r\n            if (!this.getSuitableControlAction(config, controlActions)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async putMarksForStudentsAsync(\r\n        discipline: Discipline,\r\n        students: MergedStudent[],\r\n        controlActionConfigs: ControlActionConfig[],\r\n        controlActions: ControlAction[]\r\n    ) {\r\n        const ratingResults = await Promise.all(students.map(async student => {\r\n            return await this.putMarksForStudentAsync(\r\n                discipline,\r\n                student,\r\n                controlActionConfigs,\r\n                controlActions\r\n            );\r\n        }));\r\n\r\n        const groupedResults = Object.entries(groupBy(ratingResults, \"status\"))\r\n            .map(([status, rawStudents]) => ({\r\n                title: status,\r\n                students: rawStudents.map(s => s.infoString)\r\n            }));\r\n\r\n        this.reportBuilder.currentReport.marks.push(...groupedResults);\r\n    }\r\n\r\n    async putMarksForStudentAsync(\r\n        discipline: Discipline,\r\n        student: MergedStudent,\r\n        controlActionConfigs: ControlActionConfig[],\r\n        controlActions: ControlAction[]\r\n    ) {\r\n        let updated = 0;\r\n        let failed = 0;\r\n\r\n        const marks = [];\r\n        for (const config of controlActionConfigs) {\r\n            const controlAction = this.getSuitableControlAction(\r\n                config,\r\n                controlActions\r\n            );\r\n            if (!controlAction) {\r\n                throw new Error();\r\n            }\r\n\r\n            const brsMark = parseAnyFloat(\r\n                student.brs[controlAction.uuid] as string\r\n            );\r\n            const actualMark = parseAnyFloat(\r\n                student.actual.properties[config.propertyIndex]\r\n            );\r\n\r\n            if (actualMark === brsMark || actualMark === 0) {\r\n                marks.push(\r\n                    `    ${actualMark} `.substr(`${actualMark}`.length - 1)\r\n                );\r\n                continue;\r\n            } else {\r\n                marks.push(\r\n                    `    ${actualMark}!`.substr(`${actualMark}`.length - 1)\r\n                );\r\n            }\r\n\r\n            try {\r\n                if (this.save) {\r\n                    await this.brsApi.putStudentMarkAsync(\r\n                        student.brs.studentUuid,\r\n                        controlAction.uuidWithoutPrefix,\r\n                        actualMark,\r\n                        discipline.groupHistoryId,\r\n                        student.brs.cardType,\r\n                        student.brs.disciplineLoad\r\n                    );\r\n                }\r\n                updated++;\r\n            } catch (error) {\r\n                failed++;\r\n            }\r\n        }\r\n\r\n        const brsFailureStatus =\r\n            (student.brs.failure as StudentFailure) ?? StudentFailure.NoFailure;\r\n        const actualFailure =\r\n            student.actual.failure ?? StudentFailure.NoFailure;\r\n        let failureStatus: string;\r\n        if (actualFailure === brsFailureStatus) {\r\n            failureStatus = `${formatStudentFailure(actualFailure)}`;\r\n        } else {\r\n            failureStatus = `${formatStudentFailure(actualFailure)}!`;\r\n            try {\r\n                if (this.save) {\r\n                    await this.brsApi.putStudentFailureAsync(\r\n                        student.brs.studentUuid,\r\n                        discipline,\r\n                        actualFailure\r\n                    );\r\n                }\r\n                updated++;\r\n            } catch (error) {\r\n                failed++;\r\n            }\r\n        }\r\n\r\n        const status = failed > 0 ? 'FAILED' : updated > 0 ? 'UPDATED' : 'SKIPPED';\r\n        const studentName = (student.actual.fullName).substr(0, 30);\r\n        let infoString = `${studentName}, баллы: ${marks.join(' ')}`;\r\n        if (failureStatus && failureStatus != '-')\r\n            infoString += `, ${failureStatus}`;\r\n        return {status, infoString};\r\n    }\r\n\r\n    getSuitableControlAction(config: ControlActionConfig, controlActions: ControlAction[]) {\r\n        const suitableControlActions = controlActions.filter((a) =>\r\n            config.controlActions.some((b) => compareNormalized(a.controlAction, b)));\r\n\r\n        const errorMessages = [];\r\n\r\n        if (suitableControlActions.length === 0) {\r\n            errorMessages.push(`Все \"${config.controlActions.join(', ')}\" не найдены `);\r\n            errorMessages.push(`Найденные контрольные мероприятия: ${controlActions\r\n                .map((a) => a.controlAction)\r\n                .join(', ')}`);\r\n\r\n            this.reportBuilder.onInvalidConfiguration(errorMessages);\r\n\r\n            return null;\r\n        }\r\n\r\n        if (\r\n            config.matchIndex !== undefined ||\r\n            config.matchCount !== undefined\r\n        ) {\r\n            if (\r\n                config.matchIndex === undefined ||\r\n                config.matchCount === undefined ||\r\n                suitableControlActions.length !== config.matchCount ||\r\n                config.matchIndex >= config.matchCount\r\n            ) {\r\n                errorMessages.push(`Неверная конфигурация ${config.controlActions.join(', ')}`);\r\n                errorMessages.push(`Нет соответствий: ${config.matchIndex}/${config.matchCount} \r\n                                    и ${suitableControlActions.length}`);\r\n\r\n                this.reportBuilder.onInvalidConfiguration(errorMessages);\r\n\r\n                return null;\r\n            }\r\n            return suitableControlActions[config.matchIndex];\r\n        }\r\n\r\n        if (suitableControlActions.length > 1) {\r\n            errorMessages.push(`Несколько контрольных мероприятий найдены для ${config.controlActions.join(', ')}`);\r\n            errorMessages.push(`Найденные контрольные мероприятия: ${suitableControlActions\r\n                .map((a) => a.controlAction)\r\n                .join(', ')}`);\r\n\r\n            this.reportBuilder.onInvalidConfiguration(errorMessages);\r\n\r\n            return null;\r\n        }\r\n\r\n        return suitableControlActions[0];\r\n    }\r\n\r\n    async updateFailuresForSkippedStudentsAsync(\r\n        students: StudentMark[],\r\n        discipline: Discipline,\r\n        defaultStudentFailure: StudentFailure\r\n    ) {\r\n        const ratingResults = await Promise.all(students.map(student =>\r\n            this.updateFailureForStudent(\r\n                student,\r\n                discipline,\r\n                defaultStudentFailure\r\n            )));\r\n\r\n        if (ratingResults.length > 0) {\r\n            const groupedResults = Object.entries(groupBy(ratingResults, \"status\"))\r\n                .map(([status, rawStudents]) => ({\r\n                    title: `${status} = ${rawStudents.length}`,\r\n                    students: rawStudents.map(s => s.infoString)\r\n                }));\r\n\r\n            this.reportBuilder.currentReport.marks.push(...groupedResults);\r\n        }\r\n    }\r\n\r\n    async updateFailureForStudent(\r\n        student: StudentMark,\r\n        discipline: Discipline,\r\n        defaultStudentFailure: StudentFailure\r\n    ) {\r\n        let status: string;\r\n        const brsFailureStatus = student.failure\r\n            ? (student.failure as StudentFailure)\r\n            : StudentFailure.NoFailure;\r\n        const actualFailure = defaultStudentFailure;\r\n        if (actualFailure === brsFailureStatus) {\r\n            status = 'SKIPPED';\r\n        } else {\r\n            try {\r\n                if (this.save) {\r\n                    await this.brsApi.putStudentFailureAsync(\r\n                        student.studentUuid,\r\n                        discipline,\r\n                        actualFailure\r\n                    );\r\n                }\r\n                status = 'UPDATED';\r\n            } catch (error) {\r\n                status = 'FAILED';\r\n            }\r\n        }\r\n\r\n        const studentName = (student.studentFio).substr(0, 30);\r\n        const description =\r\n            status !== 'SKIPPED'\r\n                ? `${formatStudentFailure(\r\n                actualFailure\r\n                )} from ${formatStudentFailure(brsFailureStatus)}`\r\n                : formatStudentFailure(actualFailure);\r\n\r\n        const infoString = `${studentName} ${description}`;\r\n\r\n        return {status, infoString};\r\n    }\r\n\r\n    mergeStudents(actualStudents: ActualStudent[], brsStudents: StudentMark[]) {\r\n        const activeBrsStudents = brsStudents.filter(isStudentActive);\r\n\r\n        const mergedStudents: MergedStudent[] = [];\r\n        const skippedActualStudents: ActualStudent[] = [];\r\n        for (const actualStudent of actualStudents) {\r\n            const suitableStudents = activeBrsStudents.filter((brsStudent) =>\r\n                areStudentsLike(brsStudent, actualStudent)\r\n            );\r\n            if (suitableStudents.length === 1) {\r\n                mergedStudents.push({\r\n                    actual: actualStudent,\r\n                    brs: suitableStudents[0],\r\n                });\r\n            } else {\r\n                skippedActualStudents.push(actualStudent);\r\n            }\r\n        }\r\n\r\n        const skippedBrsStudents: StudentMark[] = [];\r\n        for (const brsStudent of activeBrsStudents) {\r\n            if (\r\n                !mergedStudents.some(\r\n                    (ms) => ms.brs.studentUuid === brsStudent.studentUuid\r\n                )\r\n            ) {\r\n                skippedBrsStudents.push(brsStudent);\r\n            }\r\n        }\r\n\r\n        return {mergedStudents, skippedActualStudents, skippedBrsStudents};\r\n    }\r\n\r\n    logMergedStudents(\r\n        mergedStudents: MergedStudent[],\r\n        skippedActualStudents: ActualStudent[],\r\n        skippedBrsStudents: StudentMark[]\r\n    ) {\r\n        const report = this.reportBuilder.currentReport;\r\n\r\n        report.merge.succeed = mergedStudents.length;\r\n\r\n        if (skippedActualStudents.length > 0)\r\n            report.merge.failedActual = skippedActualStudents.map(s => '- ' + s.fullName);\r\n\r\n        if (skippedBrsStudents.length > 0) {\r\n            report.merge.failedBrs = skippedBrsStudents.map(s => '- ' + s.studentFio);\r\n        }\r\n    }\r\n}\r\n\r\nfunction isStudentActive(brsStudent: StudentMark) {\r\n    return (\r\n        brsStudent.studentStatus !== 'Переведен' &&\r\n        brsStudent.studentStatus !== 'Отчислен'\r\n    );\r\n}\r\n\r\nfunction areStudentsLike(\r\n    brsStudent: StudentMark,\r\n    actualStudent: ActualStudent\r\n) {\r\n    const brsFullName = fio.toKey(brsStudent.studentFio);\r\n    const actualFullName = fio.toKey(actualStudent.fullName);\r\n    return brsFullName.startsWith(actualFullName);\r\n}\r\n\r\nexport interface ControlActionConfig {\r\n    controlActions: string[];\r\n    matchIndex?: number;\r\n    matchCount?: number;\r\n    propertyIndex: number;\r\n}\r\n\r\ninterface MergedStudent {\r\n    actual: ActualStudent;\r\n    brs: StudentMark;\r\n}\r\n","export default class ReportBuilder {\r\n    private _currentReport: Report | null = null;\r\n    private readonly onReportFinished: (report: Report) => void;\r\n\r\n    readonly onInvalidConfiguration: (errorMessages: string[]) => void;\r\n\r\n    constructor(\r\n        onReportFinished: (report: Report) => void,\r\n        onInvalidConfiguration: (errorMessages: string[]) => void) {\r\n        this.onReportFinished = onReportFinished;\r\n        this.onInvalidConfiguration = onInvalidConfiguration;\r\n    }\r\n\r\n    get currentReport() {\r\n        if (!this._currentReport)\r\n            throw new Error(\"New report has not created\");\r\n        return this._currentReport;\r\n    }\r\n\r\n    newReport(group: string) {\r\n        this.finishReport();\r\n        this._currentReport = {\r\n            group,\r\n            merge: {succeed: 0},\r\n            marks: []\r\n        };\r\n    }\r\n\r\n    finishReport() {\r\n        if (this._currentReport)\r\n            this.onReportFinished(this._currentReport);\r\n        this._currentReport = null;\r\n    }\r\n}\r\n\r\nexport interface Report {\r\n    group: string;\r\n    merge: {\r\n        succeed: number;\r\n        failedActual?: string[];\r\n        failedBrs?: string[];\r\n    }\r\n    marks: Section[];\r\n}\r\n\r\nexport interface Section {\r\n    title: string;\r\n    students?: string[];\r\n}\r\n","import React from 'react';\r\nimport \"./styles.css\"\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Dialog} from \"@material-ui/core\";\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport SubmitWithLoading from \"../../../submitWithLoading\";\r\nimport MarksManager from \"../../../../marksActions/MarksManager\";\r\nimport BrsApi, {Discipline} from \"../../../../apis/brsApi\";\r\nimport {SpreadsheetData} from \"../../../../functions/getSpreadsheetDataAsync\";\r\nimport NestedList, {INestedListItem} from \"../../../nestedList\";\r\nimport ReportBuilder, {Report} from \"../../../../marksActions/ReportBuilder\";\r\n\r\nconst DialogContent = withStyles(() => ({\r\n    root: {\r\n        padding: 0,\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(() => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around'\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nexport default class WorkerDialog extends React.Component<Props, State> {\r\n    marksManager: MarksManager;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        const {brsApi, save} = props;\r\n        const reportsStore = new ReportBuilder(this.logMessage, this.logConfigurationErrors);\r\n        this.marksManager = new MarksManager(brsApi, reportsStore, save);\r\n\r\n        this.state = {\r\n            okLoading: true,\r\n            cancelPending: false,\r\n            logItems: [],\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startWork();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.marksManager.cancel();\r\n    }\r\n\r\n    logConfigurationErrors(errorMessages: string[]) {\r\n        const logItems = errorMessages.map(title => ({title, colored: true}));\r\n        this.setState({logItems});\r\n    }\r\n\r\n    logMessage = async (report: Report) => {\r\n        const logItems = await this.reportToNestedListItems(report);\r\n        this.setState({logItems});\r\n    }\r\n\r\n    reportToNestedListItems(report: Report): Promise<INestedListItem[]> {\r\n        const logItems = this.state.logItems;\r\n        return new Promise(resolve => {\r\n            let title = `Группа ${report.group}`\r\n            const nestedItems: INestedListItem[] = [];\r\n            const mainItem: INestedListItem = {title, collapsed: true, nestedItems};\r\n\r\n            let hasErrors = false;\r\n\r\n            const merge = report.merge;\r\n            let mergeResultsTitle = `Сопоставление = ${merge.succeed}`;\r\n            mergeResultsTitle += `, ${merge.failedActual?.length || 0}`;\r\n            mergeResultsTitle += `, ${merge.failedBrs?.length || 0}`;\r\n\r\n            const mergeInfoItem: INestedListItem = {\r\n                title: mergeResultsTitle,\r\n                collapsed: true,\r\n                nestedItems: [{title: `Успешно сопоставлено = ${merge.succeed}`}]\r\n            };\r\n            nestedItems.push(mergeInfoItem);\r\n\r\n            if (!!merge.failedActual) {\r\n                hasErrors = true;\r\n                title = `Не удалось сопоставить ${merge.failedActual.length} студентов из Google Таблицы`;\r\n                mergeInfoItem.nestedItems?.push({\r\n                    title,\r\n                    colored: true,\r\n                    collapsed: true,\r\n                    nestedItems: merge.failedActual.map(s => ({title: s}))\r\n                });\r\n            }\r\n            if (!!merge.failedBrs) {\r\n                hasErrors = true;\r\n                title = `Не удалось сопоставить ${merge.failedBrs.length} студентов из БРС`;\r\n                mergeInfoItem.nestedItems?.push({\r\n                    title,\r\n                    colored: true,\r\n                    collapsed: true,\r\n                    nestedItems: merge.failedBrs.map(s => ({title: s}))\r\n                });\r\n            }\r\n\r\n            const marks = report.marks;\r\n            const marksItem: INestedListItem = {title: \"Выставление баллов\", collapsed: true};\r\n            marksItem.nestedItems = marks.map(({title, students}) => ({\r\n                title: this.translateStatus(title) + (students ? ` = ${students.length}` : ''),\r\n                nestedItems: students?.map(s => ({title: s})),\r\n                collapsed: true\r\n            }));\r\n            nestedItems.push(marksItem);\r\n\r\n            if (hasErrors) {\r\n                mainItem.colored = true;\r\n                mergeInfoItem.colored = true;\r\n            }\r\n            logItems.push(mainItem);\r\n\r\n            resolve(logItems);\r\n        });\r\n    }\r\n\r\n    translateStatus(status: string) {\r\n        return status\r\n            .replace(\"SKIPPED\", \"Пропущено\")\r\n            .replace(\"UPDATED\", \"Обновлено\")\r\n            .replace(\"FAILED\", \"Ошибки\");\r\n    }\r\n\r\n    startWork = async () => {\r\n        const {spreadsheetData, suitableDisciplines} = this.props.marksData;\r\n        const result = await this.marksManager.putMarksToBrsAsync(spreadsheetData, suitableDisciplines);\r\n\r\n        if (result)\r\n            this.props.onError(result);\r\n\r\n        this.setState({\r\n            cancelPending: false,\r\n            okLoading: false,\r\n        });\r\n    }\r\n\r\n    cancelWork = () => {\r\n        this.setState({cancelPending: true});\r\n        this.marksManager.cancel();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Dialog open={true} maxWidth=\"md\" fullWidth className=\"worker-dialog\">\r\n                    <MuiDialogTitle>Журнал действий</MuiDialogTitle>\r\n                    <DialogContent dividers>\r\n                        <NestedList items={this.state.logItems}/>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <SubmitWithLoading loading={this.state.okLoading}\r\n                                           onClick={this.props.onClosed}\r\n                                           title=\"ок\"/>\r\n                        <SubmitWithLoading loading={this.state.cancelPending}\r\n                                           disabled={!this.state.okLoading}\r\n                                           onClick={this.cancelWork}\r\n                                           title=\"отмена\"/>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface MarksData {\r\n    spreadsheetData: SpreadsheetData;\r\n    suitableDisciplines: Discipline[];\r\n}\r\n\r\ninterface Props {\r\n    marksData: MarksData;\r\n    brsApi: BrsApi;\r\n    save: boolean;\r\n    onClosed: () => void;\r\n    onError: (errorMessage: string) => void;\r\n}\r\n\r\ninterface State {\r\n    okLoading: boolean;\r\n    cancelPending: boolean;\r\n    logItems: INestedListItem[];\r\n}\r\n","import {TextField} from \"@material-ui/core\";\r\nimport SubmitWithLoading from \"../../submitWithLoading\";\r\nimport React, {FormEvent, useState} from \"react\";\r\n\r\nconst tablePattern = \"https://docs.google.com/spreadsheets/d/1Owzl3JfmFASIdC7ZMMw-0kkA3pwFSab1QdVO5dhZoxY/edit#gid=675912523\";\r\nconst tablePatternUrl = \"https://docs.google.com/spreadsheets/d/sjwa1/edit#gid=0\"\r\n\r\nexport default function GoogleTableFetchForm({loading, onSubmit}: Props) {\r\n    const [tableUrl, setTableUrl] = useState(\"\");\r\n    const [urlError, setUrlError] = useState(null as null | string);\r\n\r\n    const handleUrlChanged = (event: React.ChangeEvent<{ value: string }>) => {\r\n        const target = event.target;\r\n        if (urlError)\r\n            setUrlError(null);\r\n        setTableUrl(target.value);\r\n    }\r\n\r\n    const handleSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        const regExp = /d\\/(?<spreadsheetId>[a-zA-Z0-9-_]+)\\/edit(#gid=(?<sheetId>[0-9]+))?/;\r\n        const spreadsheetInfo = tableUrl.match(regExp);\r\n\r\n        if (!spreadsheetInfo?.groups || !spreadsheetInfo.groups.spreadsheetId) {\r\n            setUrlError(\"Неверный url-адрес.\");\r\n            return null;\r\n        }\r\n\r\n        const spreadsheetId = spreadsheetInfo.groups.spreadsheetId;\r\n        const maybeSheetId = spreadsheetInfo.groups.sheetId || null;\r\n\r\n        onSubmit(spreadsheetId, maybeSheetId);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={'vertical-margin-min'}>\r\n            <TextField name=\"table-url\"\r\n                       label={\"Ссылка вида \" + tablePatternUrl}\r\n                       type=\"text\"\r\n                       className={'tableUrl'}\r\n                       value={tableUrl}\r\n                       onChange={handleUrlChanged}\r\n                       error={!!urlError}\r\n                       helperText={urlError}\r\n                       required/>\r\n            <SubmitWithLoading title=\"загрузить\"\r\n                               loading={loading}\r\n                               className={'submit'}/>\r\n            <a href={tablePattern}\r\n               target={\"_blank\"}\r\n               className={\"button-link\"}>Пример таблицы для экспорта в БРС</a>\r\n        </form>\r\n    );\r\n}\r\n\r\ninterface Props {\r\n    loading: boolean;\r\n    onSubmit: (spreadsheetId: string, sheetId: string | null) => void;\r\n}\r\n","import React, {memo} from \"react\";\r\nimport getSpreadsheetDataAsync, {DisciplineConfig, SpreadsheetData} from \"../../functions/getSpreadsheetDataAsync\";\r\nimport NestedList, {INestedListItem} from \"../nestedList\";\r\nimport {Collapse, Container} from \"@material-ui/core\";\r\nimport {getSpreadsheetProperties} from \"../../apis/googleApi\";\r\nimport getSuitableDisciplinesAsync from \"../../functions/getSuitableDisciplinesAsync\";\r\nimport BrsApi, {Discipline} from \"../../apis/brsApi\";\r\nimport * as cache from \"../../helpers/cache\"\r\nimport {StorageType} from \"../../helpers/cache\"\r\nimport './styles.css';\r\nimport tryInvoke from \"../../helpers/tryInvoke\";\r\nimport RunWorkerButtons from \"../workPage/worker/RunWorkerButtons\";\r\nimport WorkerDialog, {MarksData} from \"../workPage/worker/workerDialog\";\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport {ViewModule} from \"@material-ui/icons\";\r\nimport GoogleTableFetchForm from \"./googleTableFetchForm\";\r\n\r\nclass GoogleTableFetch extends React.Component<Props, State> {\r\n    marksData: MarksData = {} as any;\r\n    workerSaveMode: boolean = false;\r\n    spreadsheetId: string = '';\r\n    sheetId: string | null = null;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tableUrl: '',\r\n            loading: false,\r\n            showDisciplines: false,\r\n            tableUrlError: {error: false, message: ''},\r\n            disciplines: [],\r\n            disciplinesMissed: false,\r\n            showWorkerButtons: false,\r\n            runWorker: false\r\n        };\r\n\r\n    }\r\n\r\n    loadDisciplines = async (spreadsheetId: string, sheetId: string | null) => {\r\n        this.spreadsheetId = spreadsheetId;\r\n        this.sheetId = sheetId;\r\n\r\n        this.setState({loading: true});\r\n\r\n        const spreadsheetData = await this.getActualSpreadsheetDataAsync(spreadsheetId, sheetId);\r\n        if (!spreadsheetData)\r\n            return;\r\n\r\n        const availableDisciplines = await this.getAvailableDisciplinesAsync(spreadsheetData.disciplineConfig);\r\n        if (!availableDisciplines)\r\n            return;\r\n\r\n        const disciplinesInfo = this.disciplinesToListItems(availableDisciplines, spreadsheetData);\r\n\r\n        this.marksData.spreadsheetData = spreadsheetData;\r\n        this.marksData.suitableDisciplines = availableDisciplines;\r\n\r\n        this.setState({\r\n            loading: false,\r\n            disciplines: disciplinesInfo.disciplines,\r\n            showDisciplines: true,\r\n            disciplinesMissed: disciplinesInfo.missed,\r\n            showWorkerButtons: !disciplinesInfo.missed\r\n        });\r\n    }\r\n\r\n    disciplinesToListItems(availableDisciplines: Discipline[], spreadsheetData: SpreadsheetData)\r\n        : { missed: boolean, disciplines: INestedListItem[] } {\r\n\r\n        const actualGroups = new Set(spreadsheetData.actualStudents.map(s => s.groupName));\r\n        const availableGroups = new Set(availableDisciplines.map(s => s.group));\r\n\r\n        let missedCount = 0;\r\n        const nestedItems: INestedListItem[] = Array.from(actualGroups)\r\n            .map(group => {\r\n                const groupMissed = !availableGroups.has(group);\r\n                if (groupMissed)\r\n                    missedCount++;\r\n                return {title: group, colored: groupMissed};\r\n            });\r\n\r\n        return {\r\n            missed: missedCount == actualGroups.size,\r\n            disciplines: [{\r\n                title: spreadsheetData.disciplineConfig.name,\r\n                nestedItems\r\n            }]\r\n        };\r\n    }\r\n\r\n    async getAvailableDisciplinesAsync(disciplineConfig: DisciplineConfig) {\r\n        return getSuitableDisciplinesAsync(this.props.brsApi, disciplineConfig)\r\n            .then(x => x, error => {\r\n                this.setState({loading: false})\r\n                this.props.onError(error)\r\n            });\r\n    }\r\n\r\n    async getActualSpreadsheetDataAsync(spreadsheetId: string, sheetId: string | null) {\r\n        const sheetName = await this.getSheetName(spreadsheetId, sheetId);\r\n        if (!sheetName) {\r\n            this.setState({loading: false});\r\n            return null;\r\n        }\r\n\r\n        let spreadsheetData: SpreadsheetData;\r\n        try {\r\n            spreadsheetData = await getSpreadsheetDataAsync(spreadsheetId, sheetName);\r\n        } catch (e) {\r\n            this.setState({loading: false})\r\n            this.props.onError(e.message || JSON.stringify(e));\r\n            return null;\r\n        }\r\n\r\n        return spreadsheetData;\r\n    }\r\n\r\n    async getSheetName(spreadsheetId: string, sheetId: string | null): Promise<string | null> {\r\n        try {\r\n            const spreadsheetProperties = await getSpreadsheetProperties(spreadsheetId);\r\n            const maybeSheet = sheetId\r\n                ? spreadsheetProperties.filter(s => s.sheetId.toString() === sheetId)[0]\r\n                : spreadsheetProperties[0];\r\n            if (!maybeSheet) {\r\n                this.props.onError('Таблица не найдена');\r\n                return null;\r\n            }\r\n            return maybeSheet.title;\r\n        } catch (e) {\r\n            this.props.onError(e.message || JSON.stringify(e));\r\n            return null;\r\n        }\r\n    }\r\n\r\n    updateCachedDisciplines = (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n        event.preventDefault();\r\n        this.setState({showDisciplines: false});\r\n\r\n        const userCacheName = tryInvoke(() => this.props.brsApi.brsAuth.cacheName, this.props.onError);\r\n        if (!userCacheName)\r\n            return;\r\n\r\n        const disciplineConfig = this.marksData.spreadsheetData?.disciplineConfig;\r\n        if (!disciplineConfig)\r\n            return;\r\n\r\n        const cacheName = cache.buildCacheName(userCacheName, \"getDiscipline\", disciplineConfig);\r\n        cache.clear(cacheName, StorageType.Local);\r\n\r\n        this.loadDisciplines(this.spreadsheetId, this.sheetId);\r\n    }\r\n\r\n    runWork = (save: boolean) => {\r\n        this.workerSaveMode = save;\r\n        this.setState({runWorker: true});\r\n    }\r\n\r\n    handleRunWorkSafe = () => this.runWork(false)\r\n\r\n    handleRunWorkUnsafe = () => this.runWork(true)\r\n\r\n    handleWorkerClosed = () => this.setState({runWorker: false})\r\n\r\n    render() {\r\n        return (\r\n            <span className={'spreadsheet-fetch'}>\r\n                <h3 className={'vertical-margin-min'}>Вставьте ссылку на лист Google Таблицы с оценками</h3>\r\n                <GoogleTableFetchForm loading={this.state.loading} onSubmit={this.loadDisciplines}/>\r\n\r\n                <Collapse in={this.state.showDisciplines} className={\"vertical-margin-min\"}>\r\n                    <h3>Загруженная дисциплина из Google Таблицы</h3>\r\n                    <p>Группы, к которым у вас нет доступа в БРС, <b className={\"colored-text\"}> подсвечены</b></p>\r\n\r\n                    <NestedList items={this.state.disciplines} icons={[<ViewModule/>, <GroupIcon/>]}/>\r\n\r\n                    {this.state.disciplinesMissed ?\r\n                        <React.Fragment>\r\n                            <p>У вас нет доступа ни к одной из перечисленных групп в БРС</p>\r\n                            <span>Возможные действия:</span>\r\n                            <ol className={\"no-margin\"}>\r\n                                <li>Убедитесь, что название дисциплины в БРС и в Google Таблицах совпадает</li>\r\n                                <li>Запросите доступ на дисциплину в БРС</li>\r\n                                <li><a className={\"button-link\"}\r\n                                       onClick={this.updateCachedDisciplines}>Обновите кэш групп</a></li>\r\n                            </ol>\r\n                        </React.Fragment> :\r\n                        <React.Fragment>\r\n                            <p>Если вам доступны не все группы, которые вам доступны в БРС, то <a\r\n                                className={\"button-link\"}\r\n                                onClick={this.updateCachedDisciplines}>обновите кэш групп</a>\r\n                            </p>\r\n                            <Container className={\"vertical-margin-medium\"}>\r\n                                <RunWorkerButtons enabled={this.state.showWorkerButtons}\r\n                                                  onRunWorkSafe={this.handleRunWorkSafe}\r\n                                                  onRunWorkUnsafe={this.handleRunWorkUnsafe}/>\r\n                            </Container>\r\n                        </React.Fragment>\r\n                    }\r\n                </Collapse>\r\n                {this.state.runWorker &&\r\n                <WorkerDialog marksData={this.marksData}\r\n                              onClosed={this.handleWorkerClosed}\r\n                              brsApi={this.props.brsApi}\r\n                              onError={this.props.onError}\r\n                              save={this.workerSaveMode}/>\r\n                }\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default memo(GoogleTableFetch);\r\n\r\ninterface Props {\r\n    brsApi: BrsApi;\r\n    onError: (errorMessage: string) => void;\r\n}\r\n\r\ninterface State {\r\n    tableUrl: string;\r\n    loading: boolean;\r\n    showDisciplines: boolean;\r\n    tableUrlError: { error: boolean, message: string };\r\n    disciplines: INestedListItem[];\r\n    disciplinesMissed: boolean;\r\n    showWorkerButtons: boolean;\r\n    runWorker: boolean;\r\n}\r\n","export default function tryInvoke<T>(action: () => T, onError: (error: any) => void): T | null {\r\n    try {\r\n        return action();\r\n    } catch (e) {\r\n        onError(e);\r\n        return null;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide} from '@material-ui/core';\r\nimport {TransitionProps} from '@material-ui/core/transitions';\r\nimport {Redirect} from 'react-router-dom';\r\nimport BrsAuth from \"../apis/brsAuth\";\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n    ref: React.Ref<unknown>,\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SessionExpiredAlert({open, sessionName, brsAuth}: Props) {\r\n    const [redirect, setRedirect] = React.useState(false);\r\n\r\n    const handleOk = () => {\r\n        if (sessionName === \"БРС\")\r\n            brsAuth.logout();\r\n        setRedirect(true);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {redirect && <Redirect to=\"/\"/>}\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\">\r\n                <DialogTitle id=\"alert-dialog-slide-title\">Необходимо авторизоваться</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Кажется, действие сессии {sessionName} истекло. Необходимо повторно авторизоваться.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{display: 'flex', justifyContent: 'space-around'}}>\r\n                    <Button onClick={handleOk} color=\"primary\">Ок</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    sessionName: string;\r\n    brsAuth: BrsAuth;\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nexport default function () {\r\n    return (\r\n        <div className={\"loading-pane\"}>\r\n            <CircularProgress size={100} className={\"progress\"}/>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Button, Container,} from \"@material-ui/core\";\r\nimport SpreadsheetFetch from \"../googleTableFetch\";\r\nimport BrsApi from \"../../apis/brsApi\";\r\nimport SessionExpiredAlert from \"../SessionExpiredAlert\";\r\nimport CustomAlert from \"../CustomAlert\";\r\nimport googleAuth from \"../../apis/googleAuth\";\r\nimport BrsAuth from \"../../apis/brsAuth\";\r\nimport {StatusCode} from \"../../helpers/CustomError\";\r\nimport LoadingPane from \"./loadingPane/LoadingPane\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport default class WorkPage extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showControls: false,\r\n            runWork: false,\r\n            openSessionExpiredAlert: false,\r\n            sessionName: '',\r\n            errorMessage: '',\r\n            loading: true,\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await googleAuth.init();\r\n        await this.props.brsAuth.tryRestoreAsync();\r\n\r\n        const brsAuthorized = this.props.brsAuth.checkAuth();\r\n        const googleAuthorized = googleAuth.checkAuthorized();\r\n\r\n        if (!brsAuthorized)\r\n            this.handleSessionExpired(\"БРС\");\r\n        else if (!googleAuthorized)\r\n            this.handleSessionExpired(\"Google\");\r\n        else\r\n            this.setState({loading: false});\r\n    }\r\n\r\n    handleSessionExpired = (sessionName: string) => {\r\n        this.setState({openSessionExpiredAlert: true, sessionName, loading: false});\r\n    }\r\n\r\n    handleError = (error: any) => {\r\n        const errorMessage: string = error.message || JSON.stringify(error);\r\n        if (error.statusCode)\r\n            if (error.statusCode === StatusCode.BrsUnauthorized)\r\n                this.handleSessionExpired(\"БРС\");\r\n            else\r\n                this.handleSessionExpired(\"Google\");\r\n        else if (error.name === \"RequestError\")\r\n            this.setState({errorMessage: \"В данный момент сервер недоступен. Попробуйте позже.\"});\r\n        else\r\n            this.setState({errorMessage});\r\n    }\r\n\r\n    closeError = () => {\r\n        this.setState({errorMessage: ''})\r\n    }\r\n\r\n    returnToLoginPage = () => {\r\n        this.setState({redirect: true})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.loading && <LoadingPane/>}\r\n                {this.state.openSessionExpiredAlert && <SessionExpiredAlert brsAuth={this.props.brsAuth}\r\n                                                                            sessionName={this.state.sessionName}\r\n                                                                            open={this.state.openSessionExpiredAlert}/>}\r\n                {this.state.errorMessage && <CustomAlert open={!!this.state.errorMessage}\r\n                                                         message={this.state.errorMessage}\r\n                                                         type={'error'}\r\n                                                         onClose={this.closeError}/>}\r\n                {this.state.redirect && <Redirect to=\"/\"/>}\r\n                <div className=\"work-page\">\r\n                    <Container maxWidth=\"md\">\r\n                        <Button variant=\"contained\"\r\n                                style={{marginTop: 10}}\r\n                                onClick={this.returnToLoginPage}>\r\n                            Вернуться на страницу входа\r\n                        </Button>\r\n                        <SpreadsheetFetch brsApi={this.props.brsApi} onError={this.handleError}/>\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\ninterface State {\r\n    showControls: boolean;\r\n    openSessionExpiredAlert: boolean;\r\n    sessionName: string;\r\n    errorMessage: string;\r\n    runWork: boolean;\r\n    loading: boolean;\r\n    redirect: boolean;\r\n}\r\n\r\ninterface Props {\r\n    brsAuth: BrsAuth;\r\n    brsApi: BrsApi;\r\n}\r\n","import React from \"react\";\r\nimport Context from \"../../Context\";\r\nimport WorkPage from \"./WorkPage\";\r\n\r\nexport default function () {\r\n    return (\r\n        <Context.Consumer>\r\n            {\r\n                context => <WorkPage brsAuth={context.brsAuth} brsApi={context.brsApi}/>\r\n            }\r\n        </Context.Consumer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\nimport BrsUrlProvider from \"./apis/brsUrlProvider\";\r\nimport BrsAuth from \"./apis/brsAuth\";\r\nimport LoginPageWrapper from \"./components/loginPage/LoginPageWrapper\";\r\nimport WorkPageWrapper from \"./components/workPage/WorkPageWrapper\";\r\nimport BrsApi from \"./apis/brsApi\";\r\nimport Context from './Context';\r\n\r\nconst urlProvider = new BrsUrlProvider(true);\r\nconst brsAuth = new BrsAuth(urlProvider);\r\nconst brsApi = new BrsApi(brsAuth, urlProvider);\r\n\r\nexport default function App() {\r\n    return (\r\n        <Context.Provider value={{brsAuth, brsApi}}>\r\n            <HashRouter hashType={\"noslash\"}>\r\n                <Switch>\r\n                    <Route path=\"/work\" component={WorkPageWrapper}/>\r\n                    <Route exact path=\"\" component={LoginPageWrapper}/>\r\n                </Switch>\r\n            </HashRouter>\r\n        </Context.Provider>\r\n    )\r\n}\r\n","import {ReportHandler} from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}