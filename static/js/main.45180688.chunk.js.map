{"version":3,"sources":["helpers/cache.ts","apis/brsUrlProvider.ts","apis/brsAuth.ts","Context.tsx","components/GoogleLoginButton.tsx","components/CustomAlert.tsx","components/submitWithLoading/index.tsx","components/brsLoginForm/index.tsx","apis/googleAuth.ts","components/loginPage/index.tsx","components/loginPage/LoginPageWrapper.tsx","components/NestedList.tsx","helpers/CustomError.ts","apis/brsApi.ts","helpers/tools.ts","components/DisciplinesFetchControls.tsx","components/DisciplinesFetch.tsx","apis/googleApi.ts","helpers/brsHelpers.ts","functions/readStudentsAsync.ts","functions/buildAutoMarksConfigAsync.ts","components/spreadsheetFetch/index.tsx","components/WorkerDialog.tsx","helpers/fio.ts","marksActions/DisciplineMarksManager.ts","marksActions/MarksManager.ts","components/SessionExpiredAlert.tsx","helpers/logger.ts","components/RunWorkerButtons.tsx","components/loadingPane/LoadingPane.tsx","components/workPage/WorkPage.tsx","components/workPage/WorkPageWrapper.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StorageType","brsUrl","BrsUrlProvider","withProxy","this","memoryCache","save","name","data","whereTo","json","JSON","stringify","Local","LocalAndSession","localStorage","setItem","Session","sessionStorage","read","whereFrom","localData","content","getItem","memoryData","parse","LoginStatus","BrsAuth","brsUrlProvider","_sid","_login","_username","loginInfo","cache","saveLoginInfo","sid","login","username","checkSidAsync","sidCheckResult","success","request","method","url","baseUrl","headers","response","match","password","requestSidAsync","Error","cookie","result","checkResult","InvalidCredentials","Succeed","storageType","removeItem","body","resolveWithFullResponse","simple","then","x","Context","createContext","GoogleLoginButton","props","onSignedIn","onFailure","signedIn","onLogout","Fragment","Button","type","fullWidth","variant","onClick","color","clientId","buttonText","onSuccess","scope","isSignedIn","CustomAlert","open","message","onClose","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","severity","Alert","elevation","SubmitWithLoading","title","loading","className","disabled","CircularProgress","size","onSubmit","submitting","React","useState","setLogin","setPassword","setSid","e","preventDefault","TextField","margin","id","label","autoFocus","value","onChange","target","autoComplete","DISCOVERY_DOCS","googleAuth","init","gapi","client","Promise","resolve","load","a","discoveryDocs","catch","console","error","checkAuthorized","auth2","getAuthInstance","get","getUsername","currentUser","getBasicProfile","getName","getEmail","logout","signOut","LoginPage","handleBrsSubmit","credentials","setState","submitLoading","loginBrsAsync","loginStatus","alertMessage","openAlert","alertType","brsAuthorized","brsAuth","authBySidAsync","loginAsync","handleCloseAlert","handleGoogleSignedIn","googleAuthorized","handleGoogleLoginFailed","startWork","redirect","handleBrsLogout","handleGoogleLogout","state","brsLoading","tryRestoreAsync","checkAuth","to","Container","component","maxWidth","Grid","container","justify","item","md","lg","sm","xs","Component","Consumer","context","useStyles","makeStyles","theme","createStyles","root","width","backgroundColor","palette","background","default","nested","paddingLeft","spacing","onEmptyMessage","textAlign","NestedList","items","collapsed","classes","listSubheader","ListSubheader","hidden","List","aria-labelledby","subheader","length","ConstructItems","ListItem","ListItemText","primary","map","index","Item","setOpen","nestedItems","hasSubItems","button","ListItemIcon","ExpandLess","ExpandMore","nestedItemTitle","NestedItem","Collapse","in","timeout","unmountOnExit","disablePadding","StatusCode","CustomError","statusCode","StudentFailure","TermType","BrsApi","year","termType","course","isModule","cacheName","cacheResult","getDisciplineInternalAsync","queryString","requestApiJsonAsync","paging","disciplines","discipline","getStudentMarksAsync","students","uniqueStudents","s","knownStudent","studentUuid","Object","keys","k","cardType","markType","getStudentMarksInternalAsync","disciplineLoad","groupHistoryId","groupId","groupUuid","techgroup","isTotal","showActiveStudents","groupPart","getControlActionsCachedAsync","getControlActionsInternalAsync","modulePart","requestApiAsync","prefix","suffix","linesWithId","split","trim","filter","startsWith","columns","substr","uuidPrefix","c","uuid","uuidWithoutPrefix","controlAction","controlActionId","mark","cardTypeKey","disciplineLoadUuid","isNaN","toString","studentFailure","NoFailure","updateMarksAsync","updateMarksInternalAsync","uri","options","trimLeft","BrsUnauthorized","normalizeString","str","toLowerCase","replace","compareNormalized","s1","s2","parseAnyFloat","parseFloat","minWidth","marginRight","submit","display","top","marginTop","setCourse","Date","getFullYear","setYear","date","month","getMonth","day","getDate","getTermType","setTermType","setIsModule","handleChange","event","checked","required","FormControl","InputLabel","Select","MenuItem","FormControlLabel","control","Checkbox","header","marginBottom","disciplinesList","DisciplinesFetch","brsApi","onError","openDisciplines","setOpenDisciplines","setDisciplines","setLoading","fetchData","Fall","Spring","getDisciplineCachedAsync","rawDisciplines","convertToListItems","entries","key","reduce","reducer","itemKey","push","d","group","DisciplinesFetchControls","memo","getSpreadsheet","spreadsheetId","sheets","range","spreadsheets","values","readAsync","writeAsync","asEnteredByUser","valueInputOption","requestBody","update","appendAsync","append","getSpreadsheetProperties","res","sheetProps","properties","failureMapping","NotChosen","NotAllowedByDeansOffice","NotAppeared","Неуважительная","DisrespectfulReason","Уважительная","RespectfulReason","NotAllowedByTeacher","ShouldNotPass","AcademicLeave","Выбыл","DroppedOut","parseStudentFailure","input","undefined","formatStudentFailure","fromSpreadsheetAsync","readRange","fullNameIndex","groupNameIndex","idIndex","failureIndex","sheet","googleApi","rows","row","fullName","groupName","failure","buildAutoMarksConfigAsync","sheetName","isSuitableDiscipline","isSuitableActualStudent","readRowsFromSpreadsheetAsync","getHeader","indices","buildIndicesBy","dataRange","buildDataRange","controlActionConfigs","buildControlActionConfig","disciplineConfig","buildDisciplineConfig","readStudents","fullNameColumn","left","groupColumn","failureColumn","allActualStudents","actualStudents","normalizedHeader","groupColumnIndex","indexOf","fullNameColumnIndex","failureColumnIndex","disciplineParameterKeyColumnIndex","disciplineParameterValueColumnIndex","Math","abs","disciplineKeyColumn","disciplineValueColumn","min","right","leftLetter","String","fromCharCode","charCodeAt","rightLetter","controlActions","propertyIndex","config","sameColumns","matchCount","matchIndex","defaultStudentFailure","i","addDisciplineConfigParameter","parseInt","lowerValue","SpreadsheetFetch","tableUrlError","tableUrl","loadTable","getSpreadsheetInfo","spreadsheetInfo","marksData","moduleGroup","prepareModuleGroup","moduleGroups","onDataLoaded","call","groups","Array","from","Set","regExp","maybeSheetId","sheetId","spreadsheetProperties","maybeSheet","helperText","DialogContent","withStyles","padding","MuiDialogContent","DialogActions","justifyContent","MuiDialogActions","WorkerDialog","marksManager","logMessage","logItems","getLogger","addLogHandler","putMarksToBrsAsync","removeLogHandler","cancelPending","okLoading","cancelWork","cancel","Dialog","runWork","dividers","dense","style","minHeight","paddingTop","paddingBottom","onClosed","toKey","fio","DisciplineMarksManager","logger","log","getAllControlActionsCachedAsync","checkControlActionsConfiguration","getAllStudentMarksAsync","brsStudents","mergeStudents","mergedStudents","skippedActualStudents","skippedBrsStudents","logMergedStudents","putMarksForStudentsAsync","updateFailuresForSkippedStudentsAsync","updateAllMarksAsync","getSuitableControlAction","statusCounters","student","putMarksForStudentAsync","status","updated","failed","marks","brsMark","brs","actualMark","actual","putStudentMarkAsync","brsFailureStatus","actualFailure","failureStatus","putStudentFailureAsync","verbose","studentName","join","suitableControlActions","some","b","updateFailureForStudent","statusKeys","studentFio","description","activeBrsStudents","isStudentActive","actualStudent","suitableStudents","brsStudent","brsFullName","actualFullName","areStudentsLike","ms","studentStatus","MarksManager","disciplineMarksManager","getSuitableDisciplinesAsync","putMarksForDisciplineAsync","allDisciplines","Transition","forwardRef","ref","Slide","direction","SessionExpiredAlert","sessionName","setRedirect","TransitionComponent","keepMounted","aria-describedby","DialogTitle","DialogContentText","Logger","logHandlers","errorHandlers","logHandler","h","errorHandler","errorMessage","show","onRunWorkSafe","onRunWorkUnsafe","WorkPage","handleDataLoaded","showControls","addErrorHandler","handleError","handleRunWorkSafe","handleRunWorkUnsafe","handleClosed","handleSessionExpired","openSessionExpiredAlert","closeError","returnToLoginPage","LoadingPane","RunWorkerButtons","urlProvider","App","Provider","hashType","path","WorkPageWrapper","exact","LoginPageWrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45180688.chunk.js","sourcesContent":["const memoryCache: { [name: string]: object | string } = {};\r\n\r\nexport function save(name: string, data: object | string, whereTo: StorageType) {\r\n    if (!data) {\r\n        return false;\r\n    }\r\n\r\n    const json = JSON.stringify(data);\r\n\r\n    if (whereTo === StorageType.Local || whereTo === StorageType.LocalAndSession)\r\n        localStorage.setItem(name, json);\r\n    if (whereTo === StorageType.Session || whereTo === StorageType.LocalAndSession)\r\n        sessionStorage.setItem(name, json);\r\n\r\n    memoryCache[name] = data;\r\n\r\n    return true;\r\n}\r\n\r\nexport function read<T extends object | string>(name: string, whereFrom: StorageType) {\r\n    const localData = memoryCache[name];\r\n    if (localData && whereFrom !== StorageType.Session) {\r\n        return localData as T;\r\n    }\r\n\r\n    let content: string | null = null\r\n\r\n    if (whereFrom === StorageType.Local || whereFrom === StorageType.LocalAndSession)\r\n        content = localStorage.getItem(name);\r\n    if (whereFrom === StorageType.Session || whereFrom === StorageType.LocalAndSession)\r\n        content = sessionStorage.getItem(name);\r\n\r\n    if (!content) {\r\n        return null;\r\n    }\r\n\r\n    const memoryData = JSON.parse(content);\r\n    if (!memoryData) {\r\n        return null;\r\n    }\r\n\r\n    memoryCache[name] = memoryData;\r\n    return memoryData as T;\r\n}\r\n\r\nexport function clear(name: string, storageType: StorageType) {\r\n    if (storageType === StorageType.Local || storageType === StorageType.LocalAndSession)\r\n        localStorage.removeItem(name);\r\n    if (storageType === StorageType.Session || storageType === StorageType.LocalAndSession)\r\n        sessionStorage.removeItem(name);\r\n\r\n    delete memoryCache[name];\r\n\r\n    return true;\r\n}\r\n\r\nexport enum StorageType {\r\n    Local,\r\n    Session,\r\n    LocalAndSession\r\n}\r\n","const brsUrl = 'https://brs.urfu.ru/mrd';\r\nconst corsProxy = 'https://kamikoto-cors-proxy.herokuapp.com';\r\n\r\nexport default class BrsUrlProvider {\r\n    private readonly withProxy: boolean;\r\n\r\n    constructor(withProxy: boolean) {\r\n        this.withProxy = withProxy;\r\n    }\r\n\r\n    get baseUrl() {\r\n        return this.withProxy ? `${corsProxy}/${brsUrl}` : brsUrl;\r\n    }\r\n}\r\n","import request from \"request-promise\";\r\nimport BrsUrlProvider from \"./brsUrlProvider\";\r\nimport * as cache from \"../helpers/cache\";\r\nimport {StorageType} from \"../helpers/cache\";\r\n\r\nexport default class BrsAuth {\r\n    readonly brsUrlProvider: BrsUrlProvider;\r\n\r\n    constructor(brsUrlProvider: BrsUrlProvider) {\r\n        this.brsUrlProvider = brsUrlProvider;\r\n    }\r\n\r\n    private _sid: string | null = null;\r\n\r\n    get sid() {\r\n        if (!this._sid)\r\n            throw new Error('BRS unauthorized');\r\n        return this._sid;\r\n    }\r\n\r\n    private _login: string | null = null;\r\n\r\n    get login() {\r\n        if (!this._login)\r\n            throw new Error('BRS unauthorized');\r\n        return this._login;\r\n    }\r\n\r\n    private _username?: string = \"Anonymous\";\r\n\r\n    get username() {\r\n        return this._username;\r\n    }\r\n\r\n    checkAuth() {\r\n        return !!(this._sid && this._login);\r\n    }\r\n\r\n    async tryRestoreAsync() {\r\n        if (!!(this._sid && this._login))\r\n            return;\r\n\r\n        let loginInfo = cache.read<LoginInfo>(\"loginInfo\", StorageType.Session);\r\n        if (loginInfo) {\r\n            this.saveLoginInfo(loginInfo.sid, loginInfo.login, loginInfo.username);\r\n            return;\r\n        }\r\n\r\n        loginInfo = cache.read<LoginInfo>(\"loginInfo\", StorageType.Local);\r\n        if (!loginInfo)\r\n            return;\r\n\r\n        const sidCheckResult = await this.checkSidAsync(loginInfo.sid);\r\n        if (sidCheckResult?.success)\r\n            this.saveLoginInfo(loginInfo.sid, loginInfo.login, loginInfo.username);\r\n    }\r\n\r\n    private async checkSidAsync(sid: string): Promise<SidCheckResult | null> {\r\n        try {\r\n            const response: string = await request({\r\n                method: 'GET',\r\n                url: this.brsUrlProvider.baseUrl + \"/mvc/mobile\",\r\n                headers: {\r\n                    'X-Cookie': `JSESSIONID=${sid}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                },\r\n            });\r\n\r\n            const username = response.match(/username\">([А-ЯЁа-яё \\-]+)</);\r\n            if (username)\r\n                return {success: true, username: username[1]};\r\n            return {success: true, username: \"\"}\r\n\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async loginAsync(login: string, password: string): Promise<LoginStatus> {\r\n        const response = await this.requestSidAsync(login, password);\r\n\r\n        if (!response || !('x-set-cookie' in response.headers)) {\r\n            return LoginStatus.Error;\r\n        }\r\n\r\n        const cookie = response.headers['x-set-cookie'] as string;\r\n        const result = cookie.match(/(?<=JSESSIONID=)\\w+/);\r\n\r\n        if (!result)\r\n            return LoginStatus.Error;\r\n\r\n        const sid = result[0];\r\n\r\n        const checkResult = await this.checkSidAsync(sid);\r\n        if (checkResult === null)\r\n            return LoginStatus.Error;\r\n        if (!checkResult.success)\r\n            return LoginStatus.InvalidCredentials;\r\n\r\n        this.saveLoginInfo(sid, login, checkResult.username);\r\n\r\n        return LoginStatus.Succeed;\r\n    }\r\n\r\n    async authBySidAsync(sid: string): Promise<LoginStatus> {\r\n        if (!sid)\r\n            return LoginStatus.InvalidCredentials;\r\n\r\n        const checkResult = await this.checkSidAsync(sid);\r\n        if (checkResult === null)\r\n            return LoginStatus.Error;\r\n        if (!checkResult.success)\r\n            return LoginStatus.InvalidCredentials;\r\n\r\n        this.saveLoginInfo(sid, \"Anonymous\", checkResult.username);\r\n\r\n        return LoginStatus.Succeed;\r\n    }\r\n\r\n    private saveLoginInfo(sid: string, login: string, username: string) {\r\n        cache.save(\"loginInfo\", {sid, login, username}, StorageType.LocalAndSession);\r\n        this._sid = sid;\r\n        this._login = login;\r\n        this._username = username;\r\n    }\r\n\r\n    logout() {\r\n        this._sid = null;\r\n        this._login = null;\r\n        cache.clear(\"loginInfo\", StorageType.LocalAndSession);\r\n    }\r\n\r\n    private async requestSidAsync(login: string, password: string) {\r\n        return await request({\r\n            url: this.brsUrlProvider.baseUrl + `/login`,\r\n            method: 'POST',\r\n            body: `username=${login}&password=${password}`,\r\n            resolveWithFullResponse: true,\r\n            simple: false,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            },\r\n        }).then(x => x, () => null);\r\n    }\r\n}\r\n\r\nexport enum LoginStatus {\r\n    Succeed,\r\n    InvalidCredentials,\r\n    Error\r\n}\r\n\r\ninterface LoginInfo {\r\n    sid: string;\r\n    login: string;\r\n    username: string;\r\n}\r\n\r\ninterface SidCheckResult {\r\n    success: boolean;\r\n    username: string;\r\n}\r\n","import {createContext} from \"react\";\r\nimport BrsAuth from \"./apis/brsAuth\";\r\nimport BrsApi from \"./apis/brsApi\";\r\n\r\n// @ts-ignore\r\nconst Context = createContext<{ brsAuth: BrsAuth, brsApi: BrsApi }>();\r\n\r\nexport default Context;\r\n","import GoogleLogin from \"react-google-login\";\r\nimport React from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nconst CLIENT_ID = '122993083593-pacve8csj86voko30ia65raeg0ncrtuv.apps.googleusercontent.com';\r\nconst SCOPES = \"profile email https://www.googleapis.com/auth/spreadsheets\";\r\n\r\nexport default function GoogleLoginButton(props: Props) {\r\n    const {onSignedIn, onFailure, signedIn, username, onLogout} = props;\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                signedIn ?\r\n                    <React.Fragment>\r\n                        <p>Добро пожаловать, {username}</p>\r\n                        <Button type=\"button\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                onClick={onLogout}\r\n                                color=\"primary\">\r\n                            Выйти из Google\r\n                        </Button>\r\n                    </React.Fragment> :\r\n                    <GoogleLogin\r\n                        clientId={CLIENT_ID}\r\n                        buttonText=\"Войти в аккаунт Google\"\r\n                        onSuccess={onSignedIn}\r\n                        onFailure={onFailure}\r\n                        scope={SCOPES}\r\n                        isSignedIn={true}/>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\ninterface Props {\r\n    onSignedIn: () => void;\r\n    onFailure: (error: any) => void;\r\n    onLogout: () => void;\r\n    signedIn: boolean;\r\n    username?: string;\r\n}\r\n","import React from \"react\";\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\r\nimport {Snackbar} from \"@material-ui/core\";\r\n\r\nexport default function CustomAlert(props: Props) {\r\n    const {open, message, type, onClose} = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Snackbar\r\n                open={open}\r\n                autoHideDuration={10000}\r\n                anchorOrigin={{vertical: 'top', horizontal: 'center'}}\r\n                onClose={onClose}>\r\n                <Alert severity={type} onClose={onClose}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    message: string;\r\n    type: \"error\" | \"success\";\r\n    onClose: () => void;\r\n}\r\n","import {Button, CircularProgress} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default function SubmitWithLoading(props: Props) {\r\n    const {title, loading, className, onClick, disabled = false} = props;\r\n\r\n    return (\r\n        <div className={\"submit-with-loading \" + className}>\r\n            <Button type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onClick}\r\n                    disabled={loading || disabled}>\r\n                {title}\r\n            </Button>\r\n            {\r\n                loading &&\r\n                <CircularProgress color=\"secondary\" size={24} className=\"button-progress\"/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface Props {\r\n    title: string;\r\n    loading: boolean;\r\n    className?: string;\r\n    onClick?: () => void;\r\n    disabled?: boolean;\r\n}\r\n","import {Button, CircularProgress, TextField} from \"@material-ui/core\";\r\nimport SubmitWithLoading from \"../submitWithLoading\";\r\nimport React, {FormEvent} from \"react\";\r\nimport \"./styles.css\"\r\n\r\nexport default function ({onSubmit, submitting, loading, signedIn, onLogout, username}: Props) {\r\n    const [login, setLogin] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [sid, setSid] = React.useState('');\r\n\r\n    function handleUsernameChanged(e: React.ChangeEvent<HTMLInputElement>) {\r\n        const value = e.target.value;\r\n        setLogin(value);\r\n        setSid(\"\");\r\n    }\r\n\r\n    function handlePasswordChanged(e: React.ChangeEvent<HTMLInputElement>) {\r\n        const value = e.target.value;\r\n        setPassword(value);\r\n        setSid(\"\");\r\n    }\r\n\r\n    function handleSidChanged(e: React.ChangeEvent<HTMLInputElement>) {\r\n        const value = e.target.value;\r\n        setSid(value);\r\n        setLogin(\"\");\r\n        setPassword(\"\");\r\n    }\r\n\r\n    function handleSubmit(e: FormEvent) {\r\n        e.preventDefault();\r\n\r\n        if (loading)\r\n            return;\r\n\r\n        onSubmit({login: login, password, sid});\r\n    }\r\n\r\n    return signedIn ? (\r\n            <React.Fragment>\r\n                <p>Добро пожаловать, {username}</p>\r\n                <Button type=\"button\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        onClick={onLogout}\r\n                        color=\"primary\">\r\n                    Выйти из БРС\r\n                </Button>\r\n            </React.Fragment>\r\n        ) :\r\n        (\r\n            <div className={\"brs-login-form\"}>\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <TextField\r\n                        className={\"form-component\"}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Имя пользователя\"\r\n                        name=\"username\"\r\n                        autoFocus\r\n                        value={login}\r\n                        disabled={loading}\r\n                        onChange={handleUsernameChanged}/>\r\n                    <TextField\r\n                        className={\"form-component\"}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Пароль\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={password}\r\n                        disabled={loading}\r\n                        onChange={handlePasswordChanged}/>\r\n                    <p className=\"text-center form-component\">или</p>\r\n                    <TextField\r\n                        className={\"form-component\"}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        name=\"sid\"\r\n                        label=\"JSESSIONID\"\r\n                        type=\"password\"\r\n                        id=\"sid\"\r\n                        value={sid}\r\n                        disabled={loading}\r\n                        onChange={handleSidChanged}/>\r\n                    <SubmitWithLoading className={\"vertical-margin-medium\"} title=\"войти\" loading={submitting}\r\n                                       disabled={loading}/>\r\n                </form>\r\n                {\r\n                    loading &&\r\n                    <CircularProgress color=\"primary\" size={150} className=\"progress\"/>\r\n                }\r\n            </div>\r\n        );\r\n}\r\n\r\ninterface Props {\r\n    submitting: boolean;\r\n    loading: boolean;\r\n    onSubmit: (credentials: Credentials) => void;\r\n    onLogout: () => void;\r\n    signedIn: boolean;\r\n    username?: string;\r\n}\r\n\r\nexport interface Credentials {\r\n    login: string\r\n    password: string\r\n    sid: string\r\n}\r\n","const CLIENT_ID = '122993083593-pacve8csj86voko30ia65raeg0ncrtuv.apps.googleusercontent.com';\r\nconst DISCOVERY_DOCS = [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"];\r\nconst SCOPES = \"profile email https://www.googleapis.com/auth/spreadsheets\";\r\n\r\nconst googleAuth = {\r\n    async init() {\r\n        // @ts-ignore\r\n        if (gapi.client)\r\n            return;\r\n        return new Promise(resolve => {\r\n            gapi.load('client:auth2', async () => {\r\n                await gapi.client.init({\r\n                    clientId: CLIENT_ID,\r\n                    discoveryDocs: DISCOVERY_DOCS,\r\n                    scope: SCOPES\r\n                }).catch(console.error);\r\n                resolve();\r\n            });\r\n        });\r\n    },\r\n\r\n    checkAuthorized() {\r\n        // @ts-ignore\r\n        return gapi.auth2?.getAuthInstance()?.isSignedIn?.get();\r\n    },\r\n\r\n    getUsername(): string | undefined {\r\n        // @ts-ignore\r\n        const username = gapi.auth2?.getAuthInstance().currentUser?.get().getBasicProfile().getName();\r\n        if (username)\r\n            return username;\r\n\r\n        // @ts-ignore\r\n        return gapi.auth2?.getAuthInstance().currentUser?.get().getBasicProfile().getEmail();\r\n    },\r\n\r\n    async logout() {\r\n        // @ts-ignore\r\n        await gapi.auth2?.getAuthInstance()?.signOut();\r\n    }\r\n};\r\n\r\nexport default googleAuth;\r\n","import React from 'react';\r\nimport \"./styles.css\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Button, Container, Grid} from \"@material-ui/core\";\r\nimport GoogleLoginButton from \"../GoogleLoginButton\";\r\nimport CustomAlert from \"../CustomAlert\";\r\nimport BrsAuth, {LoginStatus} from \"../../apis/brsAuth\";\r\nimport BrsLoginForm, {Credentials} from \"../brsLoginForm\";\r\nimport googleAuth from \"../../apis/googleAuth\";\r\n\r\nexport default class LoginPage extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            brsLoading: true,\r\n            brsAuthorized: false,\r\n            googleAuthorized: false,\r\n            redirect: false,\r\n            submitLoading: false,\r\n            openAlert: false,\r\n            alertMessage: '',\r\n            alertType: 'error'\r\n        }\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.brsAuth.tryRestoreAsync();\r\n        googleAuth.init();\r\n\r\n        const brsAuthorized = this.props.brsAuth.checkAuth();\r\n        const googleAuthorized = googleAuth.checkAuthorized();\r\n        this.setState({brsLoading: false, brsAuthorized, googleAuthorized});\r\n    }\r\n\r\n    handleBrsSubmit = async (credentials: Credentials) => {\r\n        this.setState({submitLoading: true});\r\n\r\n        const loginStatus = await this.loginBrsAsync(credentials);\r\n\r\n        this.setState({submitLoading: false})\r\n\r\n        switch (loginStatus) {\r\n            case LoginStatus.Succeed:\r\n                this.setState({\r\n                    alertMessage: \"Авторизация прошла успешно\",\r\n                    openAlert: true,\r\n                    alertType: 'success',\r\n                    brsAuthorized: true\r\n                });\r\n                break;\r\n            case LoginStatus.Error:\r\n                this.setState({\r\n                    alertMessage: \"Что-то пошло не так :( Попробуйте позже\",\r\n                    openAlert: true,\r\n                    alertType: 'error'\r\n                });\r\n                break;\r\n            case LoginStatus.InvalidCredentials:\r\n                this.setState({\r\n                    alertMessage: \"Неверные логин, пароль или JSESSIONID\",\r\n                    openAlert: true,\r\n                    alertType: 'error'\r\n                });\r\n        }\r\n    }\r\n\r\n    loginBrsAsync = async (credentials: Credentials): Promise<LoginStatus> => {\r\n        if (credentials.sid) {\r\n            return await this.props.brsAuth.authBySidAsync(credentials.sid);\r\n        }\r\n        if (credentials.login && credentials.password) {\r\n            return await this.props.brsAuth.loginAsync(credentials.login, credentials.password);\r\n        }\r\n        return LoginStatus.InvalidCredentials;\r\n    }\r\n\r\n    handleCloseAlert = () => {\r\n        this.setState({openAlert: false});\r\n    }\r\n\r\n    handleGoogleSignedIn = () => {\r\n        this.setState({googleAuthorized: true});\r\n    }\r\n\r\n    handleGoogleLoginFailed = (error: any) => {\r\n        console.error(error);\r\n\r\n        this.setState({\r\n            openAlert: true,\r\n            alertType: 'error',\r\n            alertMessage: 'Не удалось подключить Ваш Google аккаунт :('\r\n        });\r\n    }\r\n\r\n    startWork = () => {\r\n        this.setState({redirect: true});\r\n    }\r\n\r\n    handleBrsLogout = () => {\r\n        this.props.brsAuth.logout();\r\n        this.setState({\r\n            brsAuthorized: false,\r\n            alertMessage: \"Вы вышли из аккаунта БРС\",\r\n            alertType: \"success\",\r\n            openAlert: true\r\n        });\r\n    }\r\n\r\n    handleGoogleLogout = async () => {\r\n        await googleAuth.logout();\r\n        this.setState({\r\n            googleAuthorized: false,\r\n            alertType: \"success\",\r\n            alertMessage: \"Вы вышли из аккаунта Google\",\r\n            openAlert: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                {this.state.redirect && <Redirect to=\"/work\"/>}\r\n                <Container component=\"main\" maxWidth=\"md\">\r\n                    <h1>Привет!</h1>\r\n                    <h3>Как все работает</h3>\r\n                    <p>В Google Таблицах вы заполняете оценки за курс по некоторому шаблону.<br/>\r\n                        После этого импортируете Google Таблицу в сервис и выполняете пробный запуск выставления оценок,\r\n                        чтобы исключить ошибки.<br/>\r\n                        Наконец делаете запуск с реальным выставлением оценок.</p>\r\n                    <p>Вы входите с БРС, чтобы сервис мог получить информацию о ваших курсах и выставлять оценки от\r\n                        вашего имени.<br/>\r\n                        Вы входите в Google, чтобы сервис мог загружать из ваших Google Таблиц оценки студентов.</p>\r\n                    <h3>Правила хранения данных</h3>\r\n                    <p>Ваш логин и пароль передаются в БРС через наш прокси для создания сессии в БРС.<br/>\r\n                        Данные о сессии БРС и о доступных вам курсах сохраняются локально в вашем браузере.<br/>\r\n                        Остальные данные хранятся в рамках сессии в вашем браузере.</p>\r\n                    <hr/>\r\n                    <p className={\"align-center\"}>Авторизуйтесь в БРС и Google, чтобы начать работу в сервисе</p>\r\n                    <Grid container justify=\"space-around\" className={\"vertical-margin-medium\"}>\r\n                        <Grid item md={5} lg={5} sm={5} xs={10}>\r\n                            <BrsLoginForm onSubmit={this.handleBrsSubmit}\r\n                                          loading={this.state.brsLoading}\r\n                                          signedIn={this.state.brsAuthorized}\r\n                                          onLogout={this.handleBrsLogout}\r\n                                          username={this.props.brsAuth.username}\r\n                                          submitting={this.state.submitLoading}/>\r\n                        </Grid>\r\n                        <Grid item className=\"align-center\">\r\n                            <GoogleLoginButton onSignedIn={this.handleGoogleSignedIn}\r\n                                               signedIn={this.state.googleAuthorized}\r\n                                               username={googleAuth.getUsername()}\r\n                                               onLogout={this.handleGoogleLogout}\r\n                                               onFailure={this.handleGoogleLoginFailed}/>\r\n                            <br/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Container className=\"start-work-wrapper\">\r\n                        <Button variant=\"contained\"\r\n                                onClick={this.startWork}\r\n                                disabled={!this.state.brsAuthorized || !this.state.googleAuthorized}\r\n                                color=\"secondary\">\r\n                            начать работу\r\n                        </Button>\r\n                    </Container>\r\n                    <CustomAlert open={this.state.openAlert}\r\n                                 message={this.state.alertMessage}\r\n                                 type={this.state.alertType}\r\n                                 onClose={this.handleCloseAlert}/>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface State {\r\n    brsLoading: boolean;\r\n    brsAuthorized: boolean;\r\n    googleAuthorized: boolean;\r\n    submitLoading: boolean;\r\n    redirect: boolean;\r\n    openAlert: boolean,\r\n    alertMessage: string,\r\n    alertType: \"error\" | \"success\";\r\n}\r\n\r\ninterface Props {\r\n    brsAuth: BrsAuth;\r\n}\r\n","import React from \"react\";\r\nimport Context from \"../../Context\";\r\nimport LoginPage from \"./index\";\r\nimport BrsAuth from \"../../apis/brsAuth\";\r\n\r\nexport default function () {\r\n    return (\r\n        <Context.Consumer>\r\n            {\r\n                context => <LoginPage brsAuth={(context as { brsAuth: BrsAuth }).brsAuth}/>\r\n            }\r\n        </Context.Consumer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport {\r\n    ListSubheader,\r\n    Collapse,\r\n    ListItemText,\r\n    ListItemIcon,\r\n    ListItem,\r\n    List\r\n} from '@material-ui/core';\r\nimport {ExpandLess, ExpandMore} from '@material-ui/icons';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n        nested: {\r\n            paddingLeft: theme.spacing(4),\r\n        },\r\n        onEmptyMessage: {\r\n            textAlign: \"center\"\r\n        }\r\n    }),\r\n);\r\n\r\nexport default function NestedList(props: NestedListProps) {\r\n    const {title, items, collapsed = true} = props;\r\n    const classes = useStyles();\r\n\r\n    const listSubheader = (\r\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\" hidden={!title}>\r\n            {title}\r\n        </ListSubheader>\r\n    );\r\n\r\n    return (\r\n        <List\r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            subheader={listSubheader}\r\n            className={classes.root}>\r\n            {\r\n                items.length ?\r\n                    ConstructItems(items, collapsed) :\r\n                    <ListItem className={classes.onEmptyMessage}>\r\n                        <ListItemText primary=\"No items\"/>\r\n                    </ListItem>\r\n            }\r\n        </List>\r\n    );\r\n}\r\n\r\nfunction ConstructItems(items: NestedListItem[], collapsed: boolean) {\r\n    return items.map((item, index) => (\r\n        <Item key={index}\r\n              item={item}\r\n              collapsed={collapsed}/>\r\n    ));\r\n}\r\n\r\nfunction Item(props: ItemProps) {\r\n    const {item, collapsed} = props;\r\n    const [open, setOpen] = React.useState(!collapsed);\r\n    const {title, nestedItems} = item;\r\n\r\n    const hasSubItems = nestedItems && nestedItems.length > 0; //(item.nestedItems ?? []).length > 0;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ListItem button onClick={() => setOpen(!open)}>\r\n                <ListItemIcon>\r\n                    <ViewModuleIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary={title}/>\r\n                {hasSubItems && (open ? <ExpandLess/> : <ExpandMore/>)}\r\n            </ListItem>\r\n            {\r\n                nestedItems?.map((nestedItemTitle, index) =>\r\n                    <NestedItem {...{index, open, nestedItemTitle}}/>)\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction NestedItem({index, nestedItemTitle, open}: NestedItemProps) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Collapse key={index} in={open} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" className={classes.nested} disablePadding>\r\n                <ListItem button>\r\n                    <ListItemIcon>\r\n                        <GroupIcon/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={nestedItemTitle}/>\r\n                </ListItem>\r\n            </List>\r\n        </Collapse>\r\n    );\r\n}\r\n\r\nexport interface NestedListItem {\r\n    title: string,\r\n    nestedItems?: string[]\r\n}\r\n\r\ninterface ItemsProps {\r\n    items: NestedListItem[];\r\n    collapsed?: boolean;\r\n}\r\n\r\ninterface NestedListProps extends ItemsProps {\r\n    title?: string;\r\n}\r\n\r\ninterface ItemProps {\r\n    item: NestedListItem;\r\n    collapsed?: boolean;\r\n}\r\n\r\ninterface NestedItemProps {\r\n    index: number;\r\n    nestedItemTitle: string;\r\n    open: boolean;\r\n}\r\n","export class CustomError {\r\n    readonly message: string;\r\n    readonly statusCode: StatusCode;\r\n\r\n    constructor(statusCode: StatusCode, message: string = '') {\r\n        this.statusCode = statusCode;\r\n        this.message = message;\r\n    }\r\n}\r\n\r\nexport enum StatusCode {\r\n    BrsUnauthorized = 1,\r\n    GoogleUnauthorized\r\n}\r\n","import 'bluebird';\r\nimport request from 'request-promise';\r\nimport * as cache from '../helpers/cache';\r\nimport {StorageType} from '../helpers/cache';\r\nimport BrsAuth from \"./brsAuth\";\r\nimport BrsUrlProvider from \"./brsUrlProvider\";\r\nimport {CustomError, StatusCode} from \"../helpers/CustomError\";\r\n\r\nexport default class BrsApi {\r\n    private readonly brsAuth: BrsAuth;\r\n    private readonly brsUrlProvider: BrsUrlProvider;\r\n\r\n    constructor(brsAuth: BrsAuth, brsUrlProvider: BrsUrlProvider) {\r\n        this.brsAuth = brsAuth;\r\n        this.brsUrlProvider = brsUrlProvider;\r\n    }\r\n\r\n    async getDisciplineCachedAsync(\r\n        year: number,\r\n        termType: TermType,\r\n        course: number,\r\n        isModule: boolean\r\n    ) {\r\n        const cacheName = `${this.brsAuth.login}_getDiscipline_${year}_${termType}_${course}_${isModule}`;\r\n        const cacheResult = cache.read<Discipline[]>(cacheName, StorageType.Local);\r\n        if (cacheResult) {\r\n            return cacheResult;\r\n        }\r\n\r\n        const result = await this.getDisciplineInternalAsync(\r\n            year,\r\n            termType,\r\n            course,\r\n            isModule\r\n        );\r\n        cache.save(cacheName, result, StorageType.Local);\r\n        return result;\r\n    }\r\n\r\n    async getDisciplineInternalAsync(\r\n        year: number,\r\n        termType: TermType,\r\n        course: number,\r\n        isModule: boolean\r\n    ) {\r\n        const queryString = `?year=${year}&termType=${termType}&course=${course}&total=0&page=1&pageSize=1000&search=`;\r\n        if (isModule) {\r\n            const paging = await this.requestApiJsonAsync<Paging<Discipline>>(\r\n                '/mvc/mobile/module/fetch' + queryString\r\n            );\r\n            const disciplines = paging.content;\r\n            for (const d of disciplines) {\r\n                d.isModule = true;\r\n            }\r\n            return disciplines;\r\n        } else {\r\n            const paging = await this.requestApiJsonAsync<Paging<Discipline>>(\r\n                '/mvc/mobile/discipline/fetch' + queryString\r\n            );\r\n            const disciplines = paging.content;\r\n            for (const d of disciplines) {\r\n                d.isModule = false;\r\n            }\r\n            return disciplines;\r\n        }\r\n    }\r\n\r\n    async getAllStudentMarksAsync(discipline: Discipline) {\r\n        const students = [\r\n            ...(await this.getStudentMarksAsync(discipline, 'lecture', 'current')),\r\n            ...(await this.getStudentMarksAsync(discipline, 'lecture', 'intermediate')),\r\n            ...(await this.getStudentMarksAsync(discipline, 'laboratory', 'current')),\r\n            ...(await this.getStudentMarksAsync(discipline, 'laboratory', 'intermediate')),\r\n        ];\r\n\r\n        const uniqueStudents: { [id: string]: StudentMark } = {};\r\n        for (const s of students) {\r\n            const knownStudent = uniqueStudents[s.studentUuid] || {};\r\n            uniqueStudents[s.studentUuid] = {...knownStudent, ...s};\r\n        }\r\n\r\n        return Object.keys(uniqueStudents).map(k => uniqueStudents[k]);\r\n    }\r\n\r\n    async getStudentMarksAsync(\r\n        discipline: Discipline,\r\n        cardType: CardType,\r\n        markType: MarkType\r\n    ) {\r\n        return this.getStudentMarksInternalAsync(\r\n            discipline.disciplineLoad,\r\n            discipline.isModule,\r\n            discipline.groupHistoryId,\r\n            discipline.groupId,\r\n            cardType,\r\n            markType\r\n        );\r\n    }\r\n\r\n    async getStudentMarksInternalAsync(\r\n        disciplineLoad: string,\r\n        isModule: boolean,\r\n        groupUuid: string,\r\n        techgroup: string,\r\n        cardType: CardType,\r\n        markType: MarkType,\r\n        isTotal: boolean = false,\r\n        showActiveStudents: boolean = false\r\n    ) {\r\n        const groupPart = isModule\r\n            ? `techgroup=${techgroup}`\r\n            : `groupUuid=${groupUuid}`;\r\n        return this.requestApiJsonAsync<StudentMark[]>(\r\n            `/mvc/mobile/studentMarks/fetch?disciplineLoad=${disciplineLoad}&${groupPart}` +\r\n            `&cardType=${cardType}&hasTest=false&isTotal=${isTotal}` +\r\n            `&intermediate=${markType === 'intermediate'}` +\r\n            `&selectedTeachers=null&showActiveStudents=${showActiveStudents}`\r\n        );\r\n    }\r\n\r\n    async getAllControlActionsCachedAsync(discipline: Discipline) {\r\n        return [\r\n            ...(await this.getControlActionsCachedAsync(discipline, 'lecture', 'current')),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'lecture',\r\n                'intermediate'\r\n            )),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'laboratory',\r\n                'current'\r\n            )),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'laboratory',\r\n                'intermediate'\r\n            )),\r\n            ...(await this.getControlActionsCachedAsync(discipline, 'practice', 'current')),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'practice',\r\n                'intermediate'\r\n            )),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'additionalPractice',\r\n                'current'\r\n            )),\r\n            ...(await this.getControlActionsCachedAsync(\r\n                discipline,\r\n                'additionalPractice',\r\n                'intermediate'\r\n            )),\r\n        ];\r\n    }\r\n\r\n    async getControlActionsCachedAsync(\r\n        discipline: Discipline,\r\n        cardType: CardType,\r\n        markType: MarkType\r\n    ) {\r\n        const cacheName = `${this.brsAuth.login}_getControlActions_${discipline.disciplineLoad}` +\r\n            `_${discipline.isModule}_${discipline.groupHistoryId}_${discipline.groupId}_${cardType}_${markType}`;\r\n        const cacheResult = cache.read<ControlAction[]>(cacheName, StorageType.Local);\r\n        if (cacheResult) {\r\n            return cacheResult;\r\n        }\r\n\r\n        const result = await this.getControlActionsInternalAsync(\r\n            discipline.disciplineLoad,\r\n            discipline.isModule,\r\n            discipline.groupHistoryId,\r\n            discipline.groupId,\r\n            cardType,\r\n            markType\r\n        );\r\n        cache.save(cacheName, result, StorageType.Local);\r\n        return result;\r\n    }\r\n\r\n    async getControlActionsInternalAsync(\r\n        disciplineLoad: string,\r\n        isModule: boolean,\r\n        groupUuid: string,\r\n        techgroup: string,\r\n        cardType: CardType,\r\n        markType: MarkType\r\n    ) {\r\n        const modulePart = isModule ? '/module' : '';\r\n        const groupPart = isModule ? techgroup : groupUuid;\r\n        const response = await this.requestApiAsync<string>(\r\n            `/mvc/mobile/view/mark/${disciplineLoad}/${groupPart}/teachers${modulePart}/${cardType}/${markType}`\r\n        );\r\n\r\n        const prefix = 'gridColumns = toTextArray(';\r\n        const suffix = ');';\r\n        const linesWithId = response\r\n            .split('\\r\\n')\r\n            .map(s => s.trim())\r\n            .filter(s => s.startsWith(prefix));\r\n        if (linesWithId.length !== 1) {\r\n            throw new Error(\r\n                'Control actions page should contain single line target line with techcard identifier'\r\n            );\r\n        }\r\n\r\n        const columns: Array<{ controlAction: string; uuid: string }> =\r\n            JSON.parse(\r\n                linesWithId[0].substr(\r\n                    prefix.length,\r\n                    linesWithId[0].length - prefix.length - suffix.length\r\n                )\r\n            ) || [];\r\n\r\n        const uuidPrefix = 'technologyCard';\r\n        const result = columns\r\n            .filter(c => c.uuid && c.uuid.startsWith(uuidPrefix))\r\n            .map(c => ({\r\n                uuid: c.uuid,\r\n                uuidWithoutPrefix: c.uuid.substr(uuidPrefix.length),\r\n                controlAction: c.controlAction,\r\n            }));\r\n        return result as ControlAction[];\r\n    }\r\n\r\n    async putStudentMarkAsync(\r\n        studentUuid: string,\r\n        controlActionId: string,\r\n        mark: number,\r\n        groupId: string,\r\n        cardTypeKey: CardType,\r\n        disciplineLoadUuid: string\r\n    ) {\r\n        const body = `student=${studentUuid}&techcard=${controlActionId}&mark=${\r\n            isNaN(mark) ? '' : mark.toString()\r\n        }&groupId=${groupId}&cardTypeKey=${cardTypeKey}&disciplineLoadUuid=${disciplineLoadUuid}`;\r\n        return this.requestApiJsonAsync<StudentMark>(\r\n            `/mvc/mobile/studentMarks/put`,\r\n            {\r\n                method: 'POST',\r\n                body,\r\n                json: false,\r\n            },\r\n            {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            }\r\n        );\r\n    }\r\n\r\n    async putStudentFailureAsync(\r\n        studentUuid: string,\r\n        discipline: Discipline,\r\n        studentFailure: StudentFailure = StudentFailure.NoFailure,\r\n        cardType: CardType = 'lecture'\r\n    ) {\r\n        const body = `markFailure=${studentFailure}&cardType=${cardType}&disciplineLoad=${discipline.disciplineLoad}&studentId=${studentUuid}`;\r\n        await this.requestApiAsync(\r\n            `/mvc/mobile/failure/update`,\r\n            {\r\n                method: 'POST',\r\n                body,\r\n                json: false,\r\n            },\r\n            {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            }\r\n        );\r\n    }\r\n\r\n    async updateAllMarksAsync(discipline: Discipline) {\r\n        // Одного вызова достаточно, чтобы обновить все оценки по предмету у группы.\r\n        await this.updateMarksAsync(discipline, 'lecture', 'intermediate');\r\n        // await updateMarksAsync(discipline, 'lecture', 'current');\r\n        // await updateMarksAsync(discipline, 'lecture', 'intermediate');\r\n        // await updateMarksAsync(discipline, 'laboratory', 'current');\r\n        // await updateMarksAsync(discipline, 'laboratory', 'intermediate');\r\n        // await updateMarksAsync(discipline, 'practice', 'current');\r\n        // await updateMarksAsync(discipline, 'practice', 'intermediate');\r\n    }\r\n\r\n    async updateMarksAsync(\r\n        discipline: Discipline,\r\n        cardType: CardType,\r\n        markType: MarkType\r\n    ) {\r\n        return this.updateMarksInternalAsync(\r\n            discipline.disciplineLoad,\r\n            discipline.isModule,\r\n            discipline.groupHistoryId,\r\n            discipline.groupId,\r\n            cardType,\r\n            markType\r\n        );\r\n    }\r\n\r\n    async updateMarksInternalAsync(\r\n        disciplineLoad: string,\r\n        isModule: boolean,\r\n        groupUuid: string,\r\n        techgroup: string,\r\n        cardType: CardType,\r\n        markType: MarkType\r\n    ) {\r\n        const modulePart = isModule ? '/module' : '';\r\n        const groupPart = isModule\r\n            ? `techgroup=${techgroup}`\r\n            : `groupUuid=${groupUuid}`;\r\n        const body =\r\n            `disciplineLoad=${disciplineLoad}&${groupPart}` +\r\n            `&cardType=${cardType}&hasTest=false&isTotal=false` +\r\n            `&intermediate=${markType === 'intermediate'}` +\r\n            `&selectedTeachers=null&showActiveStudents=true`;\r\n        return this.requestApiAsync<string>(\r\n            `/mvc/mobile/updateMarks${modulePart}`,\r\n            {\r\n                method: 'POST',\r\n                body,\r\n                json: false,\r\n            },\r\n            {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            }\r\n        );\r\n    }\r\n\r\n    async requestApiJsonAsync<T>(\r\n        uri: string,\r\n        options?: RequestOptions,\r\n        headers?: RequestHeaders\r\n    ): Promise<T> {\r\n        const response = await this.requestApiAsync<string>(uri, options, headers);\r\n\r\n        return JSON.parse(response);\r\n    }\r\n\r\n    async requestApiAsync<T>(\r\n        uri: string,\r\n        options?: RequestOptions,\r\n        headers?: RequestHeaders\r\n    ): Promise<T> {\r\n        const response = await request({\r\n            method: 'GET',\r\n            ...options,\r\n            url: this.brsUrlProvider.baseUrl + uri,\r\n            headers: {\r\n                'X-Cookie': `JSESSIONID=${this.brsAuth.sid}`,\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                ...headers,\r\n            },\r\n        });\r\n\r\n        if (response.trimLeft().startsWith('<!DOCTYPE html>')) {\r\n            throw new CustomError(StatusCode.BrsUnauthorized, uri + ' is Forbidden');\r\n        }\r\n\r\n        return response;\r\n    }\r\n}\r\n\r\nexport enum StudentFailure {\r\n    /** -, дефис, все хорошо */ NoFailure = -1,\r\n    /** Не выбрана */ NotChosen = -19,\r\n    /** Не допущен (деканат) */ NotAllowedByDeansOffice = -18,\r\n    /** Не явился */ NotAppeared = 0,\r\n    /** Неуважительная */ DisrespectfulReason = 12,\r\n    /** Уважительная */ RespectfulReason = 13,\r\n    /** Не допущен */ NotAllowedByTeacher = 18,\r\n    /** Не должен сдавать */ ShouldNotPass = 19,\r\n    /** Академический отпуск */ AcademicLeave = 20,\r\n    /** Выбыл */ DroppedOut = 21,\r\n}\r\n\r\nexport enum TermType {\r\n    Fall = 1,\r\n    Spring = 2,\r\n}\r\n\r\nexport type CardType = 'lecture' | 'laboratory' | 'practice' | 'additionalPractice';\r\nexport type MarkType = 'intermediate' | 'current';\r\n\r\nexport interface RegisterInfo {\r\n    registerInfoStr: string;\r\n    registerId: number;\r\n    passDate: any;\r\n    cardType: string;\r\n    sheet: string;\r\n}\r\n\r\nexport interface Discipline {\r\n    groupId: string;\r\n    discipline: string;\r\n    group: string;\r\n    registerInfo: RegisterInfo[];\r\n    disciplineLoad: string;\r\n    groupHistoryId: string;\r\n    isModule: boolean;\r\n}\r\n\r\n// eslint-disable-next-line\r\nconst studentMarkSample: StudentMark = {\r\n    studentPersonalNumber: '09800106',\r\n    isEdit: false,\r\n    studentUuid:\r\n        'studen18hc2jg0000magk6mi3iec84bsundigr18hc2jg0000m53o7mlgvora278',\r\n    status: 1,\r\n    studentStatus: 'Активный',\r\n    ignoreCurrentDebars: false,\r\n    studentFio: 'Анисимова Маргарита Васильевна',\r\n    isExtern: false,\r\n    teacherName: '',\r\n    cardType: 'lecture',\r\n    studentName: 'Анисимова М.В.',\r\n    studentGroup: 'РИ-180001',\r\n    registerClosed: false,\r\n    subgroupsITS: '',\r\n    disciplineLoad: 'unpldd18hc2jg0000m5kojcd3te76bnk',\r\n};\r\n\r\nexport interface StudentMark {\r\n    studentPersonalNumber: string;\r\n    isEdit: boolean;\r\n    studentUuid: string;\r\n    status: number;\r\n    studentStatus: string;\r\n    ignoreCurrentDebars: boolean;\r\n    studentFio: string;\r\n    isExtern: boolean;\r\n    teacherName: string;\r\n    cardType: CardType;\r\n    studentName: string;\r\n    studentGroup: string;\r\n    registerClosed: boolean;\r\n    subgroupsITS: string;\r\n    disciplineLoad: string;\r\n    failure?: StudentFailure;\r\n    failureName?: string;\r\n\r\n    [props: string]: number | string | boolean | undefined;\r\n}\r\n\r\nexport interface ControlAction {\r\n    uuid: string;\r\n    uuidWithoutPrefix: string;\r\n    controlAction: string;\r\n}\r\n\r\ninterface RequestOptions {\r\n    method?: string;\r\n    body?: object | string;\r\n    json?: boolean;\r\n}\r\n\r\ninterface RequestHeaders {\r\n    'Content-Type'?: string;\r\n}\r\n\r\ninterface Paging<T> {\r\n    content: T[];\r\n    last: boolean;\r\n    totalPages: number;\r\n    totalElements: number;\r\n    size: number;\r\n    number: number;\r\n    sort: any;\r\n    first: boolean;\r\n    numberOfElements: number;\r\n}\r\n","export function fixSpaces(str: string) {\r\n    return str && str.replace(/[\\s]/g, ' ');\r\n}\r\n\r\nexport function normalizeString(str: string) {\r\n    return (\r\n        str &&\r\n        str\r\n            .toLowerCase()\r\n            .replace('ё', 'е')\r\n            .replace(/[^A-Za-zА-ЯЁа-яё0-9]/g, '')\r\n    );\r\n}\r\n\r\nexport function compareNormalized(s1: string, s2: string) {\r\n    return normalizeString(s1) === normalizeString(s2);\r\n}\r\n\r\nexport function parseAnyFloat(s: string) {\r\n    return parseFloat(s && s.replace(',', '.'));\r\n}\r\n\r\nexport function groupBy<TItem, TKey>(items: TItem[], key: keyof TItem) {\r\n    const reducer: { [group: string]: TItem[] } = {};\r\n    return items.reduce((reducer, item) => {\r\n        const itemKey = `${item[key]}`;\r\n        (reducer[itemKey] = reducer[itemKey] || []).push(item);\r\n        return reducer;\r\n    }, reducer);\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Checkbox,\r\n    createStyles,\r\n    FormControl,\r\n    FormControlLabel,\r\n    InputLabel,\r\n    makeStyles,\r\n    MenuItem,\r\n    Select,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport SubmitWithLoading from \"./submitWithLoading\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        termType: {\r\n            minWidth: 100,\r\n            marginRight: 10\r\n        },\r\n        year: {\r\n            width: 60,\r\n            marginRight: 10\r\n        },\r\n        course: {\r\n            width: 50,\r\n            marginRight: 10\r\n        },\r\n        submit: {\r\n            display: 'inline-block',\r\n            top: 5\r\n        },\r\n        isModule: {\r\n            marginTop: 15\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function ({loading, onSubmit}: Props) {\r\n    const classes = useStyles();\r\n\r\n    const [course, setCourse] = React.useState(1);\r\n    const [year, setYear] = React.useState(new Date().getFullYear());\r\n    const [termType, setTermType] = React.useState(getTermType());\r\n    const [isModule, setIsModule] = React.useState(false);\r\n\r\n    function handleChange(event: any) {\r\n        const target = event.target;\r\n        switch (target.name) {\r\n            case 'year':\r\n                setYear(target.value as number);\r\n                break;\r\n            case 'term-type':\r\n                setTermType(target.value as TermType);\r\n                break;\r\n            case 'course':\r\n                setCourse(target.value as number);\r\n                break;\r\n            case 'is-module':\r\n                setIsModule(target.checked as boolean);\r\n                break;\r\n        }\r\n    }\r\n\r\n    function handleSubmit(e: any) {\r\n        e.preventDefault();\r\n        onSubmit({course, year, isModule, termType});\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextField name=\"year\"\r\n                       className={classes.year}\r\n                       label=\"Год\"\r\n                       type=\"number\"\r\n                       value={year}\r\n                       onChange={handleChange}\r\n                       required/>\r\n            <FormControl className={classes.termType} required>\r\n                <InputLabel id=\"term-label\">Семестр</InputLabel>\r\n                <Select name=\"term-type\"\r\n                        value={termType}\r\n                        onChange={handleChange}>\r\n                    <MenuItem value=\"Осенний\">Осенний</MenuItem>\r\n                    <MenuItem value=\"Весенний\">Весенний</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <TextField name=\"course\"\r\n                       className={classes.course}\r\n                       label=\"Курс\"\r\n                       type=\"number\"\r\n                       value={course}\r\n                       onChange={handleChange}\r\n                       required/>\r\n            <FormControlLabel label=\"ИТС\"\r\n                              className={classes.isModule}\r\n                              control={<Checkbox name=\"is-module\"\r\n                                                 color=\"primary\"\r\n                                                 value={isModule}\r\n                                                 onChange={handleChange}/>}/>\r\n            <SubmitWithLoading title=\"вывести\" loading={loading} className={classes.submit}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nfunction getTermType(): TermType {\r\n    const date = new Date();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n\r\n    return (\r\n        month >= 9 ||           // September to December\r\n        month == 1 ||           // January\r\n        month == 2 && day <= 7) // Until February 7\r\n        ? \"Осенний\"\r\n        : \"Весенний\";\r\n}\r\n\r\nexport interface DisciplinesFetchData {\r\n    year: number;\r\n    termType: TermType;\r\n    course: number;\r\n    isModule: boolean;\r\n}\r\n\r\ninterface Props {\r\n    loading: boolean;\r\n    onSubmit: (fetchData: DisciplinesFetchData) => void;\r\n}\r\n\r\ntype TermType = \"Осенний\" | \"Весенний\";\r\n","import React, {memo} from \"react\";\r\nimport {Collapse, createStyles, makeStyles} from \"@material-ui/core\";\r\nimport NestedList, {NestedListItem} from \"./NestedList\";\r\nimport BrsApi, {Discipline, TermType} from \"../apis/brsApi\";\r\nimport {groupBy} from \"../helpers/tools\";\r\nimport DisciplinesFetchControls, {DisciplinesFetchData} from \"./DisciplinesFetchControls\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        header: {\r\n            marginTop: 10,\r\n            marginBottom: 10\r\n        },\r\n        disciplinesList: {\r\n            marginTop: 25\r\n        }\r\n    }),\r\n);\r\n\r\nfunction DisciplinesFetch({brsApi, onError}: Props) {\r\n    const classes = useStyles();\r\n\r\n    const [openDisciplines, setOpenDisciplines] = React.useState(false);\r\n    const [disciplines, setDisciplines] = React.useState([] as NestedListItem[]);\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    async function loadDisciplines(fetchData: DisciplinesFetchData) {\r\n        setLoading(true);\r\n\r\n        const termType = fetchData.termType === 'Осенний' ? TermType.Fall : TermType.Spring;\r\n        const {year, course, isModule} = fetchData;\r\n        let rawDisciplines: Discipline[];\r\n        \r\n        try {\r\n            rawDisciplines = await brsApi.getDisciplineCachedAsync(year, termType, course, isModule);\r\n        } catch (e) {\r\n            setLoading(false);\r\n            onError(e);\r\n            return;\r\n        }\r\n\r\n        setDisciplines(convertToListItems(rawDisciplines));\r\n        setLoading(false);\r\n        setOpenDisciplines(true);\r\n    }\r\n\r\n    function convertToListItems(disciplines: Discipline[]) {\r\n        return Object\r\n            .entries(groupBy(disciplines, 'discipline'))\r\n            .map(d => ({\r\n                title: d[0],\r\n                nestedItems: d[1].map(x => x.group)\r\n            }));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h3 className={classes.header}>Выбери параметры курса в БРС</h3>\r\n            <DisciplinesFetchControls loading={loading} onSubmit={loadDisciplines}/>\r\n            <Collapse in={openDisciplines} className={classes.disciplinesList}>\r\n                <NestedList title=\"Доступные дисциплины\" items={disciplines}/>\r\n            </Collapse>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default memo(DisciplinesFetch);\r\n\r\ninterface Props {\r\n    brsApi: BrsApi;\r\n    onError: (error: any) => void;\r\n}\r\n","export function getSpreadsheet(spreadsheetId: string): Spreadsheet {\r\n    // @ts-ignore\r\n    const sheets = gapi.client.sheets;\r\n\r\n    async function readAsync(range: string) {\r\n        const response = await sheets.spreadsheets.values.get({\r\n            spreadsheetId,\r\n            range,\r\n        });\r\n        return response.result;\r\n    }\r\n\r\n    function writeAsync(range: string, values: any[][], asEnteredByUser = false) {\r\n        const valueInputOption = asEnteredByUser ? \"USER_ENTERED\" : \"RAW\";\r\n        const requestBody = {\r\n            values,\r\n        };\r\n        return sheets.spreadsheets.values.update({\r\n            spreadsheetId,\r\n            range,\r\n            valueInputOption,\r\n            requestBody,\r\n        });\r\n    }\r\n\r\n    function appendAsync(\r\n        range: string,\r\n        values: any[][],\r\n        asEnteredByUser = false\r\n    ) {\r\n        const valueInputOption = asEnteredByUser ? \"USER_ENTERED\" : \"RAW\";\r\n        const requestBody = {\r\n            values,\r\n        };\r\n        return sheets.spreadsheets.values.append({\r\n            spreadsheetId,\r\n            range,\r\n            valueInputOption,\r\n            requestBody,\r\n        });\r\n    }\r\n\r\n    return {\r\n        readAsync,\r\n        writeAsync,\r\n        appendAsync,\r\n    };\r\n}\r\n\r\nexport async function getSpreadsheetProperties(spreadsheetId: string): Promise<SpreadsheetProperties[]> {\r\n    // @ts-ignore\r\n    const sheets = gapi.client.sheets;\r\n\r\n    const res = await sheets.spreadsheets.get({spreadsheetId});\r\n    const sheetProps = JSON.parse(res.body).sheets as [{ properties: SpreadsheetProperties }];\r\n    return sheetProps.map(s => s.properties)\r\n}\r\n\r\nexport interface Spreadsheet {\r\n    readAsync: (range: string) => Promise<ValueRange>;\r\n    writeAsync: (\r\n        range: string,\r\n        values: any[][],\r\n        asEnteredByUser?: boolean\r\n    ) => Promise<any>;\r\n    appendAsync: (\r\n        range: string,\r\n        values: any[][],\r\n        asEnteredByUser?: boolean\r\n    ) => Promise<any>;\r\n}\r\n\r\nexport interface ValueRange {\r\n    majorDimension?: string | null;\r\n    range?: string | null;\r\n    values?: any[][] | null;\r\n}\r\n\r\nexport interface SpreadsheetProperties {\r\n    sheetId: number;\r\n    title: string;\r\n}\r\n","import { StudentFailure } from '../apis/brsApi';\r\nimport { compareNormalized } from './tools';\r\n\r\nconst failureMapping: { [key: string]: StudentFailure } = {\r\n    '-': StudentFailure.NoFailure,\r\n    'Не выбрана': StudentFailure.NotChosen,\r\n    'Не допущен (деканат)': StudentFailure.NotAllowedByDeansOffice,\r\n    'Не явился': StudentFailure.NotAppeared,\r\n    Неуважительная: StudentFailure.DisrespectfulReason,\r\n    Уважительная: StudentFailure.RespectfulReason,\r\n    'Не допущен': StudentFailure.NotAllowedByTeacher,\r\n    'Не должен сдавать': StudentFailure.ShouldNotPass,\r\n    'Академический отпуск': StudentFailure.AcademicLeave,\r\n    Выбыл: StudentFailure.DroppedOut,\r\n};\r\n\r\nexport function parseStudentFailure(input: string): StudentFailure | null {\r\n    if (input === null || input === undefined) {\r\n        return null;\r\n    }\r\n\r\n    for (let key of Object.keys(failureMapping)) {\r\n        if (compareNormalized(key, input)) {\r\n            return failureMapping[key];\r\n        }\r\n    }\r\n\r\n    return StudentFailure.NoFailure;\r\n}\r\n\r\nexport function formatStudentFailure(\r\n    input: StudentFailure | null | undefined\r\n): string | null {\r\n    if (input === null || input === undefined) {\r\n        return null;\r\n    }\r\n\r\n    for (let key of Object.keys(failureMapping)) {\r\n        if (failureMapping[key] === input) {\r\n            return key;\r\n        }\r\n    }\r\n\r\n    return '-';\r\n}\r\n","import { StudentFailure } from '../apis/brsApi';\r\nimport * as googleApi from '../apis/googleApi';\r\nimport { parseStudentFailure } from '../helpers/brsHelpers';\r\n\r\nexport interface ActualStudent {\r\n    fullName: string;\r\n    groupName: string;\r\n    id: string | null;\r\n    failure: StudentFailure | null;\r\n    properties: string[];\r\n}\r\n\r\nexport async function fromSpreadsheetAsync(\r\n    spreadsheetId: string,\r\n    readRange: string,\r\n    fullNameIndex: number = 0,\r\n    groupNameIndex: number = 1,\r\n    idIndex: number | null = null,\r\n    failureIndex: number | null = null\r\n) {\r\n    const sheet = googleApi.getSpreadsheet(spreadsheetId);\r\n\r\n    const rows = (await sheet.readAsync(readRange)).values || [];\r\n\r\n    const result: ActualStudent[] = [];\r\n    for (const row of rows) {\r\n        const fullName = row[fullNameIndex];\r\n        const groupName = row[groupNameIndex];\r\n        const id = idIndex !== null ? row[idIndex] : null;\r\n        const failure =\r\n            failureIndex !== null\r\n                ? parseStudentFailure(row[failureIndex])\r\n                : null;\r\n        if (fullName && groupName) {\r\n            result.push({\r\n                fullName,\r\n                groupName,\r\n                id: id,\r\n                failure: failure,\r\n                properties: row,\r\n            });\r\n        }\r\n    }\r\n    return result;\r\n}\r\n","import { TermType, Discipline, StudentFailure } from '../apis/brsApi';\r\nimport { MarksData, DisciplineConfig } from '../marksActions/MarksManager';\r\nimport * as readStudents from './readStudentsAsync';\r\nimport { ActualStudent } from './readStudentsAsync';\r\nimport * as googleApi from '../apis/googleApi';\r\nimport { normalizeString, compareNormalized } from '../helpers/tools';\r\nimport { parseStudentFailure } from '../helpers/brsHelpers';\r\nimport { ControlActionConfig } from '../marksActions/MarksManager';\r\n\r\nexport default async function buildAutoMarksConfigAsync(\r\n    spreadsheetId: string,\r\n    sheetName: string,\r\n    isSuitableDiscipline: ((d: Discipline) => boolean) | null = null,\r\n    isSuitableActualStudent: ((s: ActualStudent) => boolean) | null = null\r\n): Promise<MarksData> {\r\n    const rows = await readRowsFromSpreadsheetAsync(spreadsheetId, sheetName);\r\n    const header = getHeader(rows);\r\n\r\n    const indices = buildIndicesBy(header);\r\n    const dataRange = buildDataRange(sheetName, indices);\r\n    const controlActionConfigs = buildControlActionConfig(header, indices);\r\n    const disciplineConfig = buildDisciplineConfig(\r\n        rows,\r\n        indices,\r\n        isSuitableDiscipline\r\n    );\r\n\r\n    const allActualStudents = await readStudents.fromSpreadsheetAsync(\r\n        spreadsheetId,\r\n        dataRange,\r\n        indices.fullNameColumn - indices.left,\r\n        indices.groupColumn - indices.left,\r\n        null,\r\n        indices.failureColumn - indices.left\r\n    );\r\n    const actualStudents = isSuitableActualStudent\r\n        ? allActualStudents.filter(isSuitableActualStudent)\r\n        : allActualStudents;\r\n\r\n    return {\r\n        actualStudents,\r\n        disciplineConfig,\r\n        controlActionConfigs,\r\n    };\r\n}\r\n\r\nasync function readRowsFromSpreadsheetAsync(\r\n    spreadsheetId: string,\r\n    sheetName: string\r\n) {\r\n    const sheet = googleApi.getSpreadsheet(spreadsheetId);\r\n    const rows = (await sheet.readAsync(sheetName + '!A1:ZZ100'))\r\n        .values as string[][];\r\n    return rows || null;\r\n}\r\n\r\nfunction getHeader(rows: string[][]) {\r\n    const header = rows && rows[0];\r\n    if (!header) throw new Error(`Can't read header of spreadsheet`);\r\n    return header;\r\n}\r\n\r\nfunction buildIndicesBy(header: string[]): Indices {\r\n    const defaultGroupColumnName = 'Группа в БРС';\r\n    const defaultFullNameColumnName = 'Фамилия Имя в БРС';\r\n    const defaultFailureColumnName = 'Причина отсутствия';\r\n    const disciplineParameterKeyColumnPrefix = 'Названия параметров';\r\n    const disciplineParameterValueColumnPrefix = 'Значения параметров';\r\n\r\n    const normalizedHeader = header && header.map((s) => normalizeString(s));\r\n    const groupColumnIndex = normalizedHeader.indexOf(\r\n        normalizeString(defaultGroupColumnName)\r\n    );\r\n    const fullNameColumnIndex = normalizedHeader.indexOf(\r\n        normalizeString(defaultFullNameColumnName)\r\n    );\r\n    const failureColumnIndex = normalizedHeader.indexOf(\r\n        normalizeString(defaultFailureColumnName)\r\n    );\r\n    const disciplineParameterKeyColumnIndex = normalizedHeader.indexOf(\r\n        normalizeString(disciplineParameterKeyColumnPrefix)\r\n    );\r\n    const disciplineParameterValueColumnIndex = normalizedHeader.indexOf(\r\n        normalizeString(disciplineParameterValueColumnPrefix)\r\n    );\r\n\r\n    if (\r\n        failureColumnIndex < 0 ||\r\n        groupColumnIndex < 0 ||\r\n        fullNameColumnIndex < 0 ||\r\n        groupColumnIndex > failureColumnIndex ||\r\n        fullNameColumnIndex > failureColumnIndex ||\r\n        Math.abs(fullNameColumnIndex - groupColumnIndex) !== 1 ||\r\n        disciplineParameterKeyColumnIndex < 0 ||\r\n        disciplineParameterValueColumnIndex < 0 ||\r\n        disciplineParameterKeyColumnIndex <= failureColumnIndex ||\r\n        disciplineParameterValueColumnIndex <= failureColumnIndex ||\r\n        disciplineParameterValueColumnIndex !==\r\n            disciplineParameterKeyColumnIndex + 1\r\n    )\r\n        throw new Error(`Wrong order of columns`);\r\n    const leftIndex = Math.min(groupColumnIndex, fullNameColumnIndex);\r\n    const rightIndex = failureColumnIndex;\r\n\r\n    return {\r\n        groupColumn: groupColumnIndex,\r\n        fullNameColumn: fullNameColumnIndex,\r\n        failureColumn: failureColumnIndex,\r\n        disciplineKeyColumn: disciplineParameterKeyColumnIndex,\r\n        disciplineValueColumn: disciplineParameterValueColumnIndex,\r\n        left: leftIndex,\r\n        right: rightIndex,\r\n    };\r\n}\r\n\r\nfunction buildDataRange(sheetName: string, indices: Indices) {\r\n    const leftLetter = String.fromCharCode('A'.charCodeAt(0) + indices.left);\r\n    const rightLetter = String.fromCharCode('A'.charCodeAt(0) + indices.right);\r\n    return `${sheetName}!${leftLetter}2:${rightLetter}`;\r\n}\r\n\r\nfunction buildControlActionConfig(header: string[], indices: Indices) {\r\n    const controlActionConfigs: ControlActionConfig[] = [];\r\n    for (let index = indices.left; index <= indices.right; index++) {\r\n        if (\r\n            index === indices.groupColumn ||\r\n            index === indices.fullNameColumn ||\r\n            index === indices.failureColumn ||\r\n            !header[index]\r\n        ) {\r\n            continue;\r\n        }\r\n        controlActionConfigs.push({\r\n            controlActions: [header[index]],\r\n            propertyIndex: index - indices.left,\r\n        });\r\n    }\r\n\r\n    for (const config of controlActionConfigs) {\r\n        if (config.controlActions.length === 1) {\r\n            const sameColumns = controlActionConfigs.filter(\r\n                (c) =>\r\n                    c.controlActions.length === 1 &&\r\n                    compareNormalized(\r\n                        c.controlActions[0],\r\n                        config.controlActions[0]\r\n                    )\r\n            );\r\n            if (sameColumns.length > 1) {\r\n                config.matchCount = sameColumns.length;\r\n                for (\r\n                    let matchIndex = 0;\r\n                    matchIndex < sameColumns.length;\r\n                    matchIndex++\r\n                ) {\r\n                    sameColumns[matchIndex].matchIndex = matchIndex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return controlActionConfigs;\r\n}\r\n\r\nfunction buildDisciplineConfig(\r\n    rows: string[][],\r\n    indices: Indices,\r\n    isSuitableDiscipline: ((d: Discipline) => boolean) | null\r\n) {\r\n    const result: DisciplineConfig = {\r\n        name: '',\r\n        year: 0,\r\n        termType: TermType.Fall,\r\n        course: 1,\r\n        isModule: false,\r\n        defaultStudentFailure: StudentFailure.NoFailure,\r\n        isSuitableDiscipline: null,\r\n    };\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n        const key = rows[i][indices.disciplineKeyColumn]?.trim();\r\n        if (!key) {\r\n            break;\r\n        }\r\n        const value = rows[i][indices.disciplineValueColumn]?.trim();\r\n        addDisciplineConfigParameter(result, key, value);\r\n    }\r\n\r\n    result.isSuitableDiscipline = isSuitableDiscipline;\r\n    return result;\r\n}\r\n\r\nfunction addDisciplineConfigParameter(\r\n    config: DisciplineConfig,\r\n    key: string,\r\n    value: string\r\n) {\r\n    if (compareNormalized(key, 'Дисциплина')) {\r\n        if (value) {\r\n            config.name = value;\r\n        }\r\n    } else if (compareNormalized(key, 'ИТС')) {\r\n        if (value) {\r\n            config.isModule = value.toLowerCase() === 'да';\r\n        }\r\n    } else if (compareNormalized(key, 'Год')) {\r\n        if (value) {\r\n            config.year = parseInt(value.toLowerCase(), 10);\r\n        }\r\n    } else if (compareNormalized(key, 'Семестр')) {\r\n        if (value) {\r\n            if (value.toLowerCase() === 'осенний') {\r\n                config.termType = TermType.Fall;\r\n            } else if (value.toLowerCase() === 'весенний') {\r\n                config.termType = TermType.Spring;\r\n            }\r\n        }\r\n    } else if (compareNormalized(key, 'Курс')) {\r\n        if (value) {\r\n            const lowerValue = value.toLowerCase().trim();\r\n            if (lowerValue === 'все курсы') {\r\n                config.course = 0;\r\n            } else {\r\n                config.course = parseInt(value.toLowerCase(), 10);\r\n            }\r\n        }\r\n    } else if (compareNormalized(key, 'Причина отсутствия по умолчанию')) {\r\n        config.defaultStudentFailure =\r\n            parseStudentFailure(value) ?? StudentFailure.NoFailure;\r\n    }\r\n}\r\n\r\ninterface Indices {\r\n    groupColumn: number;\r\n    fullNameColumn: number;\r\n    failureColumn: number;\r\n    disciplineKeyColumn: number;\r\n    disciplineValueColumn: number;\r\n    left: number;\r\n    right: number;\r\n}\r\n","import React, {FormEvent, memo} from \"react\";\r\nimport buildAutoMarksConfigAsync from \"../../functions/buildAutoMarksConfigAsync\";\r\nimport NestedList, {NestedListItem} from \"../NestedList\";\r\nimport {Collapse, TextField} from \"@material-ui/core\";\r\nimport SubmitWithLoading from \"../submitWithLoading\";\r\nimport {MarksData} from \"../../marksActions/MarksManager\";\r\nimport './styles.css';\r\nimport {getSpreadsheetProperties} from \"../../apis/googleApi\";\r\n\r\nclass SpreadsheetFetch extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tableUrl: '',\r\n            loading: false,\r\n            tableUrlError: {error: false, message: ''},\r\n            moduleGroups: []\r\n        };\r\n\r\n    }\r\n\r\n    handleChange = (event: React.ChangeEvent<{ name?: string | undefined, value: unknown }>) => {\r\n        const target = event.target;\r\n        switch (target.name) {\r\n            case 'table-url':\r\n                if (this.state.tableUrlError.error)\r\n                    this.setState({tableUrlError: {error: false, message: ''}});\r\n                this.setState({tableUrl: target.value as string});\r\n        }\r\n    }\r\n\r\n    prepareModuleGroup(marksData: MarksData): NestedListItem {\r\n        const groups = marksData.actualStudents.map(s => s.groupName);\r\n        return {\r\n            title: marksData.disciplineConfig.name,\r\n            nestedItems: Array.from(new Set(groups))\r\n        }\r\n    }\r\n\r\n    loadTable = async (e: FormEvent) => {\r\n        e.preventDefault();\r\n        this.setState({loading: true});\r\n\r\n        const spreadsheetInfo = await this.getSpreadsheetInfo();\r\n        if (!spreadsheetInfo) {\r\n            this.setState({loading: false});\r\n            return;\r\n        }\r\n\r\n        let marksData: MarksData;\r\n        try {\r\n            marksData = await buildAutoMarksConfigAsync(spreadsheetInfo.spreadsheetId, spreadsheetInfo.sheetName);\r\n        } catch (e) {\r\n            this.setState({loading: false})\r\n            this.props.onError(e.message || JSON.stringify(e));\r\n            return;\r\n        }\r\n        const moduleGroup = this.prepareModuleGroup(marksData);\r\n\r\n        this.setState({\r\n            loading: false,\r\n            moduleGroups: [moduleGroup]\r\n        });\r\n        this.props.onDataLoaded?.call(null, marksData);\r\n    }\r\n\r\n    async getSpreadsheetInfo(): Promise<{ spreadsheetId: string, sheetName: string } | null> {\r\n        const regExp = /d\\/(?<spreadsheetId>[a-zA-Z0-9-_]+)\\/edit(#gid=(?<sheetId>[0-9]+))?/;\r\n        const result = this.state.tableUrl.match(regExp);\r\n\r\n        if (!result?.groups || !result.groups.spreadsheetId) {\r\n            this.setState({\r\n                loading: false,\r\n                tableUrlError: {error: true, message: 'Неверный url-адрес.'}\r\n            });\r\n            return null;\r\n        }\r\n        const spreadsheetId = result.groups.spreadsheetId;\r\n        const maybeSheetId = result.groups.sheetId || null;\r\n\r\n        try {\r\n            const spreadsheetProperties = await getSpreadsheetProperties(spreadsheetId);\r\n            const maybeSheet = maybeSheetId\r\n                ? spreadsheetProperties.filter(s => s.sheetId.toString() === maybeSheetId)[0]\r\n                : spreadsheetProperties[0];\r\n            if (!maybeSheet) {\r\n                this.props.onError('Sheet is not found');\r\n                return null;\r\n            }\r\n            const sheetName = maybeSheet.title;\r\n            return {spreadsheetId, sheetName};\r\n        } catch (e) {\r\n            this.props.onError(e.message || JSON.stringify(e));\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className={'spreadsheet-fetch'}>\r\n                <h3 className={'vertical-margin-medium'}>Вставь ссылку на Google Таблицу</h3>\r\n                <form onSubmit={this.loadTable} className={'vertical-margin-medium'}>\r\n                    <TextField name=\"table-url\"\r\n                               label=\"Ссылка\"\r\n                               type=\"text\"\r\n                               className={'tableUrl'}\r\n                               value={this.state.tableUrl}\r\n                               onChange={this.handleChange}\r\n                               error={this.state.tableUrlError.error}\r\n                               helperText={this.state.tableUrlError.message}\r\n                               required/>\r\n                    <SubmitWithLoading title=\"загрузить\"\r\n                                       loading={this.state.loading}\r\n                                       className={'submit'}/>\r\n                </form>\r\n                <Collapse in={!!this.state.moduleGroups.length} className={\"vertical-margin-medium\"}>\r\n                    <NestedList items={this.state.moduleGroups} collapsed={false}/>\r\n                </Collapse>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default memo(SpreadsheetFetch);\r\n\r\ninterface Props {\r\n    onDataLoaded: (data: MarksData) => void;\r\n    onError: (errorMessage: string) => void;\r\n}\r\n\r\ninterface State {\r\n    tableUrl: string;\r\n    loading: boolean;\r\n    tableUrlError: { error: boolean, message: string };\r\n    moduleGroups: NestedListItem[];\r\n}\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Dialog, List, ListItem, ListItemText} from \"@material-ui/core\";\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport SubmitWithLoading from \"./submitWithLoading\";\r\nimport MarksManager, {MarksData} from \"../marksActions/MarksManager\";\r\n\r\nconst DialogContent = withStyles(() => ({\r\n    root: {\r\n        padding: 0,\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(() => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around'\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nexport default class WorkerDialog extends React.Component<Props, State> {\r\n    marksManager: MarksManager;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.marksManager = props.marksManager;\r\n\r\n        this.state = {\r\n            okLoading: true,\r\n            cancelPending: false,\r\n            logItems: [],\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startWork();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.cancelWork();\r\n    }\r\n\r\n    logMessage = (message: string) => {\r\n        this.setState({logItems: [...this.state.logItems, message]});\r\n    }\r\n\r\n    startWork = async () => {\r\n        this.marksManager.getLogger().addLogHandler(this.logMessage);\r\n\r\n        await this.marksManager.putMarksToBrsAsync(this.props.marksData);\r\n\r\n        this.marksManager.getLogger().removeLogHandler(this.logMessage);\r\n\r\n        this.setState({\r\n            cancelPending: false,\r\n            okLoading: false\r\n        });\r\n    }\r\n\r\n    cancelWork = () => {\r\n        this.setState({cancelPending: true});\r\n        this.marksManager.cancel();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Dialog open={this.props.runWork} maxWidth=\"lg\" fullWidth>\r\n                    <MuiDialogTitle>Лог действий</MuiDialogTitle>\r\n                    <DialogContent dividers>\r\n                        <List dense disablePadding style={{minHeight: 400}}>\r\n                            {this.state.logItems.map((item, index) => (\r\n                                <ListItem key={index} style={{paddingTop: 0, paddingBottom: 0}}>\r\n                                    <ListItemText primary={item} style={{marginTop: 2, marginBottom: 2}}/>\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <SubmitWithLoading loading={this.state.okLoading}\r\n                                           onClick={this.props.onClosed}\r\n                                           title=\"ок\"/>\r\n                        <SubmitWithLoading loading={this.state.cancelPending}\r\n                                           disabled={!this.state.okLoading}\r\n                                           onClick={this.cancelWork}\r\n                                           title=\"отмена\"/>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\ninterface Props {\r\n    runWork: boolean;\r\n    marksManager: MarksManager;\r\n    marksData: MarksData;\r\n    onClosed: () => void;\r\n}\r\n\r\ninterface State {\r\n    okLoading: boolean;\r\n    cancelPending: boolean;\r\n    logItems: string[];\r\n}\r\n","export function toShow(fio: string) {\r\n    return fio.replace('ё', 'е').replace(/[ ]+/, ' ');\r\n}\r\n\r\nexport function toKey(fio: string) {\r\n    return fio.toLowerCase().replace('ё', 'е').replace(/[ ]+/, ' ').trim();\r\n}\r\n","import BrsApi from '../apis/brsApi';\r\nimport {\r\n    ControlAction,\r\n    Discipline,\r\n    StudentMark,\r\n    StudentFailure,\r\n} from '../apis/brsApi';\r\nimport { parseAnyFloat, compareNormalized } from '../helpers/tools';\r\nimport * as fio from '../helpers/fio';\r\nimport { ActualStudent } from '../functions/readStudentsAsync';\r\nimport { formatStudentFailure } from '../helpers/brsHelpers';\r\nimport { Logger } from '../helpers/logger';\r\n\r\nexport default class DisciplineMarksManager {\r\n    private readonly brsApi: BrsApi;\r\n    private readonly options: PutMarksOptions;\r\n    readonly logger: Logger;\r\n\r\n    constructor(brsApi: BrsApi, logger: Logger, options: PutMarksOptions) {\r\n        this.brsApi = brsApi;\r\n        this.logger = logger;\r\n        this.options = options;\r\n    }\r\n\r\n    async putMarksForDisciplineAsync(\r\n        discipline: Discipline,\r\n        actualStudents: ActualStudent[],\r\n        defaultStudentFailure: StudentFailure,\r\n        controlActionConfigs: ControlActionConfig[]\r\n    ) {\r\n        if (actualStudents.length === 0) return;\r\n        this.logger.log(`# Processing group ${discipline.group}`);\r\n        this.logger.log('');\r\n\r\n        const controlActions = await this.brsApi.getAllControlActionsCachedAsync(\r\n            discipline\r\n        );\r\n        if (\r\n            !this.checkControlActionsConfiguration(\r\n                controlActions,\r\n                controlActionConfigs\r\n            )\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        const brsStudents = await this.brsApi.getAllStudentMarksAsync(\r\n            discipline\r\n        );\r\n        const {\r\n            mergedStudents,\r\n            skippedActualStudents,\r\n            skippedBrsStudents,\r\n        } = this.mergeStudents(actualStudents, brsStudents);\r\n        this.logMergedStudents(\r\n            mergedStudents,\r\n            skippedActualStudents,\r\n            skippedBrsStudents\r\n        );\r\n        this.logger.log('');\r\n\r\n        await this.putMarksForStudentsAsync(\r\n            discipline,\r\n            mergedStudents,\r\n            controlActionConfigs,\r\n            controlActions\r\n        );\r\n        this.logger.log('');\r\n\r\n        await this.updateFailuresForSkippedStudentsAsync(\r\n            skippedBrsStudents,\r\n            discipline,\r\n            defaultStudentFailure\r\n        );\r\n        this.logger.log('');\r\n\r\n        if (this.options.save) {\r\n            await this.brsApi.updateAllMarksAsync(discipline);\r\n        }\r\n\r\n        this.logger.log('');\r\n    }\r\n\r\n    checkControlActionsConfiguration(\r\n        controlActions: ControlAction[],\r\n        controlActionConfigs: ControlActionConfig[]\r\n    ) {\r\n        for (const config of controlActionConfigs) {\r\n            if (!this.getSuitableControlAction(config, controlActions)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async putMarksForStudentsAsync(\r\n        discipline: Discipline,\r\n        students: MergedStudent[],\r\n        controlActionConfigs: ControlActionConfig[],\r\n        controlActions: ControlAction[]\r\n    ) {\r\n        const statusCounters: { [k: string]: number } = {};\r\n\r\n        for (const student of students) {\r\n            const status = await this.putMarksForStudentAsync(\r\n                discipline,\r\n                student,\r\n                controlActionConfigs,\r\n                controlActions\r\n            );\r\n            if (statusCounters[status] === undefined) {\r\n                statusCounters[status] = 0;\r\n            }\r\n            statusCounters[status]++;\r\n        }\r\n\r\n        this.logger.log('Marks update statuses:');\r\n        for (const k of Object.keys(statusCounters)) {\r\n            this.logger.log(`- ${k} = ${statusCounters[k]}`);\r\n        }\r\n    }\r\n\r\n    async putMarksForStudentAsync(\r\n        discipline: Discipline,\r\n        student: MergedStudent,\r\n        controlActionConfigs: ControlActionConfig[],\r\n        controlActions: ControlAction[]\r\n    ) {\r\n        let updated = 0;\r\n        let failed = 0;\r\n\r\n        const marks = [];\r\n        for (const config of controlActionConfigs) {\r\n            const controlAction = this.getSuitableControlAction(\r\n                config,\r\n                controlActions\r\n            );\r\n            if (!controlAction) {\r\n                throw new Error();\r\n            }\r\n\r\n            const brsMark = parseAnyFloat(\r\n                student.brs[controlAction.uuid] as string\r\n            );\r\n            const actualMark = parseAnyFloat(\r\n                student.actual.properties[config.propertyIndex]\r\n            );\r\n\r\n            if (actualMark === brsMark || actualMark === 0) {\r\n                marks.push(\r\n                    `    ${actualMark} `.substr(`${actualMark}`.length - 1)\r\n                );\r\n                continue;\r\n            } else {\r\n                marks.push(\r\n                    `    ${actualMark}!`.substr(`${actualMark}`.length - 1)\r\n                );\r\n            }\r\n\r\n            try {\r\n                if (this.options.save) {\r\n                    await this.brsApi.putStudentMarkAsync(\r\n                        student.brs.studentUuid,\r\n                        controlAction.uuidWithoutPrefix,\r\n                        actualMark,\r\n                        discipline.groupHistoryId,\r\n                        student.brs.cardType,\r\n                        student.brs.disciplineLoad\r\n                    );\r\n                }\r\n                updated++;\r\n            } catch (error) {\r\n                failed++;\r\n            }\r\n        }\r\n\r\n        const brsFailureStatus =\r\n            (student.brs.failure as StudentFailure) ?? StudentFailure.NoFailure;\r\n        const actualFailure =\r\n            student.actual.failure ?? StudentFailure.NoFailure;\r\n        let failureStatus = '';\r\n        if (actualFailure === brsFailureStatus) {\r\n            failureStatus = `${formatStudentFailure(actualFailure)}`;\r\n        } else {\r\n            failureStatus = `${formatStudentFailure(actualFailure)}!`;\r\n            try {\r\n                if (this.options.save) {\r\n                    await this.brsApi.putStudentFailureAsync(\r\n                        student.brs.studentUuid,\r\n                        discipline,\r\n                        actualFailure\r\n                    );\r\n                }\r\n                updated++;\r\n            } catch (error) {\r\n                failed++;\r\n            }\r\n        }\r\n\r\n        const status =\r\n            failed > 0 ? 'FAILED ' : updated > 0 ? 'UPDATED' : 'SKIPPED';\r\n        if (this.options.verbose || failed > 0) {\r\n            const studentName = (\r\n                student.actual.fullName + '                              '\r\n            ).substr(0, 30);\r\n            this.logger.log(\r\n                `${status} ${studentName} updated: ${updated}, failed: ${failed}, marks: ${marks.join(\r\n                    ' '\r\n                )}, failureStatus: ${failureStatus}`\r\n            );\r\n        }\r\n        return status;\r\n    }\r\n\r\n    getSuitableControlAction(\r\n        config: ControlActionConfig,\r\n        controlActions: ControlAction[]\r\n    ) {\r\n        const suitableControlActions = controlActions.filter((a) =>\r\n            config.controlActions.some((b) =>\r\n                compareNormalized(a.controlAction, b)\r\n            )\r\n        );\r\n\r\n        if (suitableControlActions.length === 0) {\r\n            this.logger.log(\r\n                `All of ${config.controlActions.join(', ')} not found`\r\n            );\r\n            this.logger.log(\r\n                `Known actions: ${controlActions\r\n                    .map((a) => a.controlAction)\r\n                    .join(', ')}`\r\n            );\r\n            return null;\r\n        }\r\n\r\n        if (\r\n            config.matchIndex !== undefined ||\r\n            config.matchCount !== undefined\r\n        ) {\r\n            if (\r\n                config.matchIndex === undefined ||\r\n                config.matchCount === undefined ||\r\n                suitableControlActions.length !== config.matchCount ||\r\n                config.matchIndex >= config.matchCount\r\n            ) {\r\n                this.logger.log(\r\n                    `Invalid configuration of ${config.controlActions.join(\r\n                        ', '\r\n                    )}`\r\n                );\r\n                this.logger.log(\r\n                    `Can't match: ${config.matchIndex}/${config.matchCount} of ${suitableControlActions.length}`\r\n                );\r\n                return null;\r\n            }\r\n            return suitableControlActions[config.matchIndex];\r\n        }\r\n\r\n        if (suitableControlActions.length > 1) {\r\n            this.logger.log(\r\n                `Several control actions found for ${config.controlActions.join(\r\n                    ', '\r\n                )}`\r\n            );\r\n            this.logger.log(\r\n                `Found actions: ${suitableControlActions\r\n                    .map((a) => a.controlAction)\r\n                    .join(', ')}`\r\n            );\r\n            return null;\r\n        }\r\n\r\n        return suitableControlActions[0];\r\n    }\r\n\r\n    async updateFailuresForSkippedStudentsAsync(\r\n        students: StudentMark[],\r\n        discipline: Discipline,\r\n        defaultStudentFailure: StudentFailure\r\n    ) {\r\n        const statusCounters: { [k: string]: number } = {};\r\n\r\n        for (const student of students) {\r\n            const status = await this.updateFailureForStudent(\r\n                student,\r\n                discipline,\r\n                defaultStudentFailure\r\n            );\r\n            if (statusCounters[status] === undefined) {\r\n                statusCounters[status] = 0;\r\n            }\r\n            statusCounters[status]++;\r\n        }\r\n\r\n        const statusKeys = Object.keys(statusCounters);\r\n        if (statusKeys.length > 0) {\r\n            this.logger.log('Failures update statuses:');\r\n            for (const k of statusKeys) {\r\n                this.logger.log(`- ${k} = ${statusCounters[k]}`);\r\n            }\r\n        } else {\r\n            this.logger.log('No failures for skipped students');\r\n        }\r\n    }\r\n\r\n    async updateFailureForStudent(\r\n        student: StudentMark,\r\n        discipline: Discipline,\r\n        defaultStudentFailure: StudentFailure\r\n    ) {\r\n        let status = '';\r\n        const brsFailureStatus = student.failure\r\n            ? (student.failure as StudentFailure)\r\n            : StudentFailure.NoFailure;\r\n        const actualFailure = defaultStudentFailure;\r\n        if (actualFailure === brsFailureStatus) {\r\n            status = 'SKIPPED';\r\n        } else {\r\n            try {\r\n                if (this.options.save) {\r\n                    await this.brsApi.putStudentFailureAsync(\r\n                        student.studentUuid,\r\n                        discipline,\r\n                        actualFailure\r\n                    );\r\n                }\r\n                status = 'UPDATED';\r\n            } catch (error) {\r\n                status = 'FAILED';\r\n            }\r\n        }\r\n\r\n        if (this.options.verbose || status === 'FAILED') {\r\n            const studentName = (\r\n                student.studentFio + '                              '\r\n            ).substr(0, 30);\r\n            const description =\r\n                status !== 'SKIPPED'\r\n                    ? `${formatStudentFailure(\r\n                          actualFailure\r\n                      )} from ${formatStudentFailure(brsFailureStatus)}`\r\n                    : formatStudentFailure(actualFailure);\r\n            this.logger.log(`${status} ${studentName} ${description}`);\r\n        }\r\n        return status;\r\n    }\r\n\r\n    mergeStudents(actualStudents: ActualStudent[], brsStudents: StudentMark[]) {\r\n        const activeBrsStudents = brsStudents.filter(isStudentActive);\r\n\r\n        const mergedStudents: MergedStudent[] = [];\r\n        const skippedActualStudents: ActualStudent[] = [];\r\n        for (const actualStudent of actualStudents) {\r\n            const suitableStudents = activeBrsStudents.filter((brsStudent) =>\r\n                areStudentsLike(brsStudent, actualStudent)\r\n            );\r\n            if (suitableStudents.length === 1) {\r\n                mergedStudents.push({\r\n                    actual: actualStudent,\r\n                    brs: suitableStudents[0],\r\n                });\r\n            } else {\r\n                skippedActualStudents.push(actualStudent);\r\n            }\r\n        }\r\n\r\n        const skippedBrsStudents: StudentMark[] = [];\r\n        for (const brsStudent of activeBrsStudents) {\r\n            if (\r\n                !mergedStudents.some(\r\n                    (ms) => ms.brs.studentUuid === brsStudent.studentUuid\r\n                )\r\n            ) {\r\n                skippedBrsStudents.push(brsStudent);\r\n            }\r\n        }\r\n\r\n        return { mergedStudents, skippedActualStudents, skippedBrsStudents };\r\n    }\r\n\r\n    logMergedStudents(\r\n        mergedStudents: MergedStudent[],\r\n        skippedActualStudents: ActualStudent[],\r\n        skippedBrsStudents: StudentMark[]\r\n    ) {\r\n        this.logger.log(`Merged students = ${mergedStudents.length}`);\r\n        this.logger.log(\r\n            `Can't merge actual students = ${skippedActualStudents.length}`\r\n        );\r\n        for (const s of skippedActualStudents) {\r\n            this.logger.log('- ' + s.fullName);\r\n        }\r\n        this.logger.log(\r\n            `Can't merge BRS students = ${skippedBrsStudents.length}`\r\n        );\r\n        for (const s of skippedBrsStudents) {\r\n            this.logger.log('- ' + s.studentFio);\r\n        }\r\n    }\r\n}\r\n\r\nfunction isStudentActive(brsStudent: StudentMark) {\r\n    return (\r\n        brsStudent.studentStatus !== 'Переведен' &&\r\n        brsStudent.studentStatus !== 'Отчислен'\r\n    );\r\n}\r\n\r\nfunction areStudentsLike(\r\n    brsStudent: StudentMark,\r\n    actualStudent: ActualStudent\r\n) {\r\n    const brsFullName = fio.toKey(brsStudent.studentFio);\r\n    const actualFullName = fio.toKey(actualStudent.fullName);\r\n    return brsFullName.startsWith(actualFullName);\r\n}\r\n\r\nexport interface ControlActionConfig {\r\n    controlActions: string[];\r\n    matchIndex?: number;\r\n    matchCount?: number;\r\n    propertyIndex: number;\r\n}\r\n\r\nexport interface PutMarksOptions {\r\n    save: boolean;\r\n    verbose: boolean;\r\n}\r\n\r\ninterface MergedStudent {\r\n    actual: ActualStudent;\r\n    brs: StudentMark;\r\n}\r\n","import BrsApi, { Discipline, StudentFailure } from '../apis/brsApi';\r\nimport { compareNormalized } from '../helpers/tools';\r\nimport { Logger } from '../helpers/logger';\r\nimport { ActualStudent } from '../functions/readStudentsAsync';\r\nimport DisciplineMarksManager, {\r\n    ControlActionConfig,\r\n    PutMarksOptions,\r\n} from './DisciplineMarksManager';\r\n\r\nexport type { ControlActionConfig, PutMarksOptions };\r\n\r\nexport default class MarksManager {\r\n    private readonly brsApi: BrsApi;\r\n    private readonly logger: Logger;\r\n    private readonly disciplineMarksManager: DisciplineMarksManager;\r\n    private cancelPending: boolean = false;\r\n\r\n    constructor(brsApi: BrsApi, logger: Logger, options: PutMarksOptions) {\r\n        this.brsApi = brsApi;\r\n        this.logger = logger;\r\n        this.disciplineMarksManager = new DisciplineMarksManager(\r\n            brsApi,\r\n            logger,\r\n            options\r\n        );\r\n    }\r\n\r\n    cancel() {\r\n        this.cancelPending = true;\r\n    }\r\n\r\n    async putMarksToBrsAsync(marksData: MarksData) {\r\n        const {\r\n            actualStudents,\r\n            disciplineConfig,\r\n            controlActionConfigs,\r\n        } = marksData;\r\n\r\n        try {\r\n            const disciplines = await this.getSuitableDisciplinesAsync(\r\n                disciplineConfig\r\n            );\r\n\r\n            for (const discipline of disciplines) {\r\n                await this.disciplineMarksManager.putMarksForDisciplineAsync(\r\n                    discipline,\r\n                    actualStudents.filter((s) =>\r\n                        compareNormalized(s.groupName, discipline.group)\r\n                    ),\r\n                    disciplineConfig.defaultStudentFailure,\r\n                    controlActionConfigs\r\n                );\r\n                if (this.cancelPending) {\r\n                    break;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            this.logger.error(e);\r\n        }\r\n    }\r\n\r\n    async getSuitableDisciplinesAsync(disciplineConfig: DisciplineConfig) {\r\n        const allDisciplines = await this.brsApi.getDisciplineCachedAsync(\r\n            disciplineConfig.year,\r\n            disciplineConfig.termType,\r\n            disciplineConfig.course,\r\n            disciplineConfig.isModule\r\n        );\r\n        const disciplines = allDisciplines.filter(\r\n            (d) =>\r\n                compareNormalized(d.discipline, disciplineConfig.name) &&\r\n                (!disciplineConfig.isSuitableDiscipline ||\r\n                    disciplineConfig.isSuitableDiscipline(d))\r\n        );\r\n        return disciplines;\r\n    }\r\n\r\n    getLogger() {\r\n        return this.logger;\r\n    }\r\n}\r\n\r\nexport interface MarksData {\r\n    actualStudents: ActualStudent[];\r\n    disciplineConfig: DisciplineConfig;\r\n    controlActionConfigs: ControlActionConfig[];\r\n}\r\n\r\nexport interface DisciplineConfig {\r\n    name: string;\r\n    year: number;\r\n    termType: number;\r\n    course: number;\r\n    isModule: boolean;\r\n    defaultStudentFailure: StudentFailure;\r\n    isSuitableDiscipline: ((d: Discipline) => boolean) | null;\r\n}\r\n","import React from 'react';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide} from '@material-ui/core';\r\nimport {TransitionProps} from '@material-ui/core/transitions';\r\nimport {Redirect} from 'react-router-dom';\r\nimport BrsAuth from \"../apis/brsAuth\";\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n    ref: React.Ref<unknown>,\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SessionExpiredAlert({open, sessionName, brsAuth}: Props) {\r\n    const [redirect, setRedirect] = React.useState(false);\r\n\r\n    const handleOk = () => {\r\n        setRedirect(true);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {redirect && <Redirect to=\"/\"/>}\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\">\r\n                <DialogTitle id=\"alert-dialog-slide-title\">Необходимо авторизоваться</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Кажется, действие сессии {sessionName} истекло. Необходимо повторно авторизоваться.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{display: 'flex', justifyContent: 'space-around'}}>\r\n                    <Button onClick={handleOk} color=\"primary\">Ок</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    sessionName: string;\r\n    brsAuth: BrsAuth;\r\n}\r\n","export class Logger {\r\n    private logHandlers?: ((message: string) => void)[];\r\n    private errorHandlers?: ((errorMessage: string) => void)[];\r\n\r\n    addLogHandler(logHandler: ((message: string) => void)) {\r\n        if (!this.logHandlers)\r\n            this.logHandlers = [];\r\n        this.logHandlers.push(logHandler);\r\n    }\r\n\r\n    removeLogHandler(logHandler: ((message: string) => void)) {\r\n        if (!this.logHandlers)\r\n            return;\r\n        this.logHandlers = this.logHandlers.filter(h => h !== logHandler);\r\n    }\r\n\r\n    addErrorHandler(errorHandler: (errorMessage: string) => void) {\r\n        if (!this.errorHandlers)\r\n            this.errorHandlers = [];\r\n        this.errorHandlers.push(errorHandler);\r\n    }\r\n\r\n    removeErrorHandler(errorHandler: ((errorMessage: string) => void)) {\r\n        if (!this.errorHandlers)\r\n            return;\r\n        this.errorHandlers = this.errorHandlers.filter(h => h !== errorHandler);\r\n    }\r\n\r\n    log(message: string) {\r\n        if (!this.logHandlers)\r\n            return;\r\n        for (const logHandler of this.logHandlers)\r\n            logHandler(message);\r\n    }\r\n\r\n    error(errorMessage: string) {\r\n        if (!this.errorHandlers)\r\n            return;\r\n        for (const errorHandler of this.errorHandlers)\r\n            errorHandler(errorMessage);\r\n    }\r\n}\r\n","import {Button, Collapse, Grid} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function ({show, onRunWorkSafe, onRunWorkUnsafe}: Props) {\r\n    return (\r\n        <Collapse in={show} className={\"vertical-margin-medium\"}>\r\n            <Grid container justify=\"space-around\">\r\n                <Grid item>\r\n                    <Button variant=\"contained\"\r\n                            onClick={onRunWorkSafe}\r\n                            color=\"primary\">\r\n                        Попробуй сделать хорошо\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button variant=\"contained\"\r\n                            onClick={onRunWorkUnsafe}\r\n                            color=\"secondary\">\r\n                        Сделай хорошо\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Collapse>\r\n    );\r\n}\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    onRunWorkSafe: () => void;\r\n    onRunWorkUnsafe: () => void;\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nexport default function () {\r\n    return (\r\n        <div className={\"loading-pane\"}>\r\n            <CircularProgress size={100} className={\"progress\"}/>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Button, Container,} from \"@material-ui/core\";\r\nimport DisciplinesFetch from \"../DisciplinesFetch\";\r\nimport SpreadsheetFetch from \"../spreadsheetFetch\";\r\nimport WorkerDialog from \"../WorkerDialog\";\r\nimport MarksManager, {MarksData, PutMarksOptions} from \"../../marksActions/MarksManager\";\r\nimport BrsApi from \"../../apis/brsApi\";\r\nimport SessionExpiredAlert from \"../SessionExpiredAlert\";\r\nimport CustomAlert from \"../CustomAlert\";\r\nimport googleAuth from \"../../apis/googleAuth\";\r\nimport {Logger} from \"../../helpers/logger\";\r\nimport BrsAuth from \"../../apis/brsAuth\";\r\nimport RunWorkerButtons from \"../RunWorkerButtons\";\r\nimport {StatusCode} from \"../../helpers/CustomError\";\r\nimport LoadingPane from \"../loadingPane/LoadingPane\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport default class WorkPage extends React.Component<Props, State> {\r\n    marksData: MarksData;\r\n    marksManager: MarksManager\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.marksData = {} as any;\r\n        this.marksManager = {} as any;\r\n\r\n        this.state = {\r\n            showControls: false,\r\n            runWork: false,\r\n            openSessionExpiredAlert: false,\r\n            sessionName: '',\r\n            errorMessage: '',\r\n            loading: true,\r\n            redirect: false\r\n        }\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await googleAuth.init();\r\n        await this.props.brsAuth.tryRestoreAsync();\r\n\r\n        const brsAuthorized = this.props.brsAuth.checkAuth();\r\n        const googleAuthorized = googleAuth.checkAuthorized();\r\n\r\n        if (!brsAuthorized)\r\n            this.handleSessionExpired(\"БРС\");\r\n        else if (!googleAuthorized)\r\n            this.handleSessionExpired(\"Google\");\r\n        else\r\n            this.setState({loading: false});\r\n    }\r\n\r\n    handleDataLoaded = (data: MarksData) => {\r\n        this.marksData = data;\r\n        this.setState({showControls: true});\r\n    }\r\n\r\n    runWork = (save: boolean) => {\r\n        const logger = new Logger();\r\n        logger.addErrorHandler(this.handleError);\r\n\r\n        const options: PutMarksOptions = {save, verbose: true};\r\n\r\n        const brsAuth: BrsAuth = this.props.brsAuth;\r\n        const brsApi = new BrsApi(brsAuth, brsAuth.brsUrlProvider);\r\n        this.marksManager = new MarksManager(brsApi, logger, options);\r\n\r\n        this.setState({runWork: true});\r\n    }\r\n\r\n    handleRunWorkSafe = () => {\r\n        this.runWork(false);\r\n    }\r\n\r\n    handleRunWorkUnsafe = () => {\r\n        this.runWork(true);\r\n    }\r\n\r\n    handleClosed = () => {\r\n        this.setState({runWork: false});\r\n    }\r\n\r\n    handleSessionExpired = (sessionName: string) => {\r\n        this.setState({openSessionExpiredAlert: true, sessionName, loading: false});\r\n    }\r\n\r\n    handleError = (error: any) => {\r\n        const errorMessage: string = error.message || JSON.stringify(error);\r\n        if (error.statusCode)\r\n            if (error.statusCode === StatusCode.BrsUnauthorized)\r\n                this.handleSessionExpired(\"БРС\");\r\n            else\r\n                this.handleSessionExpired(\"Google\");\r\n        else if (error.name === \"RequestError\")\r\n            this.setState({errorMessage: \"В данный момент сервер недоступен. Попробуйте позже.\"});\r\n        else\r\n            this.setState({errorMessage: `Что-то пошло не так : ${errorMessage}`});\r\n    }\r\n\r\n    closeError = () => {\r\n        this.setState({errorMessage: ''})\r\n    }\r\n\r\n    returnToLoginPage = () => {\r\n        this.setState({redirect: true})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.loading && <LoadingPane/>}\r\n                {this.state.openSessionExpiredAlert && <SessionExpiredAlert brsAuth={this.props.brsAuth}\r\n                                                                            sessionName={this.state.sessionName}\r\n                                                                            open={this.state.openSessionExpiredAlert}/>}\r\n                {this.state.errorMessage && <CustomAlert open={!!this.state.errorMessage}\r\n                                                         message={this.state.errorMessage}\r\n                                                         type={'error'}\r\n                                                         onClose={this.closeError}/>}\r\n                {this.state.redirect && <Redirect to=\"/\"/>}\r\n                <div className=\"work-page\">\r\n                    <Container maxWidth=\"md\">\r\n                        <Button variant=\"contained\"\r\n                                style={{marginTop: 10}}\r\n                                onClick={this.returnToLoginPage}>\r\n                            Вернуться на страницу входа\r\n                        </Button>\r\n                        <DisciplinesFetch brsApi={this.props.brsApi}\r\n                                          onError={this.handleError}/>\r\n                        <hr/>\r\n                        <SpreadsheetFetch onDataLoaded={this.handleDataLoaded}\r\n                                          onError={this.handleError}/>\r\n                        <RunWorkerButtons show={this.state.showControls}\r\n                                          onRunWorkUnsafe={this.handleRunWorkUnsafe}\r\n                                          onRunWorkSafe={this.handleRunWorkSafe}/>\r\n                        {\r\n                            this.state.runWork &&\r\n                            <WorkerDialog runWork={this.state.runWork}\r\n                                          marksData={this.marksData}\r\n                                          marksManager={this.marksManager}\r\n                                          onClosed={this.handleClosed}/>\r\n                        }\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\ninterface State {\r\n    showControls: boolean;\r\n    openSessionExpiredAlert: boolean;\r\n    sessionName: string;\r\n    errorMessage: string;\r\n    runWork: boolean;\r\n    loading: boolean;\r\n    redirect: boolean;\r\n}\r\n\r\ninterface Props {\r\n    brsAuth: BrsAuth;\r\n    brsApi: BrsApi;\r\n}\r\n","import React from \"react\";\r\nimport Context from \"../../Context\";\r\nimport WorkPage from \"./WorkPage\";\r\n\r\nexport default function () {\r\n    return (\r\n        <Context.Consumer>\r\n            {\r\n                context => <WorkPage brsAuth={context.brsAuth} brsApi={context.brsApi}/>\r\n            }\r\n        </Context.Consumer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\nimport BrsUrlProvider from \"./apis/brsUrlProvider\";\r\nimport BrsAuth from \"./apis/brsAuth\";\r\nimport LoginPageWrapper from \"./components/loginPage/LoginPageWrapper\";\r\nimport WorkPageWrapper from \"./components/workPage/WorkPageWrapper\";\r\nimport BrsApi from \"./apis/brsApi\";\r\nimport Context from './Context';\r\n\r\nconst urlProvider = new BrsUrlProvider(true);\r\nconst brsAuth = new BrsAuth(urlProvider);\r\nconst brsApi = new BrsApi(brsAuth, urlProvider);\r\n\r\nexport default function App() {\r\n    return (\r\n        <Context.Provider value={{brsAuth, brsApi}}>\r\n            <HashRouter hashType={\"noslash\"}>\r\n                <Switch>\r\n                    <Route path=\"/work\" component={WorkPageWrapper}/>\r\n                    <Route exact path=\"\" component={LoginPageWrapper}/>\r\n                </Switch>\r\n            </HashRouter>\r\n        </Context.Provider>\r\n    )\r\n}\r\n","import {ReportHandler} from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}