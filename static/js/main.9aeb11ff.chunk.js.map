{"version":3,"sources":["helpers/cache.ts","helpers/CustomError.ts","Constants.ts","apis/BrsUrlProvider.ts","apis/BrsAuth.ts","apis/GoogleAuth.ts","Context.tsx","components/shared/SubmitWithLoading/index.tsx","components/login/BrsLoginForm/index.tsx","components/login/GoogleLoginButton.tsx","components/shared/CustomAlert.tsx","components/login/LoginPage/index.tsx","components/login/LoginPageContainer.tsx","apis/BrsApi.ts","apis/GoogleApi.ts","helpers/tools.ts","helpers/brsHelpers.ts","managers/SpreadsheetManager.ts","components/shared/NestedList/index.tsx","components/work/RunWorkerButtons.tsx","helpers/fio.ts","managers/MarksManager.ts","components/work/GoogleTableFetch/index.tsx","managers/ReportManager.ts","components/work/WorkerDialog/index.tsx","components/work/GoogleTableFetch/GoogleTableFetchForm.tsx","components/shared/SessionExpiredAlert.tsx","components/work/LoadingPane/index.tsx","components/work/WorkPage/index.tsx","components/work/WorkPageContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StorageType","StatusCode","TABLE_URL_PATTERN","BRS_URL","BrsUrlProvider","withProxy","this","save","name","data","whereTo","json","JSON","stringify","Local","LocalAndSession","localStorage","setItem","Session","sessionStorage","read","whereFrom","content","getItem","parse","clear","storageType","removeItem","LoginStatus","CustomError","statusCode","message","BrsAuth","brsUrlProvider","_sid","_safeUserName","_userName","BrsUnauthorized","a","loginInfo","cache","saveLoginInfo","sid","userName","checkSidAsync","sidCheckResult","success","request","method","url","baseUrl","headers","response","match","login","password","requestSidAsync","Error","cookie","result","checkResult","InvalidCredentials","Succeed","safeUserName","replaceAll","body","resolveWithFullResponse","simple","then","x","DISCOVERY_DOCS","GoogleAuth","gapi","client","Promise","resolve","load","init","clientId","discoveryDocs","scope","catch","console","error","handler","auth2","getAuthInstance","isSignedIn","listen","get","basicProfile","currentUser","getBasicProfile","getName","getEmail","signOut","Context","createContext","SubmitWithLoading","props","title","loading","className","onClick","disabled","Button","type","fullWidth","variant","color","CircularProgress","size","BrsLoginForm","onSubmit","submitting","signedIn","onLogout","React","useState","setLogin","setPassword","setSid","Fragment","e","preventDefault","TextField","margin","id","label","autoFocus","value","onChange","target","autoComplete","href","rel","GoogleLoginButton","onSignedIn","onFailure","Container","buttonText","onSuccess","CustomAlert","open","onClose","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","severity","Alert","elevation","LoginPage","handleBrsSubmit","credentials","setState","submitLoading","loginBrsAsync","loginStatus","alertMessage","openAlert","alertType","brsAuthorized","brsAuth","authBySidAsync","loginAsync","handleCloseAlert","handleGoogleSignedIn","googleAuthorized","handleGoogleLoginFailed","startWork","redirect","handleBrsLogout","logout","handleGoogleLogout","googleAuth","renderGreeting","renderBrsLogin","state","brsLoading","renderGoogleLogin","getUserName","renderStartWorkButton","ensureInitializedAsync","tryRestoreAsync","listenAuthorized","authorized","checkAuth","checkAuthorized","to","component","maxWidth","Component","LoginPageContainer","Consumer","context","StudentFailure","TermType","BrsApi","year","termType","course","isModule","cacheName","getDisciplineCacheName","cacheResult","getDisciplineTotalAsync","total","getDisciplineInternalAsync","queryString","requestApiJsonAsync","paging","disciplines","moduleParameter","discipline","getStudentMarksAsync","students","uniqueStudents","s","knownStudent","studentUuid","Object","keys","map","k","cardType","markType","getStudentMarksInternalAsync","disciplineLoad","groupHistoryId","groupId","groupUuid","techgroup","isTotal","showActiveStudents","groupPart","disciplineMeta","lecture","laboratory","practice","additionalPractice","fillCardMetaAsync","getControlActionColumnsCachedAsync","currentColumns","intermediateColumns","length","cardMeta","currentControlActions","extractControlActions","currentFactor","intermediateControlActions","intermediateFactor","totalFactor","fillFactors","totalColumns","fillTotalFactors","getControlActionColumnsInternalAsync","modulePart","requestApiAsync","prefix","suffix","linesWithId","split","trim","filter","startsWith","columns","substr","uuidPrefix","c","uuid","uuidWithoutPrefix","maxValue","isIntermediate","intermediate","controlAction","column","parseFloat","controlActionId","mark","cardTypeKey","disciplineLoadUuid","isNaN","toString","studentFailure","NoFailure","updateMarksAsync","updateMarksInternalAsync","uri","options","trimLeft","getSpreadsheet","spreadsheetId","sheets","range","spreadsheets","values","readAsync","getSpreadsheetProperties","res","sheetProps","properties","normalizeString","str","toLowerCase","replace","compareNormalized","s1","s2","parseAnyFloat","groupBy","items","key","reduce","reducer","item","itemKey","push","pluralize","count","version1","version2","version5","round10","Math","round","round100","failureMapping","NotChosen","NotAllowedByDeansOffice","NotAppeared","Неуважительная","DisrespectfulReason","Уважительная","RespectfulReason","NotAllowedByTeacher","ShouldNotPass","AcademicLeave","Выбыл","DroppedOut","parseStudentFailure","input","undefined","formatStudentFailure","SpreadsheetManager","sheetName","readRowsFromSpreadsheetAsync","rows","header","getHeader","indices","buildIndicesBy","dataRange","buildDataRange","controlActionConfigs","buildControlActionConfig","disciplineConfig","buildDisciplineConfig","readStudentsAsync","fullNameColumn","left","groupColumn","failureColumn","actualStudents","readRange","fullNameIndex","groupNameIndex","idIndex","failureIndex","sheet","googleApi","row","fullName","groupName","failure","normalizedHeader","groupColumnIndex","indexOf","fullNameColumnIndex","failureColumnIndex","disciplineParameterKeyColumnIndex","disciplineParameterValueColumnIndex","abs","disciplineKeyColumn","disciplineValueColumn","min","right","leftLetter","String","fromCharCode","charCodeAt","rightLetter","index","propertyIndex","config","sameColumns","matchCount","matchIndex","Fall","defaultStudentFailure","errors","i","addDisciplineConfigParameter","obj","errorNames","filterNull","errorNamesString","n","join","parseInt","yearParts","Spring","NestedList","icons","listSubheader","ListSubheader","hidden","List","aria-labelledby","subheader","renderNestedItems","ListItem","ListItemText","primary","level","NestedListItem","nestedItems","colored","collapsed","renderAsText","setOpen","hasSubItems","icon","IconPlace","ListItemIcon","button","style","paddingLeft","ExpandLess","ExpandMore","Collapse","in","unmountOnExit","paddingTop","paddingBottom","disablePadding","RunWorkerButtons","enabled","onRunWorkSafe","onRunWorkUnsafe","Grid","container","justify","toKey","fio","MarkUpdateStatus","autoControlActionName","MarksManager","brsApi","reportManager","cancelPending","spreadsheetData","group","newReport","teacherName","putMarksForDisciplineAsync","finishReport","cancelReport","getDisciplineMetaAsync","checkControlActionsConfiguration","getAllStudentMarksAsync","brsStudents","mergeStudents","mergedStudents","skippedActualStudents","skippedBrsStudents","logMergedStudents","putMarksForStudentsAsync","updateFailuresForSkippedStudentsAsync","updateAllMarksAsync","tryGetAutoControlActionConfig","controlActions","getControlActions","getSuitableControlAction","all","student","putMarksForStudentAsync","ratingResults","groupedResults","entries","rawStudents","formatMarkUpdateStatus","infoString","currentReport","marks","autoControlActionConfig","log","failed","updated","putAutoMarksForStudentAsync","putManualMarksForStudentAsync","brsFailureStatus","brs","actualFailure","actual","failureStatus","putStudentFailureAsync","status","Failed","Updated","Skipped","studentName","autoMarkString","autoMark","controlActionGroups","getControlActionGroups","currentControlActionGroups","it","factor","intermediateControlActionGroups","output","putMarksEvenlyAsync","intermediateMark","currentMark","controlActionGroup","max","rawActualMark","actualMark","floor","putMarkAsync","actualMarkString","brsMarkString","brsMark","needUpdateMark","actualMarkOutput","controlActionOutput","substring","putStudentMarkAsync","suitableControlActions","errorMessages","onInvalidConfiguration","updateFailureForStudent","skipped","studentFio","description","autoConfigs","groups","pushControlActionGroups","activeBrsStudents","isStudentActive","actualStudent","suitableStudents","brsStudent","brsFullName","actualFullName","areStudentsLike","some","ms","report","merge","succeed","failedActual","failedBrs","studentStatus","LastAction","ReportManager","onReportFinished","_currentReport","teacher","DialogContent","withStyles","root","padding","MuiDialogContent","DialogActions","display","justifyContent","MuiDialogActions","WorkerDialog","marksManager","logConfigurationErrors","logItems","logMessage","reportToNestedListItems","marksData","suitableDisciplines","putMarksToBrsAsync","onError","okLoading","cancelWork","cancel","mainItem","hasErrors","mergeResultsTitle","failedActualCount","failedBrsCount","mergeInfoItem","marksItem","skippedItem","Dialog","dividers","onClosed","GoogleTableFetchForm","tableUrl","setTableUrl","urlError","setUrlError","regExp","spreadsheetInfo","maybeSheetId","sheetId","event","helperText","required","GoogleTableFetch","workerSaveMode","loadDisciplines","getActualSpreadsheetDataAsync","getActualDisciplinesAsync","disciplinesInfo","disciplinesToListItems","showDisciplines","lastAction","LoadDisciplines","allDisciplinesMissed","allMissed","missedDisciplinesCount","missedCount","showWorkerButtons","updateCachedDisciplines","clearDisciplineCacheAsync","runWork","RunWork","runWorker","handleRunWorkSafe","handleRunWorkUnsafe","handleWorkerClosed","None","tableUrlError","availableDisciplines","actualGroups","Set","availableGroups","Array","from","groupMissed","has","getDisciplineCachedAsync","allDisciplines","d","getSheetName","spreadsheetManager","getSpreadsheetDataAsync","spreadsheetProperties","maybeSheet","ViewModule","memo","Transition","forwardRef","ref","Slide","direction","SessionExpiredAlert","sessionName","onOk","TransitionComponent","keepMounted","aria-describedby","DialogTitle","DialogContentText","LoadingPane","WorkPage","handleError","errorMessage","handleSessionExpired","openSessionExpiredAlert","handleSessionExpiredOk","returnToLoginPage","closeError","showControls","setTimeout","marginTop","WorkPageContainer","urlProvider","App","Provider","hashType","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9aeb11ff.chunk.js","sourcesContent":["export enum StorageType {\n  Local,\n  Session,\n  LocalAndSession,\n}\n\nexport function save(\n  name: string,\n  data: object | string,\n  whereTo: StorageType\n) {\n  if (!data) {\n    return false;\n  }\n\n  const json = JSON.stringify(data);\n\n  if (whereTo === StorageType.Local || whereTo === StorageType.LocalAndSession)\n    localStorage.setItem(name, json);\n  if (\n    whereTo === StorageType.Session ||\n    whereTo === StorageType.LocalAndSession\n  )\n    sessionStorage.setItem(name, json);\n\n  return true;\n}\n\nexport function read<T extends object | string>(\n  name: string,\n  whereFrom: StorageType\n) {\n  let content: string | null = null;\n\n  if (whereFrom === StorageType.Local) content = localStorage.getItem(name);\n  if (whereFrom === StorageType.Session) content = sessionStorage.getItem(name);\n  if (whereFrom === StorageType.LocalAndSession)\n    content = sessionStorage.getItem(name) ?? localStorage.getItem(name);\n\n  if (!content) {\n    return null;\n  }\n\n  const data = JSON.parse(content);\n  return data ? (data as T) : null;\n}\n\nexport function clear(name: string, storageType: StorageType) {\n  if (\n    storageType === StorageType.Local ||\n    storageType === StorageType.LocalAndSession\n  )\n    localStorage.removeItem(name);\n  if (\n    storageType === StorageType.Session ||\n    storageType === StorageType.LocalAndSession\n  )\n    sessionStorage.removeItem(name);\n\n  return true;\n}\n","export enum StatusCode {\n  BrsUnauthorized = 1,\n  GoogleUnauthorized,\n}\n\nexport default class CustomError {\n  readonly message: string;\n  readonly statusCode: StatusCode;\n\n  constructor(statusCode: StatusCode, message: string = \"\") {\n    this.statusCode = statusCode;\n    this.message = message;\n  }\n}\n","export const SID_GAINING_INSTRUCTION_URL =\n    \"https://docs.google.com/document/d/1btXePo-5bE8RyX7RFXnBuS-UN9SmwUithpc_UXhAWsg/edit\";\n\nexport const TABLE_URL_PATTERN =\n    \"https://docs.google.com/spreadsheets/d/1Owzl3JfmFASIdC7ZMMw-0kkA3pwFSab1QdVO5dhZoxY/edit#gid=675912523\";\n\nexport const TABLE_TEMPLATE_URL =\n    \"https://docs.google.com/spreadsheets/d/sjwa1/edit#gid=0\";\n\nexport const BRS_URL = \"https://brs.urfu.ru/mrd\";\n\nexport const CORS_PROXY = \"https://bbamc5stve2edro7t455.containers.yandexcloud.net\";\n","import {BRS_URL, CORS_PROXY} from \"../Constants\";\n\nexport default class BrsUrlProvider {\n    private readonly withProxy: boolean;\n\n    constructor(withProxy: boolean) {\n        this.withProxy = withProxy;\n    }\n\n    get baseUrl() {\n        return this.withProxy ? `${CORS_PROXY}/${BRS_URL}` : BRS_URL;\n    }\n}\n","import request from \"request-promise\";\nimport BrsUrlProvider from \"./BrsUrlProvider\";\nimport * as cache from \"../helpers/cache\";\nimport { StorageType } from \"../helpers/cache\";\nimport CustomError, { StatusCode } from \"../helpers/CustomError\";\n\nexport enum LoginStatus {\n  Succeed,\n  InvalidCredentials,\n  Error,\n}\n\nexport default class BrsAuth {\n  readonly brsUrlProvider: BrsUrlProvider;\n\n  constructor(brsUrlProvider: BrsUrlProvider) {\n    this.brsUrlProvider = brsUrlProvider;\n  }\n\n  private _sid: string | null = null;\n\n  get sid() {\n    if (!this._sid)\n      throw new CustomError(\n        StatusCode.BrsUnauthorized,\n        \"Нет авторизации в БРС\"\n      );\n    return this._sid;\n  }\n\n  private _safeUserName: string | null = null;\n\n  get safeUserName() {\n    if (!this._safeUserName)\n      throw new CustomError(\n        StatusCode.BrsUnauthorized,\n        \"Нет авторизации в БРС\"\n      );\n    return this._safeUserName;\n  }\n\n  private _userName?: string = \"Anonymous\";\n\n  get userName() {\n    return this._userName;\n  }\n\n  checkAuth() {\n    return !!(this._sid && this._safeUserName);\n  }\n\n  async tryRestoreAsync() {\n    if (!!(this._sid && this._safeUserName)) return;\n\n    let loginInfo = cache.read<LoginInfo>(\"loginInfo\", StorageType.Session);\n    if (loginInfo) {\n      this.saveLoginInfo(loginInfo.sid, loginInfo.userName);\n      return;\n    }\n\n    loginInfo = cache.read<LoginInfo>(\"loginInfo\", StorageType.Local);\n    if (!loginInfo) return;\n\n    const sidCheckResult = await this.checkSidAsync(loginInfo.sid);\n    if (sidCheckResult?.success)\n      this.saveLoginInfo(loginInfo.sid, loginInfo.userName);\n  }\n\n  private async checkSidAsync(sid: string): Promise<SidCheckResult | null> {\n    try {\n      const response: string = await request({\n        method: \"GET\",\n        url: this.brsUrlProvider.baseUrl + \"/mvc/mobile\",\n        headers: {\n          \"X-Cookie\": `JSESSIONID=${sid}`,\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n      });\n\n      const userName = response.match(/username\">([А-ЯЁа-яё -]+)</);\n      if (userName) return { success: true, userName: userName[1] };\n      return { success: false, userName: \"Anonymous\" };\n    } catch (e) {\n      return null;\n    }\n  }\n\n  async loginAsync(login: string, password: string): Promise<LoginStatus> {\n    const response = await this.requestSidAsync(login, password);\n\n    if (!response || !(\"x-set-cookie\" in response.headers)) {\n      return LoginStatus.Error;\n    }\n\n    const cookie = response.headers[\"x-set-cookie\"] as string;\n    const result = cookie.match(/(?<=JSESSIONID=)\\w+/);\n\n    if (!result) return LoginStatus.Error;\n\n    const sid = result[0];\n\n    const checkResult = await this.checkSidAsync(sid);\n    if (checkResult === null) return LoginStatus.Error;\n    if (!checkResult.success) return LoginStatus.InvalidCredentials;\n\n    this.saveLoginInfo(sid, checkResult.userName);\n\n    return LoginStatus.Succeed;\n  }\n\n  async authBySidAsync(sid: string): Promise<LoginStatus> {\n    if (!sid) return LoginStatus.InvalidCredentials;\n\n    const checkResult = await this.checkSidAsync(sid);\n    if (checkResult === null) return LoginStatus.Error;\n    if (!checkResult.success) return LoginStatus.InvalidCredentials;\n\n    this.saveLoginInfo(sid, checkResult.userName);\n\n    return LoginStatus.Succeed;\n  }\n\n  private saveLoginInfo(sid: string, userName: string) {\n    const safeUserName = userName.replaceAll(/[^A-Za-zА-ЯЁа-яё]/g, \"_\");\n\n    cache.save(\n      \"loginInfo\",\n      { sid, safeUserName, userName },\n      StorageType.LocalAndSession\n    );\n\n    this._sid = sid;\n    this._safeUserName = safeUserName;\n    this._userName = userName;\n  }\n\n  logout() {\n    this._sid = null;\n    this._safeUserName = null;\n    cache.clear(\"loginInfo\", StorageType.LocalAndSession);\n  }\n\n  private async requestSidAsync(login: string, password: string) {\n    return await request({\n      url: this.brsUrlProvider.baseUrl + `/login`,\n      method: \"POST\",\n      body: `username=${login}&password=${password}`,\n      resolveWithFullResponse: true,\n      simple: false,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n      },\n    }).then(\n      (x) => x,\n      () => null\n    );\n  }\n}\n\ninterface LoginInfo {\n  sid: string;\n  safeUserName: string;\n  userName: string;\n}\n\ninterface SidCheckResult {\n  success: boolean;\n  userName: string;\n}\n","const CLIENT_ID =\n  \"122993083593-pacve8csj86voko30ia65raeg0ncrtuv.apps.googleusercontent.com\";\nconst DISCOVERY_DOCS = [\n  \"https://sheets.googleapis.com/$discovery/rest?version=v4\",\n];\nconst SCOPES = \"profile email https://www.googleapis.com/auth/spreadsheets\";\n\nexport default class GoogleAuth {\n  async ensureInitializedAsync() {\n    if (gapi.client) return;\n\n    await new Promise<void>((resolve) => {\n      gapi.load(\"client:auth2\", resolve);\n    });\n\n    // NOTE: выполнение init не надо ждать\n    gapi.client\n      .init({\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES,\n      })\n      .catch(console.error);\n  }\n\n  listenAuthorized(handler: (authorized: boolean) => void) {\n    gapi.auth2?.getAuthInstance()?.isSignedIn?.listen(handler);\n  }\n\n  checkAuthorized() {\n    return gapi.auth2?.getAuthInstance()?.isSignedIn?.get();\n  }\n\n  getUserName(): string | undefined {\n    const basicProfile = gapi.auth2\n      ?.getAuthInstance()\n      ?.currentUser?.get()\n      ?.getBasicProfile();\n    return basicProfile?.getName() || basicProfile?.getEmail();\n  }\n\n  async logout() {\n    await gapi.auth2?.getAuthInstance()?.signOut();\n  }\n}\n","import { createContext } from \"react\";\nimport BrsAuth from \"./apis/BrsAuth\";\nimport BrsApi from \"./apis/BrsApi\";\nimport GoogleAuth from \"./apis/GoogleAuth\";\n\nconst Context =\n  createContext<{\n    brsAuth: BrsAuth;\n    brsApi: BrsApi;\n    googleAuth: GoogleAuth;\n  } | null>(null);\n\nexport default Context;\n","import { Button, CircularProgress } from \"@material-ui/core\";\nimport React from \"react\";\nimport \"./styles.css\";\n\nexport default function SubmitWithLoading(props: Props) {\n  const { title, loading, className, onClick, disabled = false } = props;\n\n  return (\n    <div className={\"submit-with-loading \" + className}>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onClick}\n        disabled={loading || disabled}\n      >\n        {title}\n      </Button>\n      {loading && (\n        <CircularProgress\n          color=\"secondary\"\n          size={24}\n          className=\"button-progress\"\n        />\n      )}\n    </div>\n  );\n}\n\ninterface Props {\n  title: string;\n  loading: boolean;\n  className?: string;\n  onClick?: () => void;\n  disabled?: boolean;\n}\n","import { Button, CircularProgress, TextField } from \"@material-ui/core\";\nimport SubmitWithLoading from \"../../shared/SubmitWithLoading\";\nimport React, { FormEvent } from \"react\";\nimport \"./styles.css\";\nimport { SID_GAINING_INSTRUCTION_URL } from \"../../../Constants\";\n\nexport default function BrsLoginForm({\n  onSubmit,\n  submitting,\n  loading,\n  signedIn,\n  onLogout,\n  userName,\n}: Props) {\n  const [login, setLogin] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [sid, setSid] = React.useState(\"\");\n\n  function handleUserNameChanged(e: React.ChangeEvent<HTMLInputElement>) {\n    const value = e.target.value;\n    setLogin(value);\n    setSid(\"\");\n  }\n\n  function handlePasswordChanged(e: React.ChangeEvent<HTMLInputElement>) {\n    const value = e.target.value;\n    setPassword(value);\n    setSid(\"\");\n  }\n\n  function handleSidChanged(e: React.ChangeEvent<HTMLInputElement>) {\n    const value = e.target.value;\n    setSid(value);\n    setLogin(\"\");\n    setPassword(\"\");\n  }\n\n  function handleSubmit(e: FormEvent) {\n    e.preventDefault();\n\n    if (loading) return;\n\n    onSubmit({ login: login, password, sid });\n  }\n\n  return signedIn ? (\n    <React.Fragment>\n      <p>Добро пожаловать, {userName}</p>\n      <Button\n        type=\"button\"\n        fullWidth\n        variant=\"contained\"\n        onClick={onLogout}\n        color=\"primary\"\n      >\n        Выйти из БРС\n      </Button>\n    </React.Fragment>\n  ) : (\n    <div className=\"brs-login-form\">\n      <p>\n        <b>Войдите в БРС</b>, чтобы сервис мог получить информацию о ваших\n        курсах и выставлять оценки от вашего имени\n      </p>\n      <p>Это можно сделать через учетную запись БРС</p>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <TextField\n          className=\"form-component\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          id=\"username\"\n          label=\"Имя пользователя\"\n          name=\"username\"\n          autoFocus\n          value={login}\n          disabled={loading}\n          onChange={handleUserNameChanged}\n        />\n        <TextField\n          className=\"form-component\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          name=\"password\"\n          label=\"Пароль\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          disabled={loading}\n          onChange={handlePasswordChanged}\n        />\n        <p className=\"form-component text-align-center\">\n          или через JSESSIONID при использовании единой учетной записи УрФУ\n        </p>\n        <TextField\n          className=\"form-component\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          name=\"sid\"\n          label=\"JSESSIONID\"\n          type=\"password\"\n          id=\"sid\"\n          value={sid}\n          disabled={loading}\n          onChange={handleSidChanged}\n        />\n        <a\n          href={SID_GAINING_INSTRUCTION_URL}\n          className=\"button-link\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Как получить JSESSIONID\n        </a>\n        <SubmitWithLoading\n          className=\"vertical-margin-medium\"\n          title=\"войти\"\n          loading={submitting}\n          disabled={loading}\n        />\n      </form>\n      {loading && (\n        <CircularProgress color=\"primary\" size={150} className=\"progress\" />\n      )}\n    </div>\n  );\n}\n\ninterface Props {\n  submitting: boolean;\n  loading: boolean;\n  onSubmit: (credentials: Credentials) => void;\n  onLogout: () => void;\n  signedIn: boolean;\n  userName?: string;\n}\n\nexport interface Credentials {\n  login: string;\n  password: string;\n  sid: string;\n}\n","import GoogleLogin from \"react-google-login\";\nimport React from \"react\";\nimport { Button, Container } from \"@material-ui/core\";\n\nconst CLIENT_ID =\n  \"122993083593-pacve8csj86voko30ia65raeg0ncrtuv.apps.googleusercontent.com\";\nconst SCOPES = \"profile email https://www.googleapis.com/auth/spreadsheets\";\n\nexport default function GoogleLoginButton(props: Props) {\n  const { onSignedIn, onFailure, signedIn, userName, onLogout } = props;\n\n  return (\n    <React.Fragment>\n      {signedIn ? (\n        <Container className=\"text-align-center\">\n          <p>Добро пожаловать, {userName}</p>\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            onClick={onLogout}\n            color=\"primary\"\n          >\n            Выйти из Google\n          </Button>\n        </Container>\n      ) : (\n        <Container className=\"text-align-center\">\n          <p>\n            <b>Войдите в Google</b>, чтобы сервис мог загружать оценки студентов\n            из ваших Google&nbsp;Таблиц\n          </p>\n          <GoogleLogin\n            clientId={CLIENT_ID}\n            buttonText=\"Войти в аккаунт Google\"\n            onSuccess={onSignedIn}\n            onFailure={onFailure}\n            scope={SCOPES}\n            isSignedIn={true}\n          />\n        </Container>\n      )}\n    </React.Fragment>\n  );\n}\n\ninterface Props {\n  onSignedIn: () => void;\n  onFailure: (error: any) => void;\n  onLogout: () => void;\n  signedIn: boolean;\n  userName?: string;\n}\n","import React from \"react\";\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\nimport { Snackbar } from \"@material-ui/core\";\n\nexport default function CustomAlert(props: Props) {\n  const { open, message, type, onClose } = props;\n\n  return (\n    <React.Fragment>\n      <Snackbar\n        open={open}\n        autoHideDuration={10000}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        onClose={onClose}\n      >\n        <Alert severity={type} onClose={onClose}>\n          {message}\n        </Alert>\n      </Snackbar>\n    </React.Fragment>\n  );\n}\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\ninterface Props {\n  open: boolean;\n  message: string;\n  type: \"error\" | \"success\";\n  onClose: () => void;\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Container } from \"@material-ui/core\";\nimport BrsAuth, { LoginStatus } from \"../../../apis/BrsAuth\";\nimport BrsLoginForm, { Credentials } from \"../BrsLoginForm\";\nimport GoogleAuth from \"../../../apis/GoogleAuth\";\nimport GoogleLoginButton from \"../GoogleLoginButton\";\nimport CustomAlert from \"../../shared/CustomAlert\";\nimport { TABLE_URL_PATTERN } from \"../../../Constants\";\n\nexport default class LoginPage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      brsLoading: true,\n      brsAuthorized: false,\n      googleAuthorized: false,\n      redirect: false,\n      submitLoading: false,\n      openAlert: false,\n      alertMessage: \"\",\n      alertType: \"error\",\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.googleAuth.ensureInitializedAsync();\n    await this.props.brsAuth.tryRestoreAsync();\n\n    this.props.googleAuth.listenAuthorized((authorized) => {\n      this.setState({ googleAuthorized: authorized });\n    });\n\n    const brsAuthorized = this.props.brsAuth.checkAuth();\n    const googleAuthorized = this.props.googleAuth.checkAuthorized();\n    this.setState({ brsLoading: false, brsAuthorized, googleAuthorized });\n  }\n\n  handleBrsSubmit = async (credentials: Credentials) => {\n    this.setState({ submitLoading: true });\n\n    const loginStatus = await this.loginBrsAsync(credentials);\n\n    this.setState({ submitLoading: false });\n\n    switch (loginStatus) {\n      case LoginStatus.Succeed:\n        this.setState({\n          alertMessage: \"Авторизация прошла успешно\",\n          openAlert: true,\n          alertType: \"success\",\n          brsAuthorized: true,\n        });\n        break;\n      case LoginStatus.Error:\n        this.setState({\n          alertMessage: \"Что-то пошло не так :( Попробуйте позже\",\n          openAlert: true,\n          alertType: \"error\",\n        });\n        break;\n      case LoginStatus.InvalidCredentials:\n        this.setState({\n          alertMessage: \"Неверные логин, пароль или JSESSIONID\",\n          openAlert: true,\n          alertType: \"error\",\n        });\n    }\n  };\n\n  loginBrsAsync = async (credentials: Credentials): Promise<LoginStatus> => {\n    if (credentials.sid) {\n      return await this.props.brsAuth.authBySidAsync(credentials.sid);\n    }\n    if (credentials.login && credentials.password) {\n      return await this.props.brsAuth.loginAsync(\n        credentials.login,\n        credentials.password\n      );\n    }\n    return LoginStatus.InvalidCredentials;\n  };\n\n  handleCloseAlert = () => {\n    this.setState({ openAlert: false });\n  };\n\n  handleGoogleSignedIn = () => {\n    this.setState({ googleAuthorized: true });\n  };\n\n  handleGoogleLoginFailed = (error: any) => {\n    console.error(error);\n\n    this.setState({\n      openAlert: true,\n      alertType: \"error\",\n      alertMessage: \"Не удалось подключить Ваш Google аккаунт :(\",\n    });\n  };\n\n  startWork = () => {\n    this.setState({ redirect: true });\n  };\n\n  handleBrsLogout = () => {\n    this.props.brsAuth.logout();\n    this.setState({\n      brsAuthorized: false,\n      alertMessage: \"Вы вышли из аккаунта БРС\",\n      alertType: \"success\",\n      openAlert: true,\n    });\n  };\n\n  handleGoogleLogout = async () => {\n    await this.props.googleAuth.logout();\n    this.setState({\n      googleAuthorized: false,\n      alertType: \"success\",\n      alertMessage: \"Вы вышли из аккаунта Google\",\n      openAlert: true,\n    });\n  };\n\n  renderGreeting = () => {\n    return (\n      <div className=\"greeting\">\n        <h2>Добро пожаловать в Расширения БРС</h2>\n        <h3 className=\"block-header\">Как все работает</h3>\n        <ol>\n          <li>\n            В Google&nbsp;Таблицах вы заполняете оценки за курс по некоторому{\" \"}\n            <a\n              href={TABLE_URL_PATTERN}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"button-link\"\n            >\n              шаблону\n            </a>\n          </li>\n          <li>\n            После этого импортируете Google Таблицу в сервис и выполняете\n            пробный запуск выставления оценок, чтобы исключить ошибки\n          </li>\n          <li>Наконец делаете запуск с реальным выставлением оценок</li>\n        </ol>\n        <h3 className=\"block-header\">Правила хранения данных</h3>\n        <p>\n          Ваш логин и пароль передаются в БРС и нигде не сохраняются\n          <br />\n          Данные о доступных вам курсах сохраняются только в вашем браузере\n        </p>\n        <hr />\n      </div>\n    );\n  };\n\n  renderBrsLogin = () => {\n    return (\n      <BrsLoginForm\n        onSubmit={this.handleBrsSubmit}\n        loading={this.state.brsLoading}\n        signedIn={this.state.brsAuthorized}\n        onLogout={this.handleBrsLogout}\n        userName={this.props.brsAuth.userName}\n        submitting={this.state.submitLoading}\n      />\n    );\n  };\n\n  renderGoogleLogin = () => {\n    return (\n      <GoogleLoginButton\n        onSignedIn={this.handleGoogleSignedIn}\n        signedIn={this.state.googleAuthorized}\n        userName={this.props.googleAuth.getUserName()}\n        onLogout={this.handleGoogleLogout}\n        onFailure={this.handleGoogleLoginFailed}\n      />\n    );\n  };\n\n  renderStartWorkButton = () => {\n    return (\n      <Button\n        variant=\"contained\"\n        onClick={this.startWork}\n        disabled={!this.state.brsAuthorized || !this.state.googleAuthorized}\n        color=\"secondary\"\n      >\n        начать работу\n      </Button>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"login-page\">\n        {this.state.redirect && <Redirect to=\"/work\" />}\n        <Container component=\"main\" maxWidth=\"md\">\n          {this.renderGreeting()}\n          <Container maxWidth=\"xs\">\n            <Container>{this.renderBrsLogin()}</Container>\n            <hr className=\"vertical-margin-medium\" />\n            <Container>{this.renderGoogleLogin()}</Container>\n          </Container>\n          <Container className=\"text-align-center vertical-margin-large\">\n            {this.renderStartWorkButton()}\n          </Container>\n          <CustomAlert\n            open={this.state.openAlert}\n            message={this.state.alertMessage}\n            type={this.state.alertType}\n            onClose={this.handleCloseAlert}\n          />\n        </Container>\n      </div>\n    );\n  }\n}\n\ninterface State {\n  brsLoading: boolean;\n  brsAuthorized: boolean;\n  googleAuthorized: boolean;\n  submitLoading: boolean;\n  redirect: boolean;\n  openAlert: boolean;\n  alertMessage: string;\n  alertType: \"error\" | \"success\";\n}\n\ninterface Props {\n  brsAuth: BrsAuth;\n  googleAuth: GoogleAuth;\n}\n","import React from \"react\";\nimport Context from \"../../Context\";\nimport LoginPage from \"./LoginPage\";\n\nexport default function LoginPageContainer() {\n  return (\n    <Context.Consumer>\n      {(context) =>\n        context && (\n          <LoginPage\n            brsAuth={context.brsAuth}\n            googleAuth={context.googleAuth}\n          />\n        )\n      }\n    </Context.Consumer>\n  );\n}\n","import \"bluebird\";\nimport request from \"request-promise\";\nimport * as cache from \"../helpers/cache\";\nimport { StorageType } from \"../helpers/cache\";\nimport BrsAuth from \"./BrsAuth\";\nimport BrsUrlProvider from \"./BrsUrlProvider\";\nimport CustomError, { StatusCode } from \"../helpers/CustomError\";\n\nexport enum StudentFailure {\n  /** -, дефис, все хорошо */ NoFailure = -1,\n  /** Не выбрана */ NotChosen = -19,\n  /** Не допущен (деканат) */ NotAllowedByDeansOffice = -18,\n  /** Не явился */ NotAppeared = 0,\n  /** Неуважительная */ DisrespectfulReason = 12,\n  /** Уважительная */ RespectfulReason = 13,\n  /** Не допущен */ NotAllowedByTeacher = 18,\n  /** Не должен сдавать */ ShouldNotPass = 19,\n  /** Академический отпуск */ AcademicLeave = 20,\n  /** Выбыл */ DroppedOut = 21,\n}\n\nexport enum TermType {\n  Fall = 1,\n  Spring = 2,\n}\n\nexport default class BrsApi {\n  readonly brsAuth: BrsAuth;\n  private readonly brsUrlProvider: BrsUrlProvider;\n\n  constructor(brsAuth: BrsAuth, brsUrlProvider: BrsUrlProvider) {\n    this.brsAuth = brsAuth;\n    this.brsUrlProvider = brsUrlProvider;\n  }\n\n  async getDisciplineCachedAsync(\n    year: number,\n    termType: TermType,\n    course: number,\n    isModule: boolean\n  ) {\n    const cacheName = this.getDisciplineCacheName(\n      year,\n      termType,\n      course,\n      isModule\n    );\n    const cacheResult = cache.read<Discipline[]>(\n      cacheName,\n      StorageType.Session\n    );\n    if (cacheResult) {\n      return cacheResult;\n    }\n\n    const total = await this.getDisciplineTotalAsync(\n      year,\n      termType,\n      course,\n      isModule\n    );\n    const result = await this.getDisciplineInternalAsync(\n      year,\n      termType,\n      course,\n      isModule,\n      total\n    );\n    cache.save(cacheName, result, StorageType.Session);\n    return result;\n  }\n\n  async getDisciplineInternalAsync(\n    year: number,\n    termType: TermType,\n    course: number,\n    isModule: boolean,\n    total: number\n  ) {\n    const queryString = `?year=${year}&termType=${termType}&course=${course}&total=${total}&page=1&pageSize=${total}&search=`;\n    if (isModule) {\n      const paging = await this.requestApiJsonAsync<Paging<Discipline>>(\n        \"/mvc/mobile/module/fetch\" + queryString\n      );\n      const disciplines = paging.content;\n      for (const d of disciplines) {\n        d.isModule = true;\n      }\n      return disciplines;\n    } else {\n      const paging = await this.requestApiJsonAsync<Paging<Discipline>>(\n        \"/mvc/mobile/discipline/fetch\" + queryString\n      );\n      const disciplines = paging.content;\n      for (const d of disciplines) {\n        d.isModule = false;\n      }\n      return disciplines;\n    }\n  }\n\n  async clearDisciplineCacheAsync(\n    year: number,\n    termType: TermType,\n    course: number,\n    isModule: boolean\n  ) {\n    const cacheName = this.getDisciplineCacheName(\n      year,\n      termType,\n      course,\n      isModule\n    );\n    cache.clear(cacheName, StorageType.Session);\n  }\n\n  async getDisciplineTotalAsync(\n    year: number,\n    termType: TermType,\n    course: number,\n    isModule: boolean\n  ) {\n    const moduleParameter = isModule ? \"&its=true\" : \"\";\n    const queryString =\n      `?year=${year}&termType=${termType}&course=${course}` + moduleParameter;\n    const total = await this.requestApiJsonAsync<number>(\n      \"/mvc/mobile/discipline/amount\" + queryString\n    );\n    return total;\n  }\n\n  async getAllStudentMarksAsync(discipline: Discipline) {\n    const students = [\n      ...(await this.getStudentMarksAsync(discipline, \"lecture\", \"current\")),\n      ...(await this.getStudentMarksAsync(\n        discipline,\n        \"lecture\",\n        \"intermediate\"\n      )),\n      ...(await this.getStudentMarksAsync(discipline, \"laboratory\", \"current\")),\n      ...(await this.getStudentMarksAsync(\n        discipline,\n        \"laboratory\",\n        \"intermediate\"\n      )),\n      ...(await this.getStudentMarksAsync(discipline, \"practice\", \"current\")),\n      ...(await this.getStudentMarksAsync(\n        discipline,\n        \"practice\",\n        \"intermediate\"\n      )),\n      ...(await this.getStudentMarksAsync(\n        discipline,\n        \"additionalPractice\",\n        \"current\"\n      )),\n      ...(await this.getStudentMarksAsync(\n        discipline,\n        \"additionalPractice\",\n        \"intermediate\"\n      )),\n    ];\n\n    const uniqueStudents: { [id: string]: StudentMark } = {};\n    for (const s of students) {\n      const knownStudent = uniqueStudents[s.studentUuid] || {};\n      uniqueStudents[s.studentUuid] = { ...knownStudent, ...s };\n    }\n\n    return Object.keys(uniqueStudents).map((k) => uniqueStudents[k]);\n  }\n\n  async getStudentMarksAsync(\n    discipline: Discipline,\n    cardType: CardType,\n    markType: MarkType\n  ) {\n    return this.getStudentMarksInternalAsync(\n      discipline.disciplineLoad,\n      discipline.isModule,\n      discipline.groupHistoryId,\n      discipline.groupId,\n      cardType,\n      markType\n    );\n  }\n\n  async getStudentMarksInternalAsync(\n    disciplineLoad: string,\n    isModule: boolean,\n    groupUuid: string,\n    techgroup: string,\n    cardType: CardType,\n    markType: MarkType,\n    isTotal: boolean = false,\n    showActiveStudents: boolean = false\n  ) {\n    const groupPart = isModule\n      ? `techgroup=${techgroup}`\n      : `groupUuid=${groupUuid}`;\n    return this.requestApiJsonAsync<StudentMark[]>(\n      `/mvc/mobile/studentMarks/fetch?disciplineLoad=${disciplineLoad}&${groupPart}` +\n        `&cardType=${cardType}&hasTest=false&isTotal=${isTotal}` +\n        `&intermediate=${markType === \"intermediate\"}` +\n        `&selectedTeachers=null&showActiveStudents=${showActiveStudents}`\n    );\n  }\n\n  async getDisciplineMetaAsync(\n    discipline: Discipline\n  ): Promise<DisciplineMeta> {\n    const disciplineMeta: DisciplineMeta = {\n      lecture: null,\n      laboratory: null,\n      practice: null,\n      additionalPractice: null,\n    };\n\n    await this.fillCardMetaAsync(disciplineMeta, discipline, \"lecture\");\n    await this.fillCardMetaAsync(disciplineMeta, discipline, \"laboratory\");\n    await this.fillCardMetaAsync(disciplineMeta, discipline, \"practice\");\n    await this.fillCardMetaAsync(\n      disciplineMeta,\n      discipline,\n      \"additionalPractice\"\n    );\n\n    return disciplineMeta;\n  }\n\n  async fillCardMetaAsync(\n    disciplineMeta: DisciplineMeta,\n    discipline: Discipline,\n    cardType: CardType\n  ) {\n    const currentColumns = await this.getControlActionColumnsCachedAsync(\n      discipline,\n      cardType,\n      \"current\"\n    );\n    const intermediateColumns = await this.getControlActionColumnsCachedAsync(\n      discipline,\n      cardType,\n      \"intermediate\"\n    );\n    if (currentColumns.length + intermediateColumns.length === 0) {\n      return;\n    }\n\n    const cardMeta = {\n      currentControlActions: this.extractControlActions(currentColumns),\n      currentFactor: 0,\n      intermediateControlActions:\n        this.extractControlActions(intermediateColumns),\n      intermediateFactor: 0,\n      totalFactor: 0,\n    };\n    this.fillFactors(cardMeta, currentColumns);\n    this.fillFactors(cardMeta, intermediateColumns);\n    disciplineMeta[cardType] = cardMeta;\n\n    const totalColumns = await this.getControlActionColumnsCachedAsync(\n      discipline,\n      cardType,\n      \"total\"\n    );\n    this.fillTotalFactors(disciplineMeta, totalColumns);\n  }\n\n  async getControlActionColumnsCachedAsync(\n    discipline: Discipline,\n    cardType: CardType,\n    markType: MarkType\n  ) {\n    const cacheName =\n      `${this.brsAuth.safeUserName}_getControlActionColumns_${discipline.disciplineLoad}` +\n      `_${discipline.isModule}_${discipline.groupHistoryId}_${discipline.groupId}_${cardType}_${markType}`;\n    const cacheResult = cache.read<ControlActionColumn[]>(\n      cacheName,\n      StorageType.Session\n    );\n    if (cacheResult) {\n      return cacheResult;\n    }\n\n    const result = await this.getControlActionColumnsInternalAsync(\n      discipline.disciplineLoad,\n      discipline.isModule,\n      discipline.groupHistoryId,\n      discipline.groupId,\n      cardType,\n      markType\n    );\n    cache.save(cacheName, result, StorageType.Session);\n    return result;\n  }\n\n  async getControlActionColumnsInternalAsync(\n    disciplineLoad: string,\n    isModule: boolean,\n    groupUuid: string,\n    techgroup: string,\n    cardType: CardType,\n    markType: MarkType\n  ) {\n    const modulePart = isModule ? \"/module\" : \"\";\n    const groupPart = isModule ? techgroup : groupUuid;\n    const response = await this.requestApiAsync<string>(\n      `/mvc/mobile/view/mark/${disciplineLoad}/${groupPart}/teachers${modulePart}/${cardType}/${markType}`\n    );\n\n    const prefix = \"gridColumns = toTextArray(\";\n    const suffix = \");\";\n    const linesWithId = response\n      .split(\"\\r\\n\")\n      .map((s) => s.trim())\n      .filter((s) => s.startsWith(prefix));\n    if (linesWithId.length !== 1) {\n      throw new Error(\n        \"Не удалось разобрать страницу БРС со списком контрольных мероприятий. Ожидается, что эта страница содержит единственную строчку с идентификатором техкарты.\"\n      );\n    }\n\n    const columns: Array<ControlActionColumn> =\n      JSON.parse(\n        linesWithId[0].substr(\n          prefix.length,\n          linesWithId[0].length - prefix.length - suffix.length\n        )\n      ) || [];\n\n    return columns;\n  }\n\n  extractControlActions(columns: ControlActionColumn[]) {\n    const uuidPrefix = \"technologyCard\";\n    const result = columns\n      .filter((c) => c.uuid && c.uuid.startsWith(uuidPrefix))\n      .map((c) => ({\n        uuid: c.uuid,\n        uuidWithoutPrefix: c.uuid.substr(uuidPrefix.length),\n        maxValue: c.maxValue,\n        isIntermediate: c.intermediate > 0,\n        controlAction: c.controlAction,\n      }));\n\n    return result as ControlAction[];\n  }\n\n  fillFactors(cardMeta: CardMeta, columns: ControlActionColumn[]) {\n    for (const column of columns) {\n      switch (column.uuid) {\n        case \"currentWithFactor\":\n          cardMeta.currentFactor =\n            typeof column.value === \"string\"\n              ? parseFloat(column.value)\n              : column.value;\n          break;\n        case \"intermediateWithFactor\":\n          cardMeta.intermediateFactor =\n            typeof column.value === \"string\"\n              ? parseFloat(column.value)\n              : column.value;\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  fillTotalFactors(\n    disciplineMeta: DisciplineMeta,\n    columns: ControlActionColumn[]\n  ) {\n    for (const column of columns) {\n      switch (column.uuid) {\n        case \"lecture\":\n        case \"laboratory\":\n        case \"practice\":\n        case \"additionalPractice\":\n          const uuid: CardType = column.uuid;\n          const cardMeta = disciplineMeta[uuid];\n          if (cardMeta !== null) {\n            cardMeta.totalFactor =\n              typeof column.value === \"string\"\n                ? parseFloat(column.value)\n                : column.value;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  async putStudentMarkAsync(\n    studentUuid: string,\n    controlActionId: string,\n    mark: number,\n    groupId: string,\n    cardTypeKey: CardType,\n    disciplineLoadUuid: string\n  ) {\n    const body = `student=${studentUuid}&techcard=${controlActionId}&mark=${\n      isNaN(mark) ? \"\" : mark.toString()\n    }&groupId=${groupId}&cardTypeKey=${cardTypeKey}&disciplineLoadUuid=${disciplineLoadUuid}`;\n    return this.requestApiJsonAsync<StudentMark>(\n      `/mvc/mobile/studentMarks/put`,\n      {\n        method: \"POST\",\n        body,\n        json: false,\n      },\n      {\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n      }\n    );\n  }\n\n  async putStudentFailureAsync(\n    studentUuid: string,\n    discipline: Discipline,\n    studentFailure: StudentFailure = StudentFailure.NoFailure,\n    cardType: CardType = \"lecture\"\n  ) {\n    const body = `markFailure=${studentFailure}&cardType=${cardType}&disciplineLoad=${discipline.disciplineLoad}&studentId=${studentUuid}`;\n    await this.requestApiAsync(\n      `/mvc/mobile/failure/update`,\n      {\n        method: \"POST\",\n        body,\n        json: false,\n      },\n      {\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n      }\n    );\n  }\n\n  async updateAllMarksAsync(discipline: Discipline) {\n    await this.updateMarksAsync(discipline, \"lecture\", \"intermediate\");\n    await this.updateMarksAsync(discipline, \"lecture\", \"current\");\n    await this.updateMarksAsync(discipline, \"lecture\", \"intermediate\");\n    await this.updateMarksAsync(discipline, \"laboratory\", \"current\");\n    await this.updateMarksAsync(discipline, \"laboratory\", \"intermediate\");\n    await this.updateMarksAsync(discipline, \"practice\", \"current\");\n    await this.updateMarksAsync(discipline, \"practice\", \"intermediate\");\n  }\n\n  async updateMarksAsync(\n    discipline: Discipline,\n    cardType: CardType,\n    markType: MarkType\n  ) {\n    return this.updateMarksInternalAsync(\n      discipline.disciplineLoad,\n      discipline.isModule,\n      discipline.groupHistoryId,\n      discipline.groupId,\n      cardType,\n      markType\n    );\n  }\n\n  async updateMarksInternalAsync(\n    disciplineLoad: string,\n    isModule: boolean,\n    groupUuid: string,\n    techgroup: string,\n    cardType: CardType,\n    markType: MarkType\n  ) {\n    const modulePart = isModule ? \"/module\" : \"\";\n    const groupPart = isModule\n      ? `techgroup=${techgroup}`\n      : `groupUuid=${groupUuid}`;\n    const body =\n      `disciplineLoad=${disciplineLoad}&${groupPart}` +\n      `&cardType=${cardType}&hasTest=false&isTotal=false` +\n      `&intermediate=${markType === \"intermediate\"}` +\n      `&selectedTeachers=null&showActiveStudents=true`;\n    return this.requestApiAsync<string>(\n      `/mvc/mobile/updateMarks${modulePart}`,\n      {\n        method: \"POST\",\n        body,\n        json: false,\n      },\n      {\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n      }\n    );\n  }\n\n  getDisciplineCacheName(\n    year: number,\n    termType: TermType,\n    course: number,\n    isModule: boolean\n  ) {\n    return `${this.brsAuth.safeUserName}_getDiscipline_${year}_${termType}_${course}_${isModule}`;\n  }\n\n  async requestApiJsonAsync<T>(\n    uri: string,\n    options?: RequestOptions,\n    headers?: RequestHeaders\n  ): Promise<T> {\n    const response = await this.requestApiAsync<string>(uri, options, headers);\n\n    return JSON.parse(response);\n  }\n\n  async requestApiAsync<T>(\n    uri: string,\n    options?: RequestOptions,\n    headers?: RequestHeaders\n  ): Promise<T> {\n    const response = await request({\n      method: \"GET\",\n      ...options,\n      url: this.brsUrlProvider.baseUrl + uri,\n      headers: {\n        \"X-Cookie\": `JSESSIONID=${this.brsAuth.sid}`,\n        \"X-Requested-With\": \"XMLHttpRequest\",\n        ...headers,\n      },\n    });\n\n    if (response.trimLeft().startsWith(\"<!DOCTYPE html>\")) {\n      throw new CustomError(StatusCode.BrsUnauthorized, uri + \" is Forbidden\");\n    }\n\n    return response;\n  }\n}\n\nexport type CardType =\n  | \"lecture\"\n  | \"laboratory\"\n  | \"practice\"\n  | \"additionalPractice\";\nexport type MarkType = \"current\" | \"intermediate\" | \"total\";\n\nexport interface Discipline {\n  groupId: string;\n  discipline: string;\n  group: string;\n  disciplineLoad: string;\n  groupHistoryId: string;\n  isModule: boolean;\n  teacherName?: string;\n}\n\n// eslint-disable-next-line\nconst studentMarkSample: StudentMark = {\n  studentPersonalNumber: \"09800106\",\n  isEdit: false,\n  studentUuid:\n    \"studen18hc2jg0000magk6mi3iec84bsundigr18hc2jg0000m53o7mlgvora278\",\n  status: 1,\n  studentStatus: \"Активный\",\n  ignoreCurrentDebars: false,\n  studentFio: \"Анисимова Маргарита Васильевна\",\n  isExtern: false,\n  teacherName: \"\",\n  cardType: \"lecture\",\n  studentName: \"Анисимова М.В.\",\n  studentGroup: \"РИ-180001\",\n  registerClosed: false,\n  subgroupsITS: \"\",\n  disciplineLoad: \"unpldd18hc2jg0000m5kojcd3te76bnk\",\n};\n\nexport interface StudentMark {\n  studentPersonalNumber: string;\n  isEdit: boolean;\n  studentUuid: string;\n  status: number;\n  studentStatus: string;\n  ignoreCurrentDebars: boolean;\n  studentFio: string;\n  isExtern: boolean;\n  teacherName: string;\n  cardType: CardType;\n  studentName: string;\n  studentGroup: string;\n  registerClosed: boolean;\n  subgroupsITS: string;\n  disciplineLoad: string;\n  failure?: StudentFailure;\n  failureName?: string;\n\n  [props: string]: number | string | boolean | undefined;\n}\n\nexport interface DisciplineMeta {\n  lecture: CardMeta | null;\n  laboratory: CardMeta | null;\n  practice: CardMeta | null;\n  additionalPractice: CardMeta | null;\n}\n\nexport interface CardMeta {\n  currentFactor: number;\n  currentControlActions: ControlAction[];\n  intermediateFactor: number;\n  intermediateControlActions: ControlAction[];\n  totalFactor: number;\n}\n\nexport interface ControlAction {\n  uuid: string;\n  uuidWithoutPrefix: string;\n  controlAction: string;\n  maxValue: number;\n  isIntermediate: boolean;\n}\n\ninterface ControlActionColumn {\n  controlAction: string;\n  uuid: string;\n  maxValue: number;\n  intermediate: number;\n  value: number | string;\n}\n\ninterface RequestOptions {\n  method?: string;\n  body?: object | string;\n  json?: boolean;\n}\n\ninterface RequestHeaders {\n  \"Content-Type\"?: string;\n}\n\ninterface Paging<T> {\n  content: T[];\n  last: boolean;\n  totalPages: number;\n  totalElements: number;\n  size: number;\n  number: number;\n  sort: any;\n  first: boolean;\n  numberOfElements: number;\n}\n","export function getSpreadsheet(spreadsheetId: string): Spreadsheet {\n  const sheets = gapi.client.sheets;\n\n  async function readAsync(range: string) {\n    const response = await sheets.spreadsheets.values.get({\n      spreadsheetId,\n      range,\n    });\n    return response.result;\n  }\n\n  return {\n    readAsync,\n  };\n}\n\nexport async function getSpreadsheetProperties(\n  spreadsheetId: string\n): Promise<SpreadsheetProperties[]> {\n  const sheets = gapi.client.sheets;\n\n  const res = await sheets.spreadsheets.get({ spreadsheetId });\n  const sheetProps = JSON.parse(res.body).sheets as [\n    { properties: SpreadsheetProperties }\n  ];\n  return sheetProps.map((s) => s.properties);\n}\n\nexport interface Spreadsheet {\n  readAsync: (range: string) => Promise<ValueRange>;\n}\n\nexport interface ValueRange {\n  majorDimension?: string | null;\n  range?: string | null;\n  values?: any[][] | null;\n}\n\nexport interface SpreadsheetProperties {\n  sheetId: number;\n  title: string;\n}\n","export function fixSpaces(str: string) {\n  return str && str.replace(/[\\s]/g, \" \");\n}\n\nexport function normalizeString(str: string) {\n  return (\n    str &&\n    str\n      .toLowerCase()\n      .replace(\"ё\", \"е\")\n      .replace(/[^A-Za-zА-ЯЁа-яё0-9]/g, \"\")\n  );\n}\n\nexport function compareNormalized(s1: string, s2: string) {\n  return normalizeString(s1) === normalizeString(s2);\n}\n\nexport function parseAnyFloat(s: string) {\n  return parseFloat(s && s.replace(\",\", \".\"));\n}\n\nexport function groupBy<TItem>(items: TItem[], key: keyof TItem) {\n  const reducer: { [group: string]: TItem[] } = {};\n  return items.reduce((reducer, item) => {\n    const itemKey = `${item[key]}`;\n    (reducer[itemKey] = reducer[itemKey] || []).push(item);\n    return reducer;\n  }, reducer);\n}\n\nexport function getKeys<T>(obj: T): (keyof T)[] {\n  const keys = Object.keys(obj) as (keyof T)[];\n  return keys;\n}\n\nexport function filterNull<T>(items: (T | null)[]): T[] {\n  const result: T[] = [];\n  for (const item of items) {\n    if (item !== null) {\n      result.push(item);\n    }\n  }\n  return result;\n}\n\nexport function pluralize(\n  count: number,\n  version1: string,\n  version2: string,\n  version5: string\n) {\n  if (\n    count % 10 === 0 ||\n    count % 10 >= 5 ||\n    (count % 100 > 10 && count % 100 < 20)\n  )\n    return version5;\n  return count % 10 === 1 ? version1 : version2;\n}\n\nexport function round10(value: number) {\n  return Math.round(value * 10) / 10;\n}\n\nexport function round100(value: number) {\n  return Math.round(value * 100) / 100;\n}\n","import { StudentFailure } from \"../apis/BrsApi\";\nimport { compareNormalized } from \"./tools\";\n\nconst failureMapping: { [key: string]: StudentFailure } = {\n  \"-\": StudentFailure.NoFailure,\n  \"Не выбрана\": StudentFailure.NotChosen,\n  \"Не допущен (деканат)\": StudentFailure.NotAllowedByDeansOffice,\n  \"Не явился\": StudentFailure.NotAppeared,\n  Неуважительная: StudentFailure.DisrespectfulReason,\n  Уважительная: StudentFailure.RespectfulReason,\n  \"Не допущен\": StudentFailure.NotAllowedByTeacher,\n  \"Не должен сдавать\": StudentFailure.ShouldNotPass,\n  \"Академический отпуск\": StudentFailure.AcademicLeave,\n  Выбыл: StudentFailure.DroppedOut,\n};\n\nexport function parseStudentFailure(input: string): StudentFailure | null {\n  if (input === null || input === undefined) {\n    return null;\n  }\n\n  for (let key of Object.keys(failureMapping)) {\n    if (compareNormalized(key, input)) {\n      return failureMapping[key];\n    }\n  }\n\n  return StudentFailure.NoFailure;\n}\n\nexport function formatStudentFailure(\n  input: StudentFailure | null | undefined\n): string | null {\n  if (input === null || input === undefined) {\n    return null;\n  }\n\n  for (let key of Object.keys(failureMapping)) {\n    if (failureMapping[key] === input) {\n      return key;\n    }\n  }\n\n  return \"-\";\n}\n","import { StudentFailure, TermType } from \"../apis/BrsApi\";\nimport { ControlActionConfig } from \"./MarksManager\";\nimport * as googleApi from \"../apis/GoogleApi\";\nimport {\n  compareNormalized,\n  getKeys,\n  filterNull,\n  normalizeString,\n} from \"../helpers/tools\";\nimport { parseStudentFailure } from \"../helpers/brsHelpers\";\n\nexport interface ActualStudent {\n  fullName: string;\n  groupName: string;\n  id: string | null;\n  failure: StudentFailure | null;\n  properties: string[];\n}\n\nexport interface SpreadsheetData {\n  actualStudents: ActualStudent[];\n  disciplineConfig: DisciplineConfig;\n  controlActionConfigs: ControlActionConfig[];\n}\n\nexport interface DisciplineConfig {\n  name: string;\n  year: number;\n  termType: number;\n  course: number;\n  isModule: boolean;\n  defaultStudentFailure: StudentFailure;\n}\n\ntype DisciplineConfigErrors = {\n  [key in keyof DisciplineConfig]: string | null;\n};\n\nexport default class SpreadsheetManager {\n  private readonly spreadsheetId: string;\n\n  constructor(spreadsheetId: string) {\n    this.spreadsheetId = spreadsheetId;\n  }\n\n  async getSpreadsheetDataAsync(sheetName: string): Promise<SpreadsheetData> {\n    const rows = await readRowsFromSpreadsheetAsync(\n      this.spreadsheetId,\n      sheetName\n    );\n    const header = getHeader(rows);\n\n    const indices = buildIndicesBy(header);\n    const dataRange = buildDataRange(sheetName, indices);\n    const controlActionConfigs = buildControlActionConfig(header, indices);\n    const disciplineConfig = buildDisciplineConfig(rows, indices);\n\n    const actualStudents = await readStudentsAsync(\n      this.spreadsheetId,\n      dataRange,\n      indices.fullNameColumn - indices.left,\n      indices.groupColumn - indices.left,\n      null,\n      indices.failureColumn - indices.left\n    );\n\n    return {\n      actualStudents,\n      disciplineConfig,\n      controlActionConfigs,\n    };\n  }\n}\n\nasync function readStudentsAsync(\n  spreadsheetId: string,\n  readRange: string,\n  fullNameIndex: number = 0,\n  groupNameIndex: number = 1,\n  idIndex: number | null = null,\n  failureIndex: number | null = null\n) {\n  const sheet = googleApi.getSpreadsheet(spreadsheetId);\n\n  const rows = (await sheet.readAsync(readRange)).values || [];\n\n  const result: ActualStudent[] = [];\n  for (const row of rows) {\n    const fullName = row[fullNameIndex];\n    const groupName = row[groupNameIndex];\n    const id = idIndex !== null ? row[idIndex] : null;\n    const failure =\n      failureIndex !== null ? parseStudentFailure(row[failureIndex]) : null;\n    if (fullName && groupName) {\n      result.push({\n        fullName,\n        groupName,\n        id: id,\n        failure: failure,\n        properties: row,\n      });\n    }\n  }\n  return result;\n}\n\nasync function readRowsFromSpreadsheetAsync(\n  spreadsheetId: string,\n  sheetName: string\n) {\n  const sheet = googleApi.getSpreadsheet(spreadsheetId);\n  const rows = (await sheet.readAsync(sheetName + \"!A1:ZZ100\"))\n    .values as string[][];\n  return rows || null;\n}\n\nfunction getHeader(rows: string[][]) {\n  const header = rows && rows[0];\n  if (!header) throw new Error(`Лист Google-таблицы не содержит строк`);\n  return header;\n}\n\nfunction buildIndicesBy(header: string[]): Indices {\n  const defaultGroupColumnName = \"Группа в БРС\";\n  const defaultFullNameColumnName = \"Фамилия Имя в БРС\";\n  const defaultFailureColumnName = \"Причина отсутствия\";\n  const disciplineParameterKeyColumnPrefix = \"Названия параметров\";\n  const disciplineParameterValueColumnPrefix = \"Значения параметров\";\n\n  const normalizedHeader = header && header.map((s) => normalizeString(s));\n  const groupColumnIndex = normalizedHeader.indexOf(\n    normalizeString(defaultGroupColumnName)\n  );\n  const fullNameColumnIndex = normalizedHeader.indexOf(\n    normalizeString(defaultFullNameColumnName)\n  );\n  const failureColumnIndex = normalizedHeader.indexOf(\n    normalizeString(defaultFailureColumnName)\n  );\n  const disciplineParameterKeyColumnIndex = normalizedHeader.indexOf(\n    normalizeString(disciplineParameterKeyColumnPrefix)\n  );\n  const disciplineParameterValueColumnIndex = normalizedHeader.indexOf(\n    normalizeString(disciplineParameterValueColumnPrefix)\n  );\n\n  if (\n    failureColumnIndex < 0 ||\n    groupColumnIndex < 0 ||\n    fullNameColumnIndex < 0 ||\n    groupColumnIndex > failureColumnIndex ||\n    fullNameColumnIndex > failureColumnIndex ||\n    Math.abs(fullNameColumnIndex - groupColumnIndex) !== 1 ||\n    disciplineParameterKeyColumnIndex < 0 ||\n    disciplineParameterValueColumnIndex < 0 ||\n    disciplineParameterKeyColumnIndex <= failureColumnIndex ||\n    disciplineParameterValueColumnIndex <= failureColumnIndex ||\n    disciplineParameterValueColumnIndex !==\n      disciplineParameterKeyColumnIndex + 1\n  )\n    throw new Error(`Неправильный порядок столбцов`);\n  const leftIndex = Math.min(groupColumnIndex, fullNameColumnIndex);\n  const rightIndex = failureColumnIndex;\n\n  return {\n    groupColumn: groupColumnIndex,\n    fullNameColumn: fullNameColumnIndex,\n    failureColumn: failureColumnIndex,\n    disciplineKeyColumn: disciplineParameterKeyColumnIndex,\n    disciplineValueColumn: disciplineParameterValueColumnIndex,\n    left: leftIndex,\n    right: rightIndex,\n  };\n}\n\nfunction buildDataRange(sheetName: string, indices: Indices) {\n  const leftLetter = String.fromCharCode(\"A\".charCodeAt(0) + indices.left);\n  const rightLetter = String.fromCharCode(\"A\".charCodeAt(0) + indices.right);\n  return `${sheetName}!${leftLetter}2:${rightLetter}`;\n}\n\nfunction buildControlActionConfig(header: string[], indices: Indices) {\n  const controlActionConfigs: ControlActionConfig[] = [];\n  for (let index = indices.left; index <= indices.right; index++) {\n    if (\n      index === indices.groupColumn ||\n      index === indices.fullNameColumn ||\n      index === indices.failureColumn ||\n      !header[index]\n    ) {\n      continue;\n    }\n    controlActionConfigs.push({\n      controlAction: header[index],\n      propertyIndex: index - indices.left,\n    });\n  }\n\n  for (const config of controlActionConfigs) {\n    const sameColumns = controlActionConfigs.filter((c) =>\n      compareNormalized(c.controlAction, config.controlAction)\n    );\n    if (sameColumns.length > 1) {\n      config.matchCount = sameColumns.length;\n      for (let matchIndex = 0; matchIndex < sameColumns.length; matchIndex++) {\n        sameColumns[matchIndex].matchIndex = matchIndex;\n      }\n    }\n  }\n\n  return controlActionConfigs;\n}\n\nfunction buildDisciplineConfig(rows: string[][], indices: Indices) {\n  const result: DisciplineConfig = {\n    name: \"\",\n    year: 0,\n    termType: TermType.Fall,\n    course: 1,\n    isModule: false,\n    defaultStudentFailure: StudentFailure.NoFailure,\n  };\n  const errors: DisciplineConfigErrors = {\n    name: \"Дисциплина\",\n    year: \"Учебный год\",\n    termType: \"Семестр\",\n    course: \"Курс\",\n    isModule: \"ИТС\",\n    defaultStudentFailure: \"Причина отсутствия по умолчанию\",\n  };\n\n  for (let i = 0; i < rows.length; i++) {\n    const key = rows[i][indices.disciplineKeyColumn]?.trim();\n    if (!key) {\n      break;\n    }\n    const value = rows[i][indices.disciplineValueColumn]?.trim();\n    addDisciplineConfigParameter(result, errors, key, value);\n  }\n\n  const errorNames = filterNull(getKeys(errors).map((k) => errors[k]));\n  if (errorNames.length > 0) {\n    const errorNamesString = errorNames.map((n) => `«${n}»`).join(\", \");\n    throw new Error(\n      `Следующие параметры дисциплины не заданы: ${errorNamesString}`\n    );\n  }\n\n  return result;\n}\n\nfunction addDisciplineConfigParameter(\n  config: DisciplineConfig,\n  errors: DisciplineConfigErrors,\n  key: string,\n  value: string\n) {\n  if (compareNormalized(key, \"Дисциплина\")) {\n    if (value) {\n      config.name = value;\n      errors.name = null;\n    }\n  } else if (compareNormalized(key, \"ИТС\")) {\n    if (value) {\n      config.isModule = value.toLowerCase() === \"да\";\n      errors.isModule = null;\n    }\n  } else if (compareNormalized(key, \"Год\")) {\n    if (value) {\n      config.year = parseInt(value.toLowerCase(), 10);\n      errors.year = null;\n    }\n  } else if (compareNormalized(key, \"Учебный год\")) {\n    if (value) {\n      const yearParts = value.toLowerCase().split(\"/\");\n      config.year = parseInt(yearParts[0], 10);\n      errors.year = null;\n    }\n  } else if (compareNormalized(key, \"Семестр\")) {\n    if (value) {\n      if (value.toLowerCase() === \"осенний\") {\n        config.termType = TermType.Fall;\n        errors.termType = null;\n      } else if (value.toLowerCase() === \"весенний\") {\n        config.termType = TermType.Spring;\n        errors.termType = null;\n      }\n    }\n  } else if (compareNormalized(key, \"Курс\")) {\n    if (value) {\n      const lowerValue = value.toLowerCase().trim();\n      if (lowerValue === \"все курсы\") {\n        config.course = 0;\n        errors.course = null;\n      } else {\n        config.course = parseInt(value.toLowerCase(), 10);\n        errors.course = null;\n      }\n    }\n  } else if (compareNormalized(key, \"Причина отсутствия по умолчанию\")) {\n    config.defaultStudentFailure =\n      parseStudentFailure(value) ?? StudentFailure.NoFailure;\n    errors.defaultStudentFailure = null;\n  }\n}\n\ninterface Indices {\n  groupColumn: number;\n  fullNameColumn: number;\n  failureColumn: number;\n  disciplineKeyColumn: number;\n  disciplineValueColumn: number;\n  left: number;\n  right: number;\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport {\n  Collapse,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n} from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\n\nexport default function NestedList(props: NestedListProps) {\n  const { title, items, icons } = props;\n\n  const listSubheader = (\n    <ListSubheader component=\"div\" id=\"nested-list-subheader\" hidden={!title}>\n      {title}\n    </ListSubheader>\n  );\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      subheader={listSubheader}\n      className=\"nested-list primary\"\n    >\n      {items.length ? renderNestedItems(items, 0, icons) : renderEmpty()}\n    </List>\n  );\n}\n\nfunction renderNestedItems(\n  items: NestedItem[],\n  level: number,\n  icons?: (JSX.Element | null)[]\n) {\n  return items.map((item, index) => (\n    <NestedListItem key={index} item={item} icons={icons} level={level} />\n  ));\n}\n\nfunction renderEmpty() {\n  return (\n    <ListItem className=\"text-align-center\">\n      <ListItemText primary=\"...\" />\n    </ListItem>\n  );\n}\n\nfunction renderNestedItemsAsText(items: NestedItem[]) {\n  return items.map((item, index) => <div key={index}>{item.title}</div>);\n}\n\nfunction NestedListItem({ item, level, icons }: NestedListItemProps) {\n  const { title, nestedItems, colored, collapsed, renderAsText } = item;\n\n  const [open, setOpen] = React.useState(!collapsed);\n\n  const hasSubItems = nestedItems && nestedItems.length > 0;\n\n  const color = colored && \"colored-back\";\n\n  const icon = icons && icons[level];\n  const IconPlace = icon && <ListItemIcon>{icon}</ListItemIcon>;\n\n  return (\n    <React.Fragment>\n      <ListItem\n        button\n        onClick={() => setOpen(!open)}\n        style={level ? { paddingLeft: 40 * level } : undefined}\n        className={\"hover \" + color}\n      >\n        {IconPlace}\n        <ListItemText primary={title} />\n        {hasSubItems && (open ? <ExpandLess /> : <ExpandMore />)}\n      </ListItem>\n      {hasSubItems && (\n        <Collapse in={open} unmountOnExit>\n          {renderAsText ? (\n            <div style={{ paddingLeft: 40 * (level + 1), paddingTop: 10, paddingBottom: 10 }}>\n              {nestedItems && renderNestedItemsAsText(nestedItems)}\n            </div>\n          ) : (\n            <List component=\"div\" disablePadding>\n              {nestedItems && renderNestedItems(nestedItems, level + 1, icons)}\n            </List>\n          )}\n        </Collapse>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport interface NestedItem {\n  title: string;\n  colored?: boolean;\n  collapsed?: boolean;\n  renderAsText?: boolean;\n  nestedItems?: NestedItem[];\n}\n\ninterface NestedListProps {\n  items: NestedItem[];\n  title?: string;\n  icons?: (JSX.Element | null)[];\n}\n\ninterface NestedListItemProps {\n  item: NestedItem;\n  level: number;\n  renderAsText?: boolean;\n  icons?: (JSX.Element | null)[];\n}\n","import { Button, Grid } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function RunWorkerButtons({\n  enabled,\n  onRunWorkSafe,\n  onRunWorkUnsafe,\n}: Props) {\n  return (\n    <Grid container justify=\"space-around\">\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          disabled={!enabled}\n          onClick={onRunWorkSafe}\n          color=\"primary\"\n        >\n          Попробовать сделать хорошо\n        </Button>\n      </Grid>\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          disabled={!enabled}\n          onClick={onRunWorkUnsafe}\n          color=\"secondary\"\n        >\n          Сделать хорошо\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\ninterface Props {\n  enabled: boolean;\n  onRunWorkSafe: () => void;\n  onRunWorkUnsafe: () => void;\n}\n","export function toShow(fio: string) {\n  return fio.replace(\"ё\", \"е\").replace(/[ ]+/, \" \");\n}\n\nexport function toKey(fio: string) {\n  return fio.toLowerCase().replace(\"ё\", \"е\").replace(/[ ]+/, \" \").trim();\n}\n","import BrsApi, {\n  ControlAction,\n  Discipline,\n  DisciplineMeta,\n  CardMeta,\n  StudentFailure,\n  StudentMark,\n} from \"../apis/BrsApi\";\nimport {\n  compareNormalized,\n  groupBy,\n  parseAnyFloat,\n  pluralize,\n  round10,\n  round100,\n} from \"../helpers/tools\";\nimport * as fio from \"../helpers/fio\";\nimport { ActualStudent, SpreadsheetData } from \"./SpreadsheetManager\";\nimport { formatStudentFailure } from \"../helpers/brsHelpers\";\nimport ReportManager from \"./ReportManager\";\n\nconst autoControlActionName = \"auto\";\n\nenum MarkUpdateStatus {\n  Updated,\n  Failed,\n  Skipped,\n}\n\nexport default class MarksManager {\n  private readonly brsApi: BrsApi;\n  private readonly save: boolean;\n  private cancelPending: boolean = false;\n\n  readonly reportManager: ReportManager;\n\n  constructor(brsApi: BrsApi, reportManager: ReportManager, save: boolean) {\n    this.brsApi = brsApi;\n    this.reportManager = reportManager;\n    this.save = save;\n  }\n\n  cancel() {\n    this.cancelPending = true;\n  }\n\n  async putMarksToBrsAsync(\n    spreadsheetData: SpreadsheetData,\n    disciplines: Discipline[]\n  ) {\n    const { actualStudents, disciplineConfig, controlActionConfigs } =\n      spreadsheetData;\n    try {\n      for (const discipline of disciplines) {\n        const students = actualStudents.filter((s) =>\n          compareNormalized(s.groupName, discipline.group)\n        );\n        if (students.length === 0) {\n          continue;\n        }\n\n        this.reportManager.newReport(discipline.group, discipline.teacherName);\n\n        var isSuccessful = await this.putMarksForDisciplineAsync(\n          discipline,\n          students,\n          disciplineConfig.defaultStudentFailure,\n          controlActionConfigs\n        );\n\n        if (isSuccessful) {\n          this.reportManager.finishReport();\n        } else {\n          this.reportManager.cancelReport();\n        }\n\n        if (this.cancelPending) {\n          break;\n        }\n      }\n\n      return null;\n    } catch (e) {\n      return e;\n    }\n  }\n\n  async putMarksForDisciplineAsync(\n    discipline: Discipline,\n    actualStudents: ActualStudent[],\n    defaultStudentFailure: StudentFailure,\n    controlActionConfigs: ControlActionConfig[]\n  ) {\n    const disciplineMeta = await this.brsApi.getDisciplineMetaAsync(discipline);\n\n    if (\n      !this.checkControlActionsConfiguration(\n        discipline,\n        disciplineMeta,\n        controlActionConfigs\n      )\n    )\n      return false;\n\n    const brsStudents = await this.brsApi.getAllStudentMarksAsync(discipline);\n    const { mergedStudents, skippedActualStudents, skippedBrsStudents } =\n      this.mergeStudents(actualStudents, brsStudents);\n\n    this.logMergedStudents(\n      mergedStudents,\n      skippedActualStudents,\n      skippedBrsStudents\n    );\n\n    await this.putMarksForStudentsAsync(\n      discipline,\n      disciplineMeta,\n      mergedStudents,\n      controlActionConfigs\n    );\n\n    await this.updateFailuresForSkippedStudentsAsync(\n      skippedBrsStudents,\n      discipline,\n      defaultStudentFailure\n    );\n\n    if (this.save) {\n      await this.brsApi.updateAllMarksAsync(discipline);\n    }\n\n    return true;\n  }\n\n  checkControlActionsConfiguration(\n    discipline: Discipline,\n    disciplineMeta: DisciplineMeta,\n    controlActionConfigs: ControlActionConfig[]\n  ) {\n    const autoControlActionConfig =\n      this.tryGetAutoControlActionConfig(controlActionConfigs);\n    if (autoControlActionConfig) {\n      return true;\n    }\n\n    const controlActions = this.getControlActions(disciplineMeta);\n    for (const config of controlActionConfigs) {\n      if (!this.getSuitableControlAction(discipline, config, controlActions)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  async putMarksForStudentsAsync(\n    discipline: Discipline,\n    disciplineMeta: DisciplineMeta,\n    students: MergedStudent[],\n    controlActionConfigs: ControlActionConfig[]\n  ) {\n    const ratingResults = await Promise.all(\n      students.map(async (student) => {\n        return await this.putMarksForStudentAsync(\n          discipline,\n          disciplineMeta,\n          student,\n          controlActionConfigs\n        );\n      })\n    );\n\n    const groupedResults = Object.entries(groupBy(ratingResults, \"status\")).map(\n      ([groupKey, rawStudents]) => ({\n        title: formatMarkUpdateStatus(rawStudents[0][\"status\"]),\n        students: rawStudents.map((s) => s.infoString),\n      })\n    );\n\n    this.reportManager.currentReport.marks.push(...groupedResults);\n  }\n\n  async putMarksForStudentAsync(\n    discipline: Discipline,\n    disciplineMeta: DisciplineMeta,\n    student: MergedStudent,\n    controlActionConfigs: ControlActionConfig[]\n  ) {\n    const autoControlActionConfig =\n      this.tryGetAutoControlActionConfig(controlActionConfigs);\n\n    const controlActions = this.getControlActions(disciplineMeta);\n\n    const log: PutMarksLog = {\n      failed: 0,\n      updated: 0,\n      marks: [],\n    };\n\n    if (autoControlActionConfig !== null) {\n      await this.putAutoMarksForStudentAsync(\n        log,\n        discipline,\n        disciplineMeta,\n        student,\n        autoControlActionConfig\n      );\n    } else {\n      await this.putManualMarksForStudentAsync(\n        log,\n        discipline,\n        student,\n        controlActionConfigs,\n        controlActions\n      );\n    }\n\n    const brsFailureStatus =\n      (student.brs.failure as StudentFailure) ?? StudentFailure.NoFailure;\n    const actualFailure = student.actual.failure ?? StudentFailure.NoFailure;\n    let failureStatus: string;\n    if (actualFailure === brsFailureStatus) {\n      failureStatus = `${formatStudentFailure(actualFailure)}`;\n    } else {\n      failureStatus = `${formatStudentFailure(actualFailure)}!`;\n      try {\n        if (this.save) {\n          await this.brsApi.putStudentFailureAsync(\n            student.brs.studentUuid,\n            discipline,\n            actualFailure\n          );\n        }\n        log.updated++;\n      } catch (error) {\n        log.failed++;\n      }\n    }\n\n    const status =\n      log.failed > 0\n        ? MarkUpdateStatus.Failed\n        : log.updated > 0\n        ? MarkUpdateStatus.Updated\n        : MarkUpdateStatus.Skipped;\n    const studentName = student.actual.fullName.substr(0, 30);\n    let infoString = `${studentName} баллы: ${log.marks.join(\" \")}`;\n    if (failureStatus && failureStatus !== \"-\")\n      infoString += `, ${failureStatus}`;\n    return { status, infoString };\n  }\n\n  async putAutoMarksForStudentAsync(\n    log: PutMarksLog,\n    discipline: Discipline,\n    disciplineMeta: DisciplineMeta,\n    student: MergedStudent,\n    autoControlActionConfig: ControlActionConfig\n  ) {\n    const autoMarkString =\n      student.actual.properties[autoControlActionConfig.propertyIndex];\n    const autoMark = parseAnyFloat(autoMarkString);\n\n    const controlActionGroups = this.getControlActionGroups(disciplineMeta);\n\n    const currentControlActionGroups = controlActionGroups.filter(\n      (it) => !it.isIntermediate\n    );\n    const currentFactor = currentControlActionGroups.reduce(\n      (result, it) => result + it.factor,\n      0\n    );\n\n    const intermediateControlActionGroups = controlActionGroups.filter(\n      (it) => it.isIntermediate\n    );\n    const intermediateFactor = intermediateControlActionGroups.reduce(\n      (result, it) => it.factor,\n      0\n    );\n\n    const output = `[auto=${autoMark}]`;\n    log.marks.push(`             ${output}`.substr(`${output}`.length - 1));\n\n    // NOTE: Если баллов достаточно для удовлетворительной оценки, то просто распределяем равномерно.\n    if (40 <= autoMark) {\n      await this.putMarksEvenlyAsync(\n        log,\n        discipline,\n        student,\n        controlActionGroups,\n        autoMark\n      );\n    }\n    // NOTE: Если баллов достаточно, чтобы поставить за сессию 40, то ставим,\n    // ведь преподавателю проще без деканата исправить оценки за семестр.\n    else if (intermediateFactor * 40 <= autoMark) {\n      const intermediateMark = 40;\n      const rawCurrentMark =\n        currentFactor > 0\n          ? (autoMark - intermediateFactor * intermediateMark) / currentFactor\n          : 0;\n      const currentMark = round100(rawCurrentMark);\n\n      await this.putMarksEvenlyAsync(\n        log,\n        discipline,\n        student,\n        currentControlActionGroups,\n        currentMark\n      );\n\n      await this.putMarksEvenlyAsync(\n        log,\n        discipline,\n        student,\n        intermediateControlActionGroups,\n        intermediateMark\n      );\n    }\n    // NOTE: Иначе ставим за сессию все, что возможно, а за семестр 0.\n    else {\n      const currentMark = 0;\n      const rawIntermediateMark =\n        intermediateFactor > 0\n          ? (autoMark - currentFactor * currentMark) / intermediateFactor\n          : 0;\n      const intermediateMark = round10(rawIntermediateMark);\n\n      await this.putMarksEvenlyAsync(\n        log,\n        discipline,\n        student,\n        currentControlActionGroups,\n        currentMark\n      );\n\n      await this.putMarksEvenlyAsync(\n        log,\n        discipline,\n        student,\n        intermediateControlActionGroups,\n        intermediateMark\n      );\n    }\n  }\n\n  async putMarksEvenlyAsync(\n    log: PutMarksLog,\n    discipline: Discipline,\n    student: MergedStudent,\n    controlActionGroups: ControlActionGroup[],\n    mark: number\n  ) {\n    for (const controlActionGroup of controlActionGroups) {\n      const controlActions = controlActionGroup.controlActions;\n\n      let value = mark;\n      let max = controlActions.reduce((result, it) => result + it.maxValue, 0);\n      for (let i = 0; i < controlActions.length; i++) {\n        const controlAction = controlActions[i];\n        const rawActualMark = (value * controlAction.maxValue) / max;\n        const actualMark =\n          i + 1 < controlActions.length\n            ? Math.floor(round10(rawActualMark))\n            : round10(rawActualMark);\n\n        value -= actualMark;\n        max -= controlAction.maxValue;\n\n        await this.putMarkAsync(\n          log,\n          discipline,\n          student,\n          controlAction,\n          actualMark\n        );\n      }\n    }\n  }\n\n  async putManualMarksForStudentAsync(\n    log: PutMarksLog,\n    discipline: Discipline,\n    student: MergedStudent,\n    controlActionConfigs: ControlActionConfig[],\n    controlActions: ControlAction[]\n  ) {\n    for (const config of controlActionConfigs) {\n      const controlAction = this.getSuitableControlAction(\n        discipline,\n        config,\n        controlActions\n      );\n      if (!controlAction) {\n        throw new Error(\n          `Подходящее контрольное мероприятие для «${config.controlAction}» не найдено в БРС`\n        );\n      }\n\n      const actualMarkString = student.actual.properties[config.propertyIndex];\n      const actualMark = parseAnyFloat(actualMarkString);\n\n      await this.putMarkAsync(\n        log,\n        discipline,\n        student,\n        controlAction,\n        actualMark\n      );\n    }\n\n    return log;\n  }\n\n  async putMarkAsync(\n    log: PutMarksLog,\n    discipline: Discipline,\n    student: MergedStudent,\n    controlAction: ControlAction,\n    actualMark: number\n  ) {\n    const brsMarkString = student.brs[controlAction.uuid] as string;\n    const brsMark = parseAnyFloat(brsMarkString);\n\n    const needUpdateMark =\n      !isNaN(actualMark) &&\n      !(isNaN(brsMark) ? actualMark === 0 : brsMark === actualMark);\n    const actualMarkOutput = !isNaN(actualMark) ? actualMark.toString() : \"-\";\n    const controlActionOutput = controlAction.controlAction.substring(0, 3);\n\n    if (needUpdateMark) {\n      log.marks.push(\n        `       ${controlActionOutput}=${actualMarkOutput}!`.substr(\n          `${actualMarkOutput}`.length - 1\n        )\n      );\n    } else {\n      log.marks.push(\n        `       ${controlActionOutput}=${actualMarkOutput} `.substr(\n          `${actualMarkOutput}`.length - 1\n        )\n      );\n      return;\n    }\n\n    try {\n      if (this.save) {\n        await this.brsApi.putStudentMarkAsync(\n          student.brs.studentUuid,\n          controlAction.uuidWithoutPrefix,\n          actualMark,\n          discipline.groupHistoryId,\n          student.brs.cardType,\n          student.brs.disciplineLoad\n        );\n      }\n      log.updated++;\n    } catch (error) {\n      log.failed++;\n    }\n  }\n\n  getSuitableControlAction(\n    discipline: Discipline,\n    config: ControlActionConfig,\n    controlActions: ControlAction[]\n  ) {\n    const suitableControlActions = controlActions.filter((a) =>\n      compareNormalized(a.controlAction, config.controlAction)\n    );\n\n    const errorMessages = [];\n\n    if (suitableControlActions.length === 0) {\n      errorMessages.push(\n        `Группа ${discipline.group}` +\n          (discipline.teacherName !== undefined\n            ? `, преподаватель ${discipline.teacherName}`\n            : \"\")\n      );\n      errorMessages.push(\n        `- контрольное мероприятие «${config.controlAction}» не сопоставлено с БРС`\n      );\n      errorMessages.push(\n        `- найденные в БРС контрольные мероприятия: ${controlActions\n          .map((a) => a.controlAction)\n          .join(\", \")}`\n      );\n\n      this.reportManager.onInvalidConfiguration(errorMessages);\n\n      return null;\n    }\n\n    if (config.matchIndex !== undefined || config.matchCount !== undefined) {\n      if (\n        config.matchIndex === undefined ||\n        config.matchCount === undefined ||\n        suitableControlActions.length !== config.matchCount ||\n        config.matchIndex >= config.matchCount\n      ) {\n        errorMessages.push(\n          `Неверная конфигурация контрольного мероприятия «${config.controlAction}»`\n        );\n        if (suitableControlActions.length !== config.matchCount) {\n          errorMessages.push(\n            `В БРС найдено ${suitableControlActions.length} ${pluralize(\n              suitableControlActions.length,\n              \"подходящее контрольное мероприятие\",\n              \"подходящих контрольных мероприятия\",\n              \"подходящих контрольных мероприятий\"\n            )}, а в таблице указано ${config.matchCount}`\n          );\n        }\n\n        this.reportManager.onInvalidConfiguration(errorMessages);\n\n        return null;\n      }\n      return suitableControlActions[config.matchIndex];\n    }\n\n    if (suitableControlActions.length > 1) {\n      errorMessages.push(\n        `Несколько контрольных мероприятий найдено для «${config.controlAction}»`\n      );\n      errorMessages.push(\n        `Найденные контрольные мероприятия: ${suitableControlActions\n          .map((a) => a.controlAction)\n          .join(\", \")}`\n      );\n\n      this.reportManager.onInvalidConfiguration(errorMessages);\n\n      return null;\n    }\n\n    return suitableControlActions[0];\n  }\n\n  async updateFailuresForSkippedStudentsAsync(\n    students: StudentMark[],\n    discipline: Discipline,\n    defaultStudentFailure: StudentFailure\n  ) {\n    const ratingResults = await Promise.all(\n      students.map((student) =>\n        this.updateFailureForStudent(student, discipline, defaultStudentFailure)\n      )\n    );\n\n    if (ratingResults.length > 0) {\n      const groupedResults = Object.entries(\n        groupBy(ratingResults, \"status\")\n      ).map(([groupKey, rawStudents]) => ({\n        title: formatMarkUpdateStatus(rawStudents[0][\"status\"]),\n        students: rawStudents.map((s) => s.infoString),\n      }));\n\n      this.reportManager.currentReport.skipped.push(...groupedResults);\n    }\n  }\n\n  async updateFailureForStudent(\n    student: StudentMark,\n    discipline: Discipline,\n    defaultStudentFailure: StudentFailure\n  ) {\n    let status: MarkUpdateStatus;\n    const brsFailureStatus = student.failure\n      ? (student.failure as StudentFailure)\n      : StudentFailure.NoFailure;\n    const actualFailure = defaultStudentFailure;\n    if (actualFailure === brsFailureStatus) {\n      status = MarkUpdateStatus.Skipped;\n    } else {\n      try {\n        if (this.save) {\n          await this.brsApi.putStudentFailureAsync(\n            student.studentUuid,\n            discipline,\n            actualFailure\n          );\n        }\n        status = MarkUpdateStatus.Updated;\n      } catch (error) {\n        status = MarkUpdateStatus.Failed;\n      }\n    }\n\n    const studentName = student.studentFio.substr(0, 30);\n    const description =\n      status !== MarkUpdateStatus.Skipped\n        ? `выставлено «${formatStudentFailure(\n            actualFailure\n          )}», было «${formatStudentFailure(brsFailureStatus)}»`\n        : `«${formatStudentFailure(actualFailure)}»`;\n\n    const infoString = `${studentName}, ${description}`;\n\n    return { status, infoString };\n  }\n\n  tryGetAutoControlActionConfig(\n    controlActionConfigs: ControlActionConfig[]\n  ): ControlActionConfig | null {\n    const autoConfigs = controlActionConfigs.filter(\n      (it) => it.controlAction.toLowerCase() === autoControlActionName\n    );\n\n    if (autoConfigs.length === 1) {\n      return autoConfigs[0];\n    }\n\n    if (autoConfigs.length > 1) {\n      this.reportManager.onInvalidConfiguration([\n        `Найдено несколько колонок «${autoControlActionName}» с автоитогом`,\n      ]);\n    }\n    return null;\n  }\n\n  getControlActions(disciplineMeta: DisciplineMeta) {\n    const controlActions = [\n      ...(disciplineMeta.lecture?.currentControlActions || []),\n      ...(disciplineMeta.lecture?.intermediateControlActions || []),\n      ...(disciplineMeta.laboratory?.currentControlActions || []),\n      ...(disciplineMeta.laboratory?.intermediateControlActions || []),\n      ...(disciplineMeta.practice?.currentControlActions || []),\n      ...(disciplineMeta.practice?.intermediateControlActions || []),\n      ...(disciplineMeta.additionalPractice?.currentControlActions || []),\n      ...(disciplineMeta.additionalPractice?.intermediateControlActions || []),\n    ];\n\n    return controlActions;\n  }\n\n  getControlActionGroups(disciplineMeta: DisciplineMeta) {\n    const groups: ControlActionGroup[] = [];\n\n    if (disciplineMeta.lecture) {\n      this.pushControlActionGroups(groups, disciplineMeta.lecture);\n    }\n    if (disciplineMeta.laboratory) {\n      this.pushControlActionGroups(groups, disciplineMeta.laboratory);\n    }\n    if (disciplineMeta.practice) {\n      this.pushControlActionGroups(groups, disciplineMeta.practice);\n    }\n    if (disciplineMeta.additionalPractice) {\n      this.pushControlActionGroups(groups, disciplineMeta.additionalPractice);\n    }\n\n    return groups;\n  }\n\n  pushControlActionGroups(groups: ControlActionGroup[], cardMeta: CardMeta) {\n    if (cardMeta.currentControlActions.length > 0) {\n      const factor = round100(cardMeta.currentFactor * cardMeta.totalFactor);\n      const controlActions = cardMeta.currentControlActions;\n      groups.push({ factor, controlActions, isIntermediate: false });\n    }\n    if (cardMeta.intermediateControlActions.length > 0) {\n      const factor = round100(\n        cardMeta.intermediateFactor * cardMeta.totalFactor\n      );\n      const controlActions = cardMeta.intermediateControlActions;\n      groups.push({ factor, controlActions, isIntermediate: true });\n    }\n  }\n\n  mergeStudents(actualStudents: ActualStudent[], brsStudents: StudentMark[]) {\n    const activeBrsStudents = brsStudents.filter(isStudentActive);\n\n    const mergedStudents: MergedStudent[] = [];\n    const skippedActualStudents: ActualStudent[] = [];\n    for (const actualStudent of actualStudents) {\n      const suitableStudents = activeBrsStudents.filter((brsStudent) =>\n        areStudentsLike(brsStudent, actualStudent)\n      );\n      if (suitableStudents.length === 1) {\n        mergedStudents.push({\n          actual: actualStudent,\n          brs: suitableStudents[0],\n        });\n      } else {\n        skippedActualStudents.push(actualStudent);\n      }\n    }\n\n    const skippedBrsStudents: StudentMark[] = [];\n    for (const brsStudent of activeBrsStudents) {\n      if (\n        !mergedStudents.some(\n          (ms) => ms.brs.studentUuid === brsStudent.studentUuid\n        )\n      ) {\n        skippedBrsStudents.push(brsStudent);\n      }\n    }\n\n    return { mergedStudents, skippedActualStudents, skippedBrsStudents };\n  }\n\n  logMergedStudents(\n    mergedStudents: MergedStudent[],\n    skippedActualStudents: ActualStudent[],\n    skippedBrsStudents: StudentMark[]\n  ) {\n    const report = this.reportManager.currentReport;\n\n    report.merge.succeed = mergedStudents.length;\n\n    if (skippedActualStudents.length > 0)\n      report.merge.failedActual = skippedActualStudents.map((s) => s.fullName);\n\n    if (skippedBrsStudents.length > 0) {\n      report.merge.failedBrs = skippedBrsStudents.map((s) => s.studentFio);\n    }\n  }\n}\n\nfunction isStudentActive(brsStudent: StudentMark) {\n  return (\n    brsStudent.studentStatus !== \"Переведен\" &&\n    brsStudent.studentStatus !== \"Отчислен\"\n  );\n}\n\nfunction areStudentsLike(\n  brsStudent: StudentMark,\n  actualStudent: ActualStudent\n) {\n  const brsFullName = fio.toKey(brsStudent.studentFio);\n  const actualFullName = fio.toKey(actualStudent.fullName);\n  return brsFullName.startsWith(actualFullName);\n}\n\nfunction formatMarkUpdateStatus(status: MarkUpdateStatus) {\n  switch (status) {\n    case MarkUpdateStatus.Updated:\n      return \"ОБНОВЛЕНО\";\n    case MarkUpdateStatus.Skipped:\n      return \"ПРОПУЩЕНО\";\n    case MarkUpdateStatus.Failed:\n      return \"ПРОВАЛЕНО\";\n    default:\n      throw new Error(\"Неизвестный статус обновления оценок\");\n  }\n}\n\nexport interface ControlActionConfig {\n  controlAction: string;\n  matchIndex?: number;\n  matchCount?: number;\n  propertyIndex: number;\n}\n\ninterface MergedStudent {\n  actual: ActualStudent;\n  brs: StudentMark;\n}\n\ninterface PutMarksLog {\n  updated: number;\n  failed: number;\n  marks: string[];\n}\n\ninterface ControlActionGroup {\n  factor: number;\n  controlActions: ControlAction[];\n  isIntermediate: boolean;\n}\n","import React, { memo } from \"react\";\nimport SpreadsheetManager, {\n  DisciplineConfig,\n  SpreadsheetData,\n} from \"../../../managers/SpreadsheetManager\";\nimport NestedList, { NestedItem } from \"../../shared/NestedList\";\nimport { Collapse, Container } from \"@material-ui/core\";\nimport { compareNormalized } from \"../../../helpers/tools\";\nimport { getSpreadsheetProperties } from \"../../../apis/GoogleApi\";\nimport BrsApi, { Discipline } from \"../../../apis/BrsApi\";\nimport \"./styles.css\";\nimport RunWorkerButtons from \"../RunWorkerButtons\";\nimport WorkerDialog, { MarksData } from \"../WorkerDialog\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport { ViewModule } from \"@material-ui/icons\";\nimport GoogleTableFetchForm from \"./GoogleTableFetchForm\";\n\nenum LastAction {\n  None,\n  LoadDisciplines,\n  RunWork,\n}\n\nclass GoogleTableFetch extends React.Component<Props, State> {\n  marksData: MarksData = {} as any;\n  workerSaveMode: boolean = false;\n  spreadsheetId: string = \"\";\n  sheetId: string | null = null;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      tableUrl: \"\",\n      loading: false,\n      showDisciplines: false,\n      lastAction: LastAction.None,\n      tableUrlError: { error: false, message: \"\" },\n      disciplines: [],\n      allDisciplinesMissed: false,\n      missedDisciplinesCount: 0,\n      showWorkerButtons: false,\n      runWorker: false,\n    };\n  }\n\n  loadDisciplines = async (spreadsheetId: string, sheetId: string | null) => {\n    this.spreadsheetId = spreadsheetId;\n    this.sheetId = sheetId;\n\n    this.setState({ loading: true });\n\n    const spreadsheetData = await this.getActualSpreadsheetDataAsync(\n      spreadsheetId,\n      sheetId\n    );\n    if (!spreadsheetData) {\n      this.setState({ loading: false });\n      return false;\n    }\n\n    const disciplines = await this.getActualDisciplinesAsync(\n      spreadsheetData.disciplineConfig\n    );\n    if (!disciplines) {\n      this.setState({ loading: false });\n      return false;\n    }\n\n    const disciplinesInfo = this.disciplinesToListItems(\n      disciplines,\n      spreadsheetData\n    );\n\n    this.marksData.spreadsheetData = spreadsheetData;\n    this.marksData.suitableDisciplines = disciplines;\n\n    this.setState({\n      loading: false,\n      disciplines: disciplinesInfo.disciplines,\n      showDisciplines: true,\n      lastAction: LastAction.LoadDisciplines,\n      allDisciplinesMissed: disciplinesInfo.allMissed,\n      missedDisciplinesCount: disciplinesInfo.missedCount,\n      showWorkerButtons: !disciplinesInfo.allMissed,\n    });\n\n    return !disciplinesInfo.allMissed;\n  };\n\n  disciplinesToListItems(\n    availableDisciplines: Discipline[],\n    spreadsheetData: SpreadsheetData\n  ): { allMissed: boolean; missedCount: number; disciplines: NestedItem[] } {\n    const actualGroups = new Set(\n      spreadsheetData.actualStudents.map((s) => s.groupName)\n    );\n    const availableGroups = new Set(availableDisciplines.map((s) => s.group));\n\n    let missedCount = 0;\n    const nestedItems: NestedItem[] = Array.from(actualGroups).map((group) => {\n      const groupMissed = !availableGroups.has(group);\n      if (groupMissed) missedCount++;\n      return { title: group, colored: groupMissed };\n    });\n\n    return {\n      allMissed: missedCount === actualGroups.size,\n      missedCount,\n      disciplines: [\n        {\n          title: spreadsheetData.disciplineConfig.name,\n          nestedItems,\n        },\n      ],\n    };\n  }\n\n  async getActualDisciplinesAsync(disciplineConfig: DisciplineConfig) {\n    try {\n      const allDisciplines = await this.props.brsApi.getDisciplineCachedAsync(\n        disciplineConfig.year,\n        disciplineConfig.termType,\n        disciplineConfig.course,\n        disciplineConfig.isModule\n      );\n\n      return allDisciplines.filter((d) =>\n        compareNormalized(d.discipline, disciplineConfig.name)\n      );\n    } catch (error) {\n      this.props.onError(error);\n    }\n  }\n\n  async getActualSpreadsheetDataAsync(\n    spreadsheetId: string,\n    sheetId: string | null\n  ) {\n    const sheetName = await this.getSheetName(spreadsheetId, sheetId);\n    if (!sheetName) {\n      return null;\n    }\n\n    let spreadsheetData: SpreadsheetData;\n    try {\n      const spreadsheetManager = new SpreadsheetManager(spreadsheetId);\n      spreadsheetData = await spreadsheetManager.getSpreadsheetDataAsync(\n        sheetName\n      );\n    } catch (e) {\n      this.props.onError(e.message || JSON.stringify(e));\n      return null;\n    }\n\n    return spreadsheetData;\n  }\n\n  async getSheetName(\n    spreadsheetId: string,\n    sheetId: string | null\n  ): Promise<string | null> {\n    try {\n      const spreadsheetProperties = await getSpreadsheetProperties(\n        spreadsheetId\n      );\n      const maybeSheet = sheetId\n        ? spreadsheetProperties.filter(\n            (s) => s.sheetId.toString() === sheetId\n          )[0]\n        : spreadsheetProperties[0];\n      if (!maybeSheet) {\n        this.props.onError(\"Таблица не найдена\");\n        return null;\n      }\n      return maybeSheet.title;\n    } catch (e) {\n      this.props.onError(e.message || JSON.stringify(e));\n      return null;\n    }\n  }\n\n  updateCachedDisciplines = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    this.setState({ showDisciplines: false });\n\n    const disciplineConfig = this.marksData.spreadsheetData?.disciplineConfig;\n    if (!disciplineConfig) return;\n\n    this.props.brsApi\n      .clearDisciplineCacheAsync(\n        disciplineConfig.year,\n        disciplineConfig.termType,\n        disciplineConfig.course,\n        disciplineConfig.isModule\n      )\n      .then(\n        (x) => x,\n        (error) => {\n          this.props.onError(error);\n        }\n      );\n\n    this.loadDisciplines(this.spreadsheetId, this.sheetId);\n  };\n\n  runWork = async (save: boolean) => {\n    if (this.state.lastAction !== LastAction.LoadDisciplines) {\n      const success = await this.loadDisciplines(this.spreadsheetId, this.sheetId);\n      if (!success) {\n        return;\n      }\n    }\n\n    this.workerSaveMode = save;\n    this.setState({\n      lastAction: LastAction.RunWork,\n      runWorker: true\n    });\n  };\n\n  handleRunWorkSafe = () => this.runWork(false);\n\n  handleRunWorkUnsafe = () => this.runWork(true);\n\n  handleWorkerClosed = () => this.setState({ runWorker: false });\n\n  render() {\n    return (\n      <span className=\"spreadsheet-fetch\">\n        <h3 className=\"vertical-margin-min\">\n          Вставьте ссылку на лист Google Таблицы с оценками\n        </h3>\n        <GoogleTableFetchForm\n          loading={this.state.loading}\n          onSubmit={this.loadDisciplines}\n        />\n\n        <Collapse\n          in={this.state.showDisciplines}\n          className=\"vertical-margin-min\"\n        >\n          <h3>Загруженная дисциплина из Google Таблицы</h3>\n          {this.state.missedDisciplinesCount > 0 && (\n            <p>\n              Группы, к которым у вас нет доступа в БРС,{\" \"}\n              <b className=\"colored-text\"> подсвечены</b>\n            </p>\n          )}\n\n          <NestedList\n            items={this.state.disciplines}\n            icons={[<ViewModule />, <GroupIcon />]}\n          />\n\n          {this.state.allDisciplinesMissed ? (\n            <React.Fragment>\n              <p>У вас нет доступа ни к одной из перечисленных групп в БРС</p>\n              <span>Возможные действия:</span>\n              <ol className=\"no-margin\">\n                <li>\n                  Убедитесь, что название дисциплины в БРС и в Google Таблицах\n                  совпадает\n                </li>\n                <li>Запросите доступ на дисциплину в БРС</li>\n                <li>Убедитесь, что техкарта согласована в БРС</li>\n                <li>\n                  <button\n                    className=\"button-link\"\n                    onClick={this.updateCachedDisciplines}\n                  >\n                    Обновите кэш групп\n                  </button>\n                </li>\n              </ol>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <p>\n                Если вам доступны не все группы, которые вам доступны в БРС, то{\" \"}\n                <button\n                  className=\"button-link\"\n                  onClick={this.updateCachedDisciplines}\n                >\n                  обновите кэш групп\n                </button>\n              </p>\n              <Container className=\"vertical-margin-medium\">\n                <RunWorkerButtons\n                  enabled={this.state.showWorkerButtons}\n                  onRunWorkSafe={this.handleRunWorkSafe}\n                  onRunWorkUnsafe={this.handleRunWorkUnsafe}\n                />\n              </Container>\n            </React.Fragment>\n          )}\n        </Collapse>\n        {this.state.runWorker && (\n          <WorkerDialog\n            marksData={this.marksData}\n            onClosed={this.handleWorkerClosed}\n            brsApi={this.props.brsApi}\n            onError={this.props.onError}\n            save={this.workerSaveMode}\n          />\n        )}\n      </span>\n    );\n  }\n}\n\nexport default memo(GoogleTableFetch);\n\ninterface Props {\n  brsApi: BrsApi;\n  onError: (errorMessage: string) => void;\n}\n\ninterface State {\n  tableUrl: string;\n  loading: boolean;\n  showDisciplines: boolean;\n  lastAction: LastAction;\n  tableUrlError: { error: boolean; message: string };\n  disciplines: NestedItem[];\n  allDisciplinesMissed: boolean;\n  missedDisciplinesCount: number;\n  showWorkerButtons: boolean;\n  runWorker: boolean;\n}\n","export default class ReportManager {\n  private _currentReport: Report | null = null;\n  private readonly onReportFinished: (report: Report) => void;\n\n  readonly onInvalidConfiguration: (errorMessages: string[]) => void;\n\n  constructor(\n    onReportFinished: (report: Report) => void,\n    onInvalidConfiguration: (errorMessages: string[]) => void\n  ) {\n    this.onReportFinished = onReportFinished;\n    this.onInvalidConfiguration = onInvalidConfiguration;\n  }\n\n  get currentReport() {\n    if (!this._currentReport)\n      throw new Error(\"Построение отчета еще не начато\");\n    return this._currentReport;\n  }\n\n  newReport(group: string, teacher?: string) {\n    this.finishReport();\n    this._currentReport = {\n      group,\n      teacher,\n      merge: { succeed: 0 },\n      marks: [],\n      skipped: [],\n    };\n  }\n\n  finishReport() {\n    if (this._currentReport) this.onReportFinished(this._currentReport);\n    this._currentReport = null;\n  }\n\n  cancelReport() {\n    this._currentReport = null;\n  }\n}\n\nexport interface Report {\n  group: string;\n  teacher?: string;\n  merge: {\n    succeed: number;\n    failedActual?: string[];\n    failedBrs?: string[];\n  };\n  marks: Section[];\n  skipped: Section[];\n}\n\nexport interface Section {\n  title: string;\n  students?: string[];\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Dialog } from \"@material-ui/core\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport SubmitWithLoading from \"../../shared/SubmitWithLoading\";\nimport MarksManager from \"../../../managers/MarksManager\";\nimport BrsApi, { Discipline } from \"../../../apis/BrsApi\";\nimport { SpreadsheetData } from \"../../../managers/SpreadsheetManager\";\nimport NestedList, { NestedItem } from \"../../shared/NestedList\";\nimport ReportManager, { Report } from \"../../../managers/ReportManager\";\nimport { pluralize } from \"../../../helpers/tools\";\n\nconst DialogContent = withStyles(() => ({\n  root: {\n    padding: 0,\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(() => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n  },\n}))(MuiDialogActions);\n\nexport default class WorkerDialog extends React.Component<Props, State> {\n  marksManager: MarksManager;\n\n  constructor(props: Props) {\n    super(props);\n\n    const { brsApi, save } = props;\n    const reportManager = new ReportManager(\n      this.logMessage,\n      this.logConfigurationErrors\n    );\n    this.marksManager = new MarksManager(brsApi, reportManager, save);\n\n    this.state = {\n      okLoading: true,\n      cancelPending: false,\n      logItems: [],\n    };\n  }\n\n  componentDidMount() {\n    this.startWork();\n  }\n\n  componentWillUnmount() {\n    this.marksManager.cancel();\n  }\n\n  logConfigurationErrors = (errorMessages: string[]) => {\n    const logItems = errorMessages.map((title) => ({ title, colored: true }));\n    this.setState({ logItems });\n  };\n\n  logMessage = async (report: Report) => {\n    const logItems = await this.reportToNestedListItems(report);\n    this.setState({ logItems });\n  };\n\n  reportToNestedListItems(report: Report): Promise<NestedItem[]> {\n    const logItems = this.state.logItems;\n    return new Promise((resolve) => {\n      let title =\n        `Группа ${report.group}` +\n        (report.teacher !== undefined\n          ? `, преподаватель ${report.teacher}`\n          : \"\");\n      const nestedItems: NestedItem[] = [];\n      const mainItem: NestedItem = { title, collapsed: true, nestedItems };\n\n      let hasErrors = false;\n\n      const merge = report.merge;\n      let mergeResultsTitle = `Сопоставление: ${merge.succeed} успешно`;\n      const failedActualCount = merge.failedActual?.length || 0;\n      mergeResultsTitle += `, ${failedActualCount} ${pluralize(\n        failedActualCount,\n        \"неизвестный\",\n        \"неизвестных\",\n        \"неизвестных\"\n      )} в таблице`;\n      const failedBrsCount = merge.failedBrs?.length || 0;\n      mergeResultsTitle += `, ${failedBrsCount} ${pluralize(\n        failedBrsCount,\n        \"неизвестный\",\n        \"неизвестных\",\n        \"неизвестных\"\n      )} в БРС`;\n\n      const mergeInfoItem: NestedItem = {\n        title: mergeResultsTitle,\n        nestedItems: [],\n        collapsed: true,\n      };\n      nestedItems.push(mergeInfoItem);\n\n      if (!!merge.failedActual) {\n        hasErrors = true;\n        title = `Не удалось сопоставить ${\n          merge.failedActual.length\n        } ${pluralize(\n          merge.failedActual.length,\n          \"студента\",\n          \"студентов\",\n          \"студентов\"\n        )} из Google Таблицы`;\n        mergeInfoItem.nestedItems?.push({\n          title,\n          nestedItems: merge.failedActual.map((s) => ({ title: s })),\n          colored: true,\n          collapsed: false,\n          renderAsText: true,\n        });\n      }\n      if (!!merge.failedBrs) {\n        hasErrors = true;\n        title = `Не удалось сопоставить ${merge.failedBrs.length} ${pluralize(\n          merge.failedBrs.length,\n          \"студента\",\n          \"студентов\",\n          \"студентов\"\n        )} из БРС`;\n        mergeInfoItem.nestedItems?.push({\n          title,\n          nestedItems: merge.failedBrs.map((s) => ({ title: s })),\n          colored: true,\n          collapsed: false,\n          renderAsText: true,\n        });\n      }\n\n      const marks = report.marks;\n      const marksItem: NestedItem = {\n        title: \"Выставление баллов\",\n        collapsed: true,\n      };\n      marksItem.nestedItems = marks.map(({ title, students }) => ({\n        title: `${title}: ${students?.length ?? 0} ${pluralize(\n          students?.length ?? 0,\n          \"студент\",\n          \"студента\",\n          \"студентов\"\n        )}`,\n        nestedItems: students?.map((s) => ({ title: s })),\n        collapsed: false,\n        renderAsText: true,\n      }));\n      nestedItems.push(marksItem);\n\n      const skipped = report.skipped;\n      if (skipped.length > 0) {\n        const skippedItem: NestedItem = {\n          title: \"Неизвестные студенты из БРС\",\n          collapsed: true,\n        };\n        skippedItem.nestedItems = skipped.map(({ title, students }) => ({\n          title: `${title}: ${students?.length ?? 0} ${pluralize(\n            students?.length ?? 0,\n            \"студент\",\n            \"студента\",\n            \"студентов\"\n          )}`,\n          nestedItems: students?.map((s) => ({ title: s })),\n          collapsed: false,\n          renderAsText: true,\n        }));\n        nestedItems.push(skippedItem);\n      }\n\n      if (hasErrors) {\n        mainItem.colored = true;\n      }\n      logItems.push(mainItem);\n\n      resolve(logItems);\n    });\n  }\n\n  startWork = async () => {\n    const { spreadsheetData, suitableDisciplines } = this.props.marksData;\n    const error = await this.marksManager.putMarksToBrsAsync(\n      spreadsheetData,\n      suitableDisciplines\n    );\n\n    if (error) {\n      if (typeof error === \"object\") {\n        this.props.onError(error.toString());\n      } else if (typeof error === \"string\") {\n        this.props.onError(error);\n      }\n    }\n\n    this.setState({\n      cancelPending: false,\n      okLoading: false,\n    });\n  };\n\n  cancelWork = () => {\n    this.setState({ cancelPending: true });\n    this.marksManager.cancel();\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Dialog open={true} maxWidth=\"md\" fullWidth className=\"worker-dialog\">\n          <MuiDialogTitle>Журнал действий</MuiDialogTitle>\n          <DialogContent dividers>\n            <NestedList items={this.state.logItems} />\n          </DialogContent>\n          <DialogActions>\n            <SubmitWithLoading\n              loading={this.state.okLoading}\n              onClick={this.props.onClosed}\n              title=\"ок\"\n            />\n            <SubmitWithLoading\n              loading={this.state.cancelPending}\n              disabled={!this.state.okLoading}\n              onClick={this.cancelWork}\n              title=\"отмена\"\n            />\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    );\n  }\n}\n\nexport interface MarksData {\n  spreadsheetData: SpreadsheetData;\n  suitableDisciplines: Discipline[];\n}\n\ninterface Props {\n  marksData: MarksData;\n  brsApi: BrsApi;\n  save: boolean;\n  onClosed: () => void;\n  onError: (errorMessage: string) => void;\n}\n\ninterface State {\n  okLoading: boolean;\n  cancelPending: boolean;\n  logItems: NestedItem[];\n}\n","import { TextField } from \"@material-ui/core\";\nimport SubmitWithLoading from \"../../shared/SubmitWithLoading\";\nimport React, { FormEvent, useState } from \"react\";\nimport { TABLE_URL_PATTERN, TABLE_TEMPLATE_URL } from \"../../../Constants\";\n\nexport default function GoogleTableFetchForm({ loading, onSubmit }: Props) {\n  const [tableUrl, setTableUrl] = useState(\"\");\n  const [urlError, setUrlError] = useState(null as null | string);\n\n  const handleUrlChanged = (event: React.ChangeEvent<{ value: string }>) => {\n    const target = event.target;\n    if (urlError) setUrlError(null);\n    setTableUrl(target.value);\n  };\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    const regExp =\n      /d\\/(?<spreadsheetId>[a-zA-Z0-9-_]+)\\/edit(#gid=(?<sheetId>[0-9]+))?/;\n    const spreadsheetInfo = tableUrl.match(regExp);\n\n    if (!spreadsheetInfo?.groups || !spreadsheetInfo.groups.spreadsheetId) {\n      setUrlError(\"Неверный url-адрес.\");\n      return null;\n    }\n\n    const spreadsheetId = spreadsheetInfo.groups.spreadsheetId;\n    const maybeSheetId = spreadsheetInfo.groups.sheetId || null;\n\n    onSubmit(spreadsheetId, maybeSheetId);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"vertical-margin-min\">\n      <TextField\n        name=\"table-url\"\n        label={\"Ссылка вида \" + TABLE_TEMPLATE_URL}\n        type=\"text\"\n        className=\"tableUrl\"\n        value={tableUrl}\n        onChange={handleUrlChanged}\n        error={!!urlError}\n        helperText={urlError}\n        required\n      />\n      <SubmitWithLoading\n        title=\"загрузить\"\n        loading={loading}\n        className=\"submit\"\n      />\n      <a\n        href={TABLE_URL_PATTERN}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"button-link\"\n      >\n        Пример таблицы для экспорта в БРС\n      </a>\n    </form>\n  );\n}\n\ninterface Props {\n  loading: boolean;\n  onSubmit: (spreadsheetId: string, sheetId: string | null) => void;\n}\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Slide,\n} from \"@material-ui/core\";\nimport { TransitionProps } from \"@material-ui/core/transitions\";\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function SessionExpiredAlert({\n  open,\n  sessionName,\n  onOk,\n}: Props) {\n  return (\n    <React.Fragment>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          Необходимо авторизоваться\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Кажется, действие сессии {sessionName} истекло.\n            <br />\n            Необходимо повторно авторизоваться.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions\n          style={{ display: \"flex\", justifyContent: \"space-around\" }}\n        >\n          <Button onClick={onOk} color=\"primary\">\n            Ок\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\ninterface Props {\n  open: boolean;\n  sessionName: string;\n  onOk: () => void;\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nexport default function LoadingPane() {\n  return (\n    <div className=\"loading-pane\">\n      <CircularProgress size={100} className=\"progress\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button, Container } from \"@material-ui/core\";\nimport GoogleTableFetch from \"../GoogleTableFetch\";\nimport BrsApi from \"../../../apis/BrsApi\";\nimport SessionExpiredAlert from \"../../shared/SessionExpiredAlert\";\nimport CustomAlert from \"../../shared/CustomAlert\";\nimport GoogleAuth from \"../../../apis/GoogleAuth\";\nimport BrsAuth from \"../../../apis/BrsAuth\";\nimport { StatusCode } from \"../../../helpers/CustomError\";\nimport LoadingPane from \"../LoadingPane\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default class WorkPage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      showControls: false,\n      runWork: false,\n      openSessionExpiredAlert: false,\n      sessionName: \"\",\n      errorMessage: \"\",\n      loading: true,\n      redirect: false,\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.googleAuth.ensureInitializedAsync();\n    await this.props.brsAuth.tryRestoreAsync();\n\n    const brsAuthorized = this.props.brsAuth.checkAuth();\n    if (!brsAuthorized) this.handleSessionExpired(\"БРС\");\n\n    const googleAuthorized = this.props.googleAuth.checkAuthorized();\n    if (!googleAuthorized) {\n      setTimeout(() => {\n        const googleAuthorized = this.props.googleAuth.checkAuthorized();\n        if (!googleAuthorized) this.handleSessionExpired(\"Google\");\n        else this.setState({ loading: false });\n      }, 1000);\n    } else {\n      this.setState({ loading: false });\n    }\n  }\n\n  handleError = (error: any) => {\n    const errorMessage: string = error.message || JSON.stringify(error);\n    if (error.statusCode)\n      if (error.statusCode === StatusCode.BrsUnauthorized)\n        this.handleSessionExpired(\"БРС\");\n      else this.handleSessionExpired(\"Google\");\n    else if (error.name === \"RequestError\")\n      this.setState({\n        errorMessage: \"В данный момент сервер недоступен. Попробуйте позже.\",\n      });\n    else this.setState({ errorMessage });\n  };\n\n  handleSessionExpired = (sessionName: SessionName) => {\n    this.setState({\n      openSessionExpiredAlert: true,\n      sessionName,\n      loading: false,\n    });\n  };\n\n  handleSessionExpiredOk = () => {\n    if (this.state.sessionName === \"БРС\") {\n      this.props.brsAuth.logout();\n      this.returnToLoginPage();\n      this.setState({ redirect: true });\n    } else if (this.state.sessionName === \"Google\") {\n      this.returnToLoginPage();\n    }\n  };\n\n  closeError = () => {\n    this.setState({ errorMessage: \"\" });\n  };\n\n  returnToLoginPage = () => {\n    this.setState({ redirect: true });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.loading && <LoadingPane />}\n        <SessionExpiredAlert\n          open={this.state.openSessionExpiredAlert}\n          sessionName={this.state.sessionName}\n          onOk={this.handleSessionExpiredOk}\n        />\n        {this.state.errorMessage && (\n          <CustomAlert\n            open={!!this.state.errorMessage}\n            message={this.state.errorMessage}\n            type=\"error\"\n            onClose={this.closeError}\n          />\n        )}\n        {this.state.redirect && <Redirect to=\"/\" />}\n        <div className=\"work-page\">\n          <Container maxWidth=\"md\">\n            <Button\n              variant=\"contained\"\n              style={{ marginTop: 10 }}\n              onClick={this.returnToLoginPage}\n            >\n              Вернуться на страницу входа\n            </Button>\n            <GoogleTableFetch\n              brsApi={this.props.brsApi}\n              onError={this.handleError}\n            />\n          </Container>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\ntype SessionName = \"БРС\" | \"Google\";\n\ninterface State {\n  showControls: boolean;\n  openSessionExpiredAlert: boolean;\n  sessionName: SessionName | \"\";\n  errorMessage: string;\n  runWork: boolean;\n  loading: boolean;\n  redirect: boolean;\n}\n\ninterface Props {\n  brsAuth: BrsAuth;\n  brsApi: BrsApi;\n  googleAuth: GoogleAuth;\n}\n","import React from \"react\";\nimport Context from \"../../Context\";\nimport WorkPage from \"./WorkPage\";\n\nexport default function WorkPageContainer() {\n  return (\n    <Context.Consumer>\n      {(context) =>\n        context && (\n          <WorkPage\n            brsAuth={context.brsAuth}\n            brsApi={context.brsApi}\n            googleAuth={context.googleAuth}\n          />\n        )\n      }\n    </Context.Consumer>\n  );\n}\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport BrsUrlProvider from \"./apis/BrsUrlProvider\";\nimport BrsAuth from \"./apis/BrsAuth\";\nimport GoogleAuth from \"./apis/GoogleAuth\";\nimport LoginPageContainer from \"./components/login/LoginPageContainer\";\nimport WorkPageContainer from \"./components/work/WorkPageContainer\";\nimport BrsApi from \"./apis/BrsApi\";\nimport Context from \"./Context\";\n\nconst urlProvider = new BrsUrlProvider(true);\nconst brsAuth = new BrsAuth(urlProvider);\nconst brsApi = new BrsApi(brsAuth, urlProvider);\nconst googleAuth = new GoogleAuth();\n\nexport default function App() {\n  return (\n    <Context.Provider value={{ brsAuth, brsApi, googleAuth }}>\n      <HashRouter hashType=\"noslash\">\n        <Switch>\n          <Route path=\"/work\" component={WorkPageContainer} />\n          <Route exact path=\"\" component={LoginPageContainer} />\n        </Switch>\n      </HashRouter>\n    </Context.Provider>\n  );\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}